var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","unpivot","unpivot2","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SQLInterface","SQLSyntax","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UnpivotArgs","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_streaming","new_streaming","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","replace_strict","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unpivot","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","Quarter","Random","Range","Rank","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[825,"polars::chunked_array::arithmetic"],[853,"polars::chunked_array::builder"],[1114,"polars::chunked_array::builder::list"],[1131,"polars::chunked_array::cast"],[1161,"polars::chunked_array::collect"],[1175,"polars::chunked_array::float"],[1177,"polars::chunked_array::from_iterator_par"],[1181,"polars::chunked_array::iterator"],[1251,"polars::chunked_array::iterator::par"],[1253,"polars::chunked_array::metadata"],[1497,"polars::chunked_array::object"],[1574,"polars::chunked_array::object::builder"],[1597,"polars::chunked_array::object::registry"],[1625,"polars::chunked_array::ops"],[1832,"polars::chunked_array::ops::arity"],[1867,"polars::chunked_array::ops::float_sorted_arg_max"],[1869,"polars::chunked_array::ops::gather"],[1872,"polars::chunked_array::ops::search_sorted"],[1903,"polars::chunked_array::ops::sort"],[1910,"polars::chunked_array::ops::sort::arg_bottom_k"],[1911,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1918,"polars::chunked_array::ops::sort::options"],[1931,"polars::chunked_array::temporal"],[1939,"polars::chunked_array::temporal::conversion"],[1942,"polars::datatypes"],[3381,"polars::datatypes::categorical"],[3398,"polars::datatypes::categorical::revmap"],[3404,"polars::datatypes::categorical::string_cache"],[3423,"polars::docs"],[3425,"polars::error"],[3513,"polars::error::PolarsError"],[3517,"polars::error::constants"],[3520,"polars::frame"],[3785,"polars::frame::explode"],[3815,"polars::frame::group_by"],[4055,"polars::frame::group_by::GroupByMethod"],[4056,"polars::frame::group_by::GroupsProxy"],[4058,"polars::frame::group_by::aggregations"],[4071,"polars::frame::group_by::expr"],[4074,"polars::frame::row"],[4184,"polars::functions"],[4186,"polars::prelude"],[9347,"polars::prelude::AggExpr"],[9354,"polars::prelude::BooleanFunction"],[9357,"polars::prelude::DslPlan"],[9411,"polars::prelude::Expr"],[9446,"polars::prelude::FunctionExpr"],[9468,"polars::prelude::GroupByMethod"],[9469,"polars::prelude::GroupsProxy"],[9471,"polars::prelude::LiteralValue"],[9474,"polars::prelude::PolarsError"],[9478,"polars::prelude::StringFunction"],[9492,"polars::prelude::TemporalFunction"],[9494,"polars::prelude::aggregations"],[9507,"polars::prelude::arity"],[9542,"polars::prelude::array"],[9561,"polars::prelude::binary"],[9577,"polars::prelude::cat"],[9578,"polars::prelude::chunkedarray"],[9645,"polars::prelude::chunkedarray::string"],[9685,"polars::prelude::chunkedarray::string::infer"],[9716,"polars::prelude::cloud"],[9764,"polars::prelude::cloud::options"],[9772,"polars::prelude::datatypes"],[10042,"polars::prelude::datatypes::categorical"],[10059,"polars::prelude::datatypes::categorical::revmap"],[10065,"polars::prelude::datatypes::categorical::string_cache"],[10069,"polars::prelude::datetime"],[10072,"polars::prelude::default_arrays"],[10078,"polars::prelude::dt"],[10130,"polars::prelude::expr"],[10133,"polars::prelude::fixed_size_list"],[10153,"polars::prelude::float_sorted_arg_max"],[10155,"polars::prelude::function_expr"],[10319,"polars::prelude::function_expr::BooleanFunction"],[10322,"polars::prelude::function_expr::FunctionExpr"],[10344,"polars::prelude::function_expr::StringFunction"],[10358,"polars::prelude::function_expr::TemporalFunction"],[10360,"polars::prelude::function_expr::cat"],[10362,"polars::prelude::function_expr::pow"],[10366,"polars::prelude::function_expr::rolling"],[10396,"polars::prelude::function_expr::rolling_by"],[10426,"polars::prelude::gather"],[10429,"polars::prelude::interpolate"],[10433,"polars::prelude::interpolate_by"],[10434,"polars::prelude::mode"],[10435,"polars::prelude::nan_propagating_aggregate"],[10439,"polars::prelude::null"],[10470,"polars::prelude::schema_inference"],[10497,"polars::prelude::search_sorted"],[10503,"polars::prelude::series"],[10525,"polars::prelude::slice"],[10528,"polars::prelude::sort"],[10535,"polars::prelude::sort::arg_bottom_k"],[10536,"polars::prelude::sort::arg_sort_multiple"],[10543,"polars::prelude::sort::options"],[10556,"polars::prelude::strings"],[10610,"polars::prelude::udf"],[10616,"polars::prelude::utf8"],[10620,"polars::series"],[11051,"polars::series::amortized_iter"],[11075,"polars::series::arithmetic"],[11096,"polars::series::arithmetic::checked"],[11102,"polars::series::ops"],[11130,"dyn_clone::sealed"],[11131,"polars_core::datatypes"],[11132,"polars_core::chunked_array"],[11133,"num_traits"],[11134,"num_traits::cast"],[11135,"polars_core::series"],[11136,"polars_error"],[11137,"core::result"],[11138,"polars_core::series::arithmetic::borrowed"],[11139,"polars_core::frame::group_by::proxy"],[11140,"polars_core::chunked_array::object"],[11141,"core::option"],[11142,"polars_arrow::array"],[11143,"alloc::boxed"],[11144,"core::iter::traits::iterator"],[11145,"polars_core::chunked_array::list::iterator"],[11146,"core::ops::function"],[11147,"core::marker"],[11148,"alloc::borrow"],[11149,"polars_core::series::amortized_iter"],[11150,"polars_core::datatypes::dtype"],[11151,"alloc::string"],[11152,"polars_core::chunked_array::ops::sort::options"],[11153,"polars_core::chunked_array::cast"],[11154,"polars_core::series::arithmetic::borrowed::checked"],[11155,"core::slice::iter"],[11156,"core::iter::adapters::map"],[11157,"alloc::vec"],[11158,"polars_core::chunked_array::metadata"],[11159,"core::iter::traits::double_ended"],[11160,"polars_arrow::offset"],[11161,"core::fmt"],[11162,"core::iter::traits::collect"],[11163,"polars_utils::iter::fallible"],[11164,"core::convert"],[11165,"polars_core::chunked_array::from_iterator"],[11166,"core::borrow"],[11167,"polars_arrow::bitmap::immutable"],[11168,"rayon::iter"],[11169,"polars_arrow::pushable"],[11170,"polars_arrow::trusted_len"],[11171,"polars_core::datatypes::any_value"],[11172,"polars_core::chunked_array::logical"],[11173,"polars_core::datatypes::time_unit"],[11174,"core::iter::traits::exact_size"],[11175,"polars_core::series::series_trait"],[11176,"polars_core::chunked_array::iterator"],[11177,"alloc::sync"],[11178,"core::ops::range"],[11179,"polars_core::datatypes::field"],[11180,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11181,"polars_core::chunked_array::ops::rolling_window"],[11182,"polars_ops::chunked_array::scatter"],[11183,"polars_utils::index"],[11184,"ahash::random_state"],[11185,"polars_utils::hashing"],[11186,"ndarray::data_repr"],[11187,"ndarray::dimension::dim"],[11188,"ndarray"],[11189,"either"],[11190,"core::any"],[11191,"polars_core::chunked_array::arithmetic::numeric"],[11192,"polars_core::chunked_array::builder::list::anonymous"],[11193,"polars_core::chunked_array::builder::list::boolean"],[11194,"polars_core::chunked_array::builder::list::primitive"],[11195,"polars_core::chunked_array::builder::list"],[11196,"polars_core::chunked_array::builder"],[11197,"polars_core::chunked_array::builder::list::binary"],[11198,"polars_core::chunked_array::builder::list::null"],[11199,"polars_core::chunked_array::builder::string"],[11200,"polars_arrow::array::binview"],[11201,"polars_core::chunked_array::builder::boolean"],[11202,"polars_core::chunked_array::builder::null"],[11203,"polars_core::chunked_array::builder::primitive"],[11204,"core::clone"],[11205,"polars_core::series::implementations::null"],[11206,"core::hash"],[11207,"polars_core::chunked_array::collect"],[11208,"polars_core::chunked_array::float"],[11209,"polars_core::chunked_array::from_iterator_par"],[11210,"polars_arrow::array::boolean"],[11211,"polars_arrow::array::fixed_size_list"],[11212,"polars_core::chunked_array::metadata::env"],[11213,"bitflags::iter"],[11214,"std::fs"],[11215,"std::sync::mutex"],[11216,"polars_arrow::datatypes"],[11217,"polars_arrow::bitmap::utils::iterator"],[11218,"polars_arrow::bitmap::utils::zip_validity"],[11219,"polars_core::chunked_array::object::builder"],[11220,"polars_core::chunked_array::object::registry"],[11221,"polars_core::chunked_array::ops"],[11222,"polars_arrow::legacy::array::slice"],[11223,"polars_core::chunked_array::ops::arity"],[11224,"polars_arrow::array::static_array"],[11225,"core::error"],[11226,"polars_arrow::array::primitive"],[11227,"polars_core::chunked_array::ops::search_sorted"],[11228,"polars_core::utils"],[11229,"polars_row::row"],[11230,"chrono::naive::datetime"],[11231,"chrono_tz::timezones"],[11232,"chrono::naive::time"],[11233,"polars_core::chunked_array::logical::struct_"],[11234,"polars_core::chunked_array::logical::categorical"],[11235,"polars_core::chunked_array::logical::categorical::builder"],[11236,"polars_arrow::array::static_array_collect"],[11237,"bytemuck::zeroable"],[11238,"polars_core::chunked_array::logical::categorical::revmap"],[11239,"polars_core::chunked_array::logical::categorical::merge"],[11240,"polars_arrow::types"],[11241,"polars_arrow::datatypes::physical_type"],[11242,"chrono::time_delta"],[11243,"chrono::naive::date"],[11244,"smartstring::config"],[11245,"smartstring"],[11246,"polars_core::datatypes::into_scalar"],[11247,"core::cmp"],[11248,"polars_core::frame"],[11249,"polars_core::chunked_array::logical::categorical::string_cache"],[11250,"polars_error::warning"],[11251,"alloc::collections"],[11252,"regex::error"],[11253,"std::io::error"],[11254,"polars_parquet::parquet::error"],[11255,"simdutf8::basic"],[11256,"planus::errors"],[11257,"polars_core::schema"],[11258,"polars_core::series::from"],[11259,"hashbrown::set"],[11260,"polars_arrow::datatypes::schema"],[11261,"polars_core::frame::row"],[11262,"polars_core::frame::group_by"],[11263,"polars_time::group_by::dynamic"],[11264,"polars_lazy::frame"],[11265,"polars_core::chunked_array::ndarray"],[11266,"polars_arrow::array::struct_"],[11267,"polars_arrow::record_batch"],[11268,"polars_core::frame::explode"],[11269,"polars_time::windows::duration"],[11270,"polars_utils::idx_vec"],[11271,"rayon::iter::plumbing"],[11272,"polars_plan::plans::aexpr"],[11273,"polars_core::frame::group_by::into_groups"],[11274,"core::iter::adapters::copied"],[11275,"core::iter::adapters::zip"],[11276,"polars_utils::float"],[11277,"polars_arrow::types::native"],[11278,"polars_core::frame::group_by::aggregations::agg_list"],[11279,"polars_core::frame::group_by::aggregations"],[11280,"polars_core::frame::group_by::expr"],[11281,"polars_core::frame::row::av_buffer"],[11282,"polars_utils::arena"],[11283,"polars_plan::plans::ir"],[11284,"polars_ops::frame::join::hash_join"],[11285,"polars_ops::frame::join::args"],[11286,"polars_ops::chunked_array::gather::chunked"],[11287,"polars_ops::frame"],[11288,"polars_io::csv::read::reader"],[11289,"polars_io::predicates"],[11290,"polars_io::mmap"],[11291,"polars_plan::dsl::expr"],[11292,"core::alloc"],[11293,"polars_plan::plans::anonymous_scan"],[11294,"polars_lazy::scan::anonymous_scan"],[11295,"polars_plan::dsl::expr_dyn_fn"],[11296,"polars_plan::plans::visitor"],[11297,"polars_plan::dsl::function_expr"],[11298,"polars_ops::series::ops::arg_min_max"],[11299,"polars_plan::dsl::array"],[11300,"polars_plan::dsl::list"],[11301,"polars_plan::dsl::function_expr::schema"],[11302,"polars_io::ipc::ipc_stream"],[11303,"std::io"],[11304,"polars_ops::chunked_array::binary"],[11305,"polars_time::chunkedarray::string"],[11306,"std::os::fd::owned"],[11307,"polars_ops::chunked_array::list"],[11308,"std::os::fd::raw"],[11309,"polars_ops::series::ops"],[11310,"polars_ops::chunked_array::strings"],[11311,"core::mem::maybe_uninit"],[11312,"polars_ops::chunked_array::strings::namespace"],[11313,"polars_io::csv::read::read_impl::batched"],[11314,"polars_io::csv::write::writer"],[11315,"polars_io::ipc::write"],[11316,"polars_io::parquet::read::reader"],[11317,"polars_io::parquet::read::read_impl"],[11318,"polars_io::parquet::write::writer"],[11319,"polars_io::parquet::write::batched_writer"],[11320,"polars_plan::dsl::binary"],[11321,"polars_plan::dsl::udf"],[11322,"polars_lazy::frame::exitable"],[11323,"hashbrown::map"],[11324,"polars_plan::dsl::cat"],[11325,"polars_ops::series::ops::round"],[11326,"polars_time::series"],[11327,"polars_lazy::scan::csv"],[11328,"polars_lazy::scan::ipc"],[11329,"polars_lazy::scan::ndjson"],[11330,"polars_lazy::scan::parquet"],[11331,"polars_time::chunkedarray::rolling_window"],[11332,"polars_time::windows::bounds"],[11333,"polars_time::windows::group_by"],[11334,"polars_time::windows::window"],[11335,"polars_io::csv::read::options"],[11336,"polars_io::csv::write::options"],[11337,"polars_io::ipc::ipc_file"],[11338,"polars_io::json"],[11339,"polars_io::parquet::read::options"],[11340,"polars_ops::frame::join::asof"],[11341,"polars_io::parquet::write::options"],[11342,"polars_ops::series::ops::interpolation::interpolate"],[11343,"polars_ops::series::ops::is_between"],[11344,"polars_ops::series::ops::rank"],[11345,"polars_plan::plans"],[11346,"polars_plan::dsl::arity"],[11347,"polars_plan::dsl::function_expr::boolean"],[11348,"polars_plan::dsl::function_expr::cat"],[11349,"polars_plan::dsl::function_expr::datetime"],[11350,"polars_plan::dsl::function_expr::pow"],[11351,"polars_plan::dsl::function_expr::strings"],[11352,"polars_plan::dsl::functions::temporal"],[11353,"polars_plan::dsl::options"],[11354,"polars_plan::frame::opt_state"],[11355,"polars_plan::plans::lit"],[11356,"polars_plan::plans::options"],[11357,"polars_parquet::arrow::write"],[11358,"polars_parquet::parquet::metadata::file_metadata"],[11359,"polars_arrow::legacy::kernels::rolling"],[11360,"polars_arrow::legacy::kernels::time"],[11361,"polars_lazy::scan::file_list_reader"],[11362,"polars_io::cloud::options"],[11363,"polars_parquet::parquet::metadata::column_order"],[11364,"polars_ops::chunked_array::binary::namespace"],[11365,"polars_io::ndjson::core"],[11366,"std::path"],[11367,"polars_io::shared"],[11368,"polars_ops::frame::join::cross_join"],[11369,"polars_lazy::dsl::eval"],[11370,"polars_time::chunkedarray::date"],[11371,"polars_time::chunkedarray::datetime"],[11372,"polars_time::chunkedarray::duration"],[11373,"core::default"],[11374,"core::ffi::c_str"],[11375,"polars_parquet::parquet::metadata::row_metadata"],[11376,"polars_core::series::ops"],[11377,"polars_plan::dsl::dt"],[11378,"polars_ops::series::ops::various"],[11379,"polars_arrow::scalar"],[11380,"polars_lazy::dsl::list"],[11381,"crossterm::command"],[11382,"polars_plan::dsl::struct_"],[11383,"polars_plan::plans::apply"],[11384,"polars_plan::dsl::function_expr::list"],[11385,"polars_plan::dsl::function_expr::binary"],[11386,"polars_plan::dsl::function_expr::struct_"],[11387,"polars_plan::dsl::function_expr::range"],[11388,"polars_plan::dsl::function_expr::array"],[11389,"polars_parquet::arrow::read::statistics"],[11390,"std::ffi::os_str"],[11391,"alloc::ffi::c_str"],[11392,"polars_arrow::array::struct_::mutable"],[11393,"polars_arrow::array::growable::structure"],[11394,"polars_arrow::legacy::array::default_arrays"],[11395,"polars_arrow::buffer::immutable"],[11396,"polars_arrow::array::list"],[11397,"polars_core::named_from"],[11398,"polars_ops::frame::join"],[11399,"polars_arrow::legacy::array"],[11400,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11401,"polars_time::chunkedarray::time"],[11402,"core::num::nonzero"],[11403,"parquet_format_safe::parquet_format"],[11404,"polars_arrow::array::struct_::iterator"],[11405,"polars_ops::frame::join::asof::groups"],[11406,"polars_ops::chunked_array::list::namespace"],[11407,"polars_plan::dsl::name"],[11408,"polars_io::options"],[11409,"polars_core::chunked_array::ops::aggregate"],[11410,"polars_core::chunked_array::ops::aggregate::quantile"],[11411,"polars_arrow::legacy::index"],[11412,"polars_ops::chunked_array::strings::split"],[11413,"core::pin"],[11414,"core::io::borrowed_buf"],[11415,"parquet_format_safe::thrift::varint::decode"],[11416,"polars_time::chunkedarray::rolling_window::dispatch"],[11417,"polars_time::round"],[11418,"polars_parquet::parquet::metadata::schema_descriptor"],[11419,"polars_core::chunked_array::ops::aggregate::var"],[11420,"polars_plan::dsl::string"],[11421,"polars_ops::series::ops::to_dummies"],[11422,"polars_time::truncate"],[11423,"std::sync::rwlock"],[11424,"polars_io::csv::read::schema_inference"],[11425,"polars_time::upsample"],[11426,"polars_core::hashing::vector_hasher"],[11427,"alloc::collections::btree::map"],[11428,"polars_ops::chunked_array::array::namespace"],[11429,"polars_ops::chunked_array::array"],[11430,"polars_time::chunkedarray::string::patterns"],[11431,"polars_time::chunkedarray::string::infer"],[11432,"polars_arrow::legacy::array::fixed_size_list"],[11433,"polars_plan::dsl::function_expr::rolling"],[11434,"polars_plan::dsl::function_expr::rolling_by"],[11435,"polars_arrow::legacy::array::null"],[11436,"polars_arrow::bitmap::mutable"],[11437,"polars_arrow::array::utf8"],[11438,"polars_arrow::array::binary"],[11439,"polars_core::series::iterator"],[11440,"alloc::rc"],[11441,"polars_core"],[11442,"polars_core::chunked_array::iterator::par"],[11443,"polars_core::chunked_array::object::extension"],[11444,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11445,"polars_core::chunked_array::ops::gather"],[11446,"polars_core::chunked_array::ops::sort"],[11447,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11448,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11449,"polars_core::chunked_array::temporal"],[11450,"polars_core::chunked_array::temporal::conversion"],[11451,"polars_core::chunked_array::temporal::time"],[11452,"polars_core::chunked_array::logical::date"],[11453,"polars_core::chunked_array::logical::datetime"],[11454,"polars_core::chunked_array::logical::decimal"],[11455,"polars_core::chunked_array::logical::duration"],[11456,"polars_core::datatypes::aliases"],[11457,"polars_utils::aliases"],[11458,"polars_core::chunked_array::logical::time"],[11459,"polars_error::constants"],[11460,"polars_core::functions"],[11461,"polars_io::utils"],[11462,"polars_io::parquet::metadata"],[11463,"polars_arrow::legacy::prelude"],[11464,"polars_ops::series::ops::rolling"],[11465,"polars_parquet::parquet::write"],[11466,"polars_ops::frame::join::general"],[11467,"polars_ops::series::ops::abs"],[11468,"polars_plan::dsl::functions::selectors"],[11469,"polars_plan::dsl::functions::horizontal"],[11470,"polars_plan::dsl::functions::arity"],[11471,"polars_plan::dsl"],[11472,"polars_plan::dsl::functions::range"],[11473,"polars_plan::dsl::functions::index"],[11474,"polars_ops::chunked_array"],[11475,"polars_plan::dsl::functions::coerce"],[11476,"polars_plan::dsl::functions::syntactic_sugar"],[11477,"polars_time::base_utc_offset"],[11478,"polars_time"],[11479,"polars_ops::series::ops::clip"],[11480,"polars_io"],[11481,"polars_ops::series::ops::horizontal"],[11482,"polars_lazy::dsl::functions"],[11483,"polars_plan::dsl::functions::concat"],[11484,"polars_ops::series::ops::index"],[11485,"polars_io::csv::read::parser"],[11486,"polars_ops::series::ops::cum_agg"],[11487,"polars_ops::series::ops::diff"],[11488,"polars_time::dst_offset"],[11489,"polars_ops::series::ops::floor_divide"],[11490,"polars_ops::chunked_array::strings::concat"],[11491,"polars_ops::chunked_array::datetime::replace_time_zone"],[11492,"polars_time::date_range"],[11493,"polars_ops::series::ops::interpolation"],[11494,"polars_ops::series::ops::interpolation::interpolate_by"],[11495,"polars_io::csv::read::utils"],[11496,"polars_ops::series::ops::is_first_distinct"],[11497,"polars_ops::series::ops::is_in"],[11498,"polars_ops::series::ops::is_last_distinct"],[11499,"polars_io::parquet::read::utils"],[11500,"polars_ops::series::ops::negate"],[11501,"polars_ops::series::ops::not"],[11502,"polars_ops::series::ops::int_range"],[11503,"polars_plan::dsl::functions::repeat"],[11504,"polars_ops::chunked_array::repeat_by"],[11505,"polars_ops::series::ops::replace"],[11506,"polars_io::csv::read"],[11507,"polars_ops::chunked_array::strings::strip"],[11508,"polars_time::chunkedarray"],[11509,"polars_io::cloud"],[11510,"polars_ops::chunked_array::mode"],[11511,"polars_ops::chunked_array::nan_propagating_aggregate"],[11512,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{n}}{l{n}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{f{{l{A`}}}}{f{{Ad{Ab}}}}}}{{{f{{l{c}}}}e}{}Af{AhAj}}{{{l{c}}{l{c}}}{}Af}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{l{Al}}{l{Al}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{f{{l{Al}}}}{f{{l{Al}}}}}}{{{f{{l{Al}}}}{f{An}}}}{{{l{A`}}{l{A`}}}}{{{l{c}}e}{}Af{AhAj}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{n}}}}{f{Bh}}}B`}{{{f{{l{{Bj{c}}}}}}{f{Bh}}}B`Bl}{{{f{{l{A`}}}}{f{Bh}}}B`}{{{f{{l{c}}}}{f{Bh}}}B`Af}{{{f{{l{Al}}}}{f{Bh}}}B`}{{{f{{l{Bn}}}}{f{Bh}}}B`}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{n}}}}}d}{{{f{{l{n}}}}}{{C`{d}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bn}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{An}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bn}}}}{f{An}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{C`{{f{{Ad{Ab}}}}}}}{{Dd{{C`{{Dj{{Ad{Ab}}}}}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}Af{{Df{C`}{{Dd{C`}}}}Dh}}{{{f{{l{{Bj{c}}}}}}e}{{l{{Bj{c}}}}}Bl{{Df{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Df{{C`{{f{An}}}}}{{Dd{{C`{{Dj{An}}}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{Bn}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bn}}}}c}{{l{Bn}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}Af{{Df{}{{Dd{}}}}Dh}}{{{f{{l{n}}}}{f{Df}}}{{l{n}}}}{{{f{{l{Al}}}}{f{Df}}}{{l{Al}}}}{{{f{{l{A`}}}}{f{Df}}}{{l{A`}}}}{{{f{{l{c}}}}{f{Df}}}{{l{c}}}Af}{{{f{{l{c}}}}{f{Df}}}{{l{e}}}AfDb}{{{f{{l{Al}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{A`}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{n}}}}{f{Df}}}{{l{c}}}Db}{{{f{Cl{l{c}}}}e}bAf{{Df{}{{Dd{}}}}Dh}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dn{{f{An}}}{{Dd{{f{An}}}}}}}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dn{{f{{Ad{Ab}}}}}{{Dd{{f{{Ad{Ab}}}}}}}}}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dn{{f{An}}{f{ClEf}}}}}}{{{f{{l{Bn}}}}{f{Df}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{j}}}}{f{Df}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{j}}}}e{f{Cl{Ad{c}}}}}b{}{{Df{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{A`}}}}e{f{Cl{Ad{c}}}}}b{}{{Df{{C`{{f{{Ad{Ab}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{c}}}}g{f{Cl{Ad{e}}}}}bAf{}{{Df{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{{Bj{c}}}}}}g{f{Cl{Ad{e}}}}}bBl{}{{Df{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{Al}}}}e{f{Cl{Ad{c}}}}}b{}{{Df{{C`{{f{An}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{n}}}}e{f{Cl{Ad{c}}}}}b{}{{Df{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{d}{{Dd{d}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{f{{Ad{Ab}}}}}{{Dd{{Dj{{Ad{Ab}}}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{B`}{{Dd{B`}}}}Dh}}{{{f{{l{{Bj{c}}}}}}e}{{l{{Bj{c}}}}}Bl{{Df{{f{c}}}{{Dd{c}}}}Dh}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Df{{f{An}}}{{Dd{{Dj{An}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}Af{{Df{}{{Dd{}}}}Dh}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Eh}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}Af}{{{f{{l{n}}}}Ej}{{l{El}}}}{{{f{{l{Al}}}}Ej}{{l{El}}}}{{{f{{l{A`}}}}Ej}{{l{El}}}}{{{f{{l{Eh}}}}{f{{Ad{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}{f{{Ad{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{Ad{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}Af}{{{f{{l{Al}}}}{f{{Ad{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{A`}}}}{f{{Ad{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}Af}{{{f{{l{A`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Al}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bj{c}}}}}}}{{Bd{{l{El}}Bb}}}Bl}`{{{f{{l{Bn}}}}}{{f{{l{Bn}}}}}}{{{f{{l{A`}}}}}{{f{{l{A`}}}}}}{{{f{{l{Al}}}}}{{l{A`}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{Al}}}}}{{f{{l{Al}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{l{n}}{l{n}}}}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}210012{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}Af{{Df{}{{Dd{}}}}Dh}Af}{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}Af}{{{f{{l{Bn}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Al}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Eh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}Af}{{{f{{l{Al}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Bn}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Eh}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAj}{{{f{{l{c}}}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Fh}}}}}}}Db}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{Fh}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fn{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}`{{{f{Cl{l{c}}}}}b{DbAf}}`{{{f{{l{c}}}}}{{Bd{{f{Ad}}Bb}}}Af}{{{f{Cl{l{c}}}}{f{{l{c}}}}G`}bDb}{{{f{Cl{l{c}}}}{f{{l{e}}}}G`}bDbDb}{{{f{{l{c}}}}}{{`{Gb}}}Af}{{}{{l{c}}}Db}{Fh{{f{c}}}{}}0{Fh{{f{Clc}}}{}}0{{{l{c}}e}{}Af{AhAj}}{{{f{{l{c}}}}e}{}Af{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{l{c}}{l{c}}}{}Af}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{Fhb}{{{f{Cl{l{c}}}}}bDb}1{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}}{{f{{Gd{c}}}}}Db}{{{f{{l{c}}}}e}{{l{n}}}AfAj}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{n}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}Af}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Al}}}}{f{An}}}{{l{n}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{n}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}{{{f{{l{A`}}}}{f{{Ad{Ab}}}}}{{l{n}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{n}}}}301674825{{{f{{l{Bn}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bAf}{{{f{{l{A`}}}}{f{{Ad{Ab}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Af}{{{f{{l{n}}}}d}{{Bd{{l{n}}Bb}}}}{{{f{{l{Eh}}}}{f{{l{n}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{{l{Bn}}}}{f{{l{n}}}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{c}}}}{f{{l{n}}}}}{{Bd{{l{c}}Bb}}}Af}{{{f{{l{A`}}}}{f{{l{n}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Al}}}}{f{{l{n}}}}}{{Bd{{l{Al}}Bb}}}}{{{f{{l{{Bj{c}}}}}}{f{{l{n}}}}}{{Bd{{l{{Bj{c}}}}Bb}}}Bl}{{{f{{l{j}}}}{f{{l{n}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}}{{C`{Fh}}}Db}`{{{f{{l{c}}}}{f{ClGl}}}{{Bd{bGn}}}Af}{{{f{{l{n}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{Al}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{Bn}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{A`}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{j}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{{Bj{c}}}}}}{f{ClGl}}}{{Bd{bGn}}}Bl}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{Bn}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{cc{}}{c{{l{e}}}Cd{{Db{}{{H`{c}}}}}}1{{{f{An}}c}{{l{e}}}Hb{{Db{}{{H`{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{H`{}}}}Db}Hb}{{{f{An}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{An}}{Fn{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{e{{l{Al}}}{{Hf{An}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{Hb{}{{Cb{C`}}}}}Af}{c{{l{j}}}{{Hb{}{{Cb{{C`{B`}}}}}}}}{c{{l{n}}}{{Hb{}{{Cb{d}}}}}}{e{{l{A`}}}{{Hf{{Ad{Ab}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{e{{l{{Bj{c}}}}}Bl{{Hb{}{{Cb{{C`{c}}}}}}}}{e{{l{A`}}}{{Hh{{Ad{Ab}}}}}{{Hb{}{{Cb{c}}}}}}{e{{l{j}}}{{Hj{B`}}}{{Hb{}{{Cb{c}}}}}}{c{{l{n}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{c{{l{j}}}{{Hb{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{e{{l{Al}}}{{Hh{An}}}{{Hb{}{{Cb{c}}}}}}{c{{l{e}}}{{Hb{}{{Cb{{Gj{Fn{C`{Hl}}}}}}}}}Af}{{{f{An}}e}{{l{{Bj{c}}}}}Bl{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}{{l{Al}}}{{Hf{An}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}Af}{{{f{An}}e}{{l{A`}}}{{Hf{{Ad{Ab}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}c}{{l{n}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{e{{l{Eh}}}{{Hf{{Ad{Ab}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}:><;{e{{l{Eh}}}{{Hh{{Ad{Ab}}}}}{{Hb{}{{Cb{c}}}}}}{e{{l{Al}}}{{Hf{An}}}{{Hb{}{{Cb{{C`{c}}}}}}}}9;{c{{l{j}}}{{Hb{}{{Cb{{C`{B`}}}}}}}}{c{{l{e}}}{{Hb{}{{Cb{C`}}}}}Af}{e{{l{A`}}}{{Hf{{Ad{Ab}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}{{l{Al}}}{{Hf{An}}}{{Ch{}{{Cb{c}}}}}}{{{f{An}}e}{{l{{Bj{c}}}}}Bl{{Ch{}{{Cb{c}}}}}}{{{f{An}}e}{{l{A`}}}{{Hf{{Ad{Ab}}}}}{{Ch{}{{Cb{c}}}}}}{{{f{An}}c}{{l{n}}}{{Ch{}{{Cb{d}}}}}}{{{f{An}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}Af}`{c{{l{e}}}{{Hn{}{{Cb{C`}}}}}Af}{e{{l{Al}}}{{Hh{An}}I`IbId}{{Hn{}{{Cb{c}}}}}}{e{{l{Al}}}{{Hf{An}}I`Ib}{{Hn{}{{Cb{{C`{c}}}}}}}}{e{{l{A`}}}{{Hf{{Ad{Ab}}}}I`Ib}{{Hn{}{{Cb{{C`{c}}}}}}}}{c{{l{n}}}{{Hn{}{{Cb{d}}}}}}{e{{l{A`}}}{{Hh{{Ad{Ab}}}}I`IbId}{{Hn{}{{Cb{c}}}}}}{c{{l{j}}}{{Hn{}{{Cb{{C`{B`}}}}}}}}{c{{l{n}}}{{Hn{}{{Cb{{C`{d}}}}}}}}{{c{f{An}}Ed}{{l{j}}}{{Hn{}{{Cb{{C`{B`}}}}}}}}{{{f{An}}{f{{Ad{c}}}}}{{l{A`}}}{{Hf{{Ad{Ab}}}}}}{{{f{An}}{f{Ad}}}{{l{c}}}Af}{{{f{An}}{f{{Ad{c}}}}}{{l{Al}}}{{Hf{An}}}}{{{f{An}}{f{{Ad{d}}}}}{{l{n}}}}{{{f{An}}{f{{Ad{c}}}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}{f{{Ad{{C`{c}}}}}}}{{l{Al}}}{{Hf{An}}}}{{{f{An}}{f{{Ad{{C`{c}}}}}}}{{l{A`}}}{{Hf{{Ad{Ab}}}}}}{{{f{An}}{f{{Ad{{C`{c}}}}}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}{f{{Ad{C`}}}}}{{l{c}}}Af}{{{f{An}}{f{{Ad{{C`{d}}}}}}}{{l{n}}}}{c{{l{e}}}{{If{}{{Cb{C`}}}}}Af}{c{{l{n}}}{{If{}{{Cb{{C`{d}}}}}}}}{{{f{An}}Fn}{{l{c}}}Af}{{{f{An}}Fn{C`{Hl}}}{{l{c}}}Af}{{{f{An}}cFh}{{l{{Bj{c}}}}}Bl}{{{f{An}}{f{B`}}Fh}{{l{Bn}}}}{{{f{An}}{f{{Ad{Ab}}}}Fh}{{l{A`}}}}{{{f{An}}Fh}{{l{c}}}Af}{{{f{An}}dFh}{{l{n}}}}{{{f{An}}{f{B`}}Fh}{{l{j}}}}{{{f{An}}{f{An}}Fh}{{l{Al}}}}{{{f{An}}{f{{Ad{Ab}}}}Fh}{{l{Eh}}}}4{{{f{An}}Fh}{{l{n}}}}{{{f{An}}Fh}{{l{A`}}}}{{{f{An}}Fh}{{l{{Bj{c}}}}}Bl}{{{f{An}}Fh}{{l{Al}}}}{{{f{An}}Fh}{{l{Eh}}}}{{{f{An}}Fh}{{l{Bn}}}}{{{f{An}}Fh}{{l{j}}}}{{{f{{l{c}}}}Fh}{{l{c}}}Db}{{{f{An}}Fh{f{Ed}}}{{l{j}}}}{{{f{An}}Fh{f{Ed}}Fh}{{l{Bn}}}}{{{f{{l{c}}}}Fh}C`Db}{{{f{{l{j}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{Bn}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{Al}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{{Bj{c}}}}}}Fh}{{Bd{IhBb}}}Bl}{{{f{{l{A`}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{n}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{Eh}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{c}}}}Fh}{{Bd{IhBb}}}Af}{{{f{{l{j}}}}Fh}Ih}{{{f{{l{Eh}}}}Fh}Ih}{{{f{{l{Bn}}}}Fh}Ih}{{{f{{l{n}}}}Fh}Ih}{{{f{{l{{Bj{c}}}}}}Fh}IhBl}{{{f{{l{c}}}}Fh}IhAf}{{{f{{l{A`}}}}Fh}Ih}{{{f{{l{Al}}}}Fh}Ih}{{{f{{l{j}}}}Fh}{{C`{B`}}}}{{{f{{l{Bn}}}}Fh}{{C`{B`}}}}{{{f{{l{c}}}}}{{C`{Ij}}}Db}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}IlDb}{{{f{{l{Bn}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{c}}}}}{{C`{f}}}Db}0{{{f{{l{{Bj{c}}}}}}Fh}{{C`{{f{In}}}}}Bl}0{{{f{{l{c}}}}Fh}C`Db}{{{f{{l{Al}}}}}Fh}{{{f{{l{Bn}}}}}Fh}{{{f{{l{Eh}}}}}Fh}{{{f{{l{j}}}}}Fh}{{{f{{l{Eh}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}Af}{{{f{{l{n}}}}dd}{{Bd{BhBb}}}}{{{f{{l{A`}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Bn}}}}dd}{{Bd{BhBb}}}}{{{f{{l{{Bj{c}}}}}}dd}{{Bd{BhBb}}}Bl}{{{f{{l{Al}}}}dd}{{Bd{BhBb}}}}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}FhdFh}BhF`}{{{f{{l{Al}}}}{f{An}}}{{l{n}}}}{{{f{{l{A`}}}}{f{{Ad{Ab}}}}}{{l{n}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{n}}}}{{{f{{l{c}}}}e}{{l{n}}}AfAj}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{n}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{n}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}Af}201478356{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Fh}}}{{l{c}}}Db}{{}Fh}0{{FhJ`{C`{Jb}}}{{l{c}}}Af}{{{f{{l{Bn}}}}}{{f{Ed}}}}{{{f{{l{j}}}}}{{f{Ed}}}}{ce{}{}}0{{{l{Jd}}}{{Jh{JfJd}}}}{{{l{Jj}}Jl{C`{Ef}}}{{Jh{JnJj}}}}{{{l{K`}}{C`{Fh}}Fh}{{Bd{{Jh{KbK`}}Bb}}}}{{{l{K`}}{C`{Fh}}Fh}{{Jh{KbK`}}}}{{{l{Jj}}Jl}{{Jh{KdJj}}}}{{{f{{l{j}}}}}}{{{f{{l{Eh}}}}}}{{{f{{l{n}}}}}}{{{f{{l{Al}}}}}}{{{f{{l{A`}}}}}}{{{f{{l{Bn}}}}}}{{{f{{l{c}}}}}{}Af}{{{f{{l{{Bj{c}}}}}}}{}Bl}{{{f{{l{c}}}}}{{`{I`IbKfGbIf}}}Af}{{{l{c}}}B`Db}{{{l{K`}}}B`}{{{l{Jj}}}{{Jh{KhJj}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{n}}}Kj}000{{{f{{l{c}}}}}{{l{n}}}Db}02{{{f{{l{c}}}}}KlDb}{{{f{{l{c}}}}}{{`{Kn}}}Db}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{{l{c}}}}}}}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gf}}}}}}}}{{{f{{l{c}}}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hl}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Fh}}}Db}{{{f{{l{c}}}}}{{L`{c}}}Db}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{l{c}}{l{c}}}{}Af}{{{f{{l{c}}}}}{}Af}{{{l{c}}}{}Af}10{{{f{{l{c}}}}}FhDb}0{{{f{{l{c}}}}e}{{l{c}}}Af{AhLb}}00{{{f{{l{c}}}}Fh}{{l{c}}}Db}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}Af}{{{f{{l{Al}}}}{f{An}}}{{l{n}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{n}}}}{{{f{{l{A`}}}}{f{{Ad{Ab}}}}}{{l{n}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}{{{f{{l{c}}}}e}{{l{n}}}AfAj}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{n}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{n}}}}528036174{{{f{{l{c}}}}}C`Af}{{{f{{l{n}}}}}{{C`{d}}}}{{{f{{l{A`}}}}}Ld}{{{f{{l{c}}}}}LdAf}{{{f{{l{n}}}}}Ld}{{{f{{l{Al}}}}}Ld}{{{f{{l{c}}}}}{{C`{Lf}}}Af}{{{f{{l{n}}}}}{{C`{Lf}}}}{{{f{{l{Eb}}}}}{{C`{Lf}}}}{{{f{{l{E`}}}}}{{C`{J`}}}}{{{f{{l{c}}}}}{{C`{Lf}}}F`}{{{f{{l{E`}}}}}Ld}{{{f{{l{c}}}}}LdF`}{{{f{{l{Eb}}}}}Ld}{{{f{Cl{l{c}}}}{Gd{c}}}bDb}`{{{f{{l{c}}}}}{{C`{{f{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{f{{Lh{{Gd{c}}}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Lh{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{Lh{{Gd{c}}}}}Db}{{{f{{l{n}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`Af}{{{f{{l{c}}}}}{{C`{Gj}}}Af}{{{f{{l{c}}}}}LdAf}{{{f{{l{Al}}}}}Ld}{{{f{{l{n}}}}}Ld}{{{f{{l{A`}}}}}Ld}{{{f{An}}{f{Ad}}}{{l{c}}}Af}{{{f{An}}{f{{Ad{Ab}}}}FhFh}{{l{n}}}}{{{l{c}}{l{c}}}{}Af}{{{l{c}}e}{}Af{AhAj}}{{{f{{l{c}}}}e}{}Af{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}FhDb}{{{f{{l{A`}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{Bd{FhBb}}}Af}{{{f{{l{Al}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{f{An}}}Db}{{{f{An}}c}{{l{Jj}}}{{Hf{{Ad{{C`{Gf}}}}}}}}{{{f{An}}c}{{l{Lj}}}{{Hf{{Ad{Ll}}}}}}{{{f{An}}c}{{l{Ln}}}{{Hf{{Ad{M`}}}}}}{{{f{An}}c}{{l{Mb}}}{{Hf{{Ad{Md}}}}}}{{{f{An}}c}{{l{Al}}}{{Hf{{Ad{{C`{{f{An}}}}}}}}}}{{{f{An}}{Mf{Ij}}}{{l{El}}}}{{{f{An}}c}{{l{A`}}}{{Hf{{Ad{{C`{{f{{Ad{Ab}}}}}}}}}}}}{{{f{An}}c}{{l{Lj}}}{{Hf{{Ad{{C`{Ll}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hf{{Ad{{C`{d}}}}}}}}{{{f{An}}c}{{l{A`}}}{{Hf{{Ad{{Dj{{Ad{Ab}}}}}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hf{{Ad{{C`{Lf}}}}}}}}{{{f{An}}c}{{l{A`}}}{{Hf{{Ad{{f{{Ad{Ab}}}}}}}}}}{{{f{An}}c}{{l{Al}}}{{Hf{{Ad{{C`{Ef}}}}}}}}{{{f{An}}c}{{l{E`}}}{{Hf{{Ad{{C`{J`}}}}}}}}{{{f{An}}c}{{l{Mh}}}{{Hf{{Ad{{C`{Ab}}}}}}}}{{{f{An}}c}{{l{Mh}}}{{Hf{{Ad{Ab}}}}}}{{{f{An}}{Mf{Jb}}}{{l{Mj}}}}{{{f{An}}c}{{l{A`}}}{{Hf{{Ad{{Fn{Ab}}}}}}}}{{{f{An}}{Mf{Gf}}}{{l{Jj}}}}{{{f{An}}c}{{l{El}}}{{Hf{{Ad{{C`{Ij}}}}}}}}{{{f{An}}c}{{l{Al}}}{{Hf{{Ad{Ef}}}}}}{{{f{An}}{f{{Ad{c}}}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}c}{{l{Al}}}{{Hf{{Ad{{f{An}}}}}}}}{{{f{An}}c}{{l{Jd}}}{{Hf{{Ad{{C`{Ml}}}}}}}}{{{f{An}}c}{{l{Al}}}{{Hf{{Ad{{C`{{Dj{An}}}}}}}}}}{{{f{An}}c}{{l{A`}}}{{Hf{{Ad{{C`{{Dj{{Ad{Ab}}}}}}}}}}}}{{{f{An}}c}{{l{Jj}}}{{Hf{{Ad{Gf}}}}}}{{{f{An}}c}{{l{Jd}}}{{Hf{{Ad{Ml}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hf{{Ad{Lf}}}}}}{{{f{An}}c}{{l{Mj}}}{{Hf{{Ad{{C`{Jb}}}}}}}}{{{f{An}}c}{{l{Mj}}}{{Hf{{Ad{Jb}}}}}}{{{f{An}}e}{{l{{Bj{c}}}}}Bl{{Hf{{Ad{{C`{c}}}}}}}}{{{f{An}}c}{{l{Mb}}}{{Hf{{Ad{{C`{Md}}}}}}}}{{{f{An}}c}{{l{Ln}}}{{Hf{{Ad{{C`{M`}}}}}}}}{{{f{An}}c}{{l{A`}}}{{Hf{{Ad{{C`{{Fn{Ab}}}}}}}}}}{{{f{An}}{Mf{Ml}}}{{l{Jd}}}}{{{f{An}}c}{{l{E`}}}{{Hf{{Ad{J`}}}}}}{{{f{An}}c}{{l{El}}}{{Hf{{Ad{Ij}}}}}}{{{f{An}}c}{{l{Al}}}{{Hf{{Ad{{Dj{An}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hf{{Ad{d}}}}}}{{{f{An}}}{{l{{Bj{c}}}}}Bl}{{{f{{l{n}}}}FhFh}{{l{n}}}}{{{f{{l{A`}}}}FhFh}{{l{A`}}}}{{{f{{l{{Bj{c}}}}}}FhFh}{{l{{Bj{c}}}}}Bl}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{{l{c}}}}FhFh}{{l{c}}}Af}{{{f{{l{Bn}}}}FhFh}{{l{Bn}}}}{{{f{{l{Al}}}}FhFh}{{l{Al}}}}{{{f{{l{Eh}}}}FhFh}{{l{Eh}}}}{{{f{An}}{Fn{c}}}{{l{{Bj{c}}}}}Bl}{{{f{An}}{Fn{c}}Hl}{{l{{Bj{c}}}}}Bl}{{{f{An}}Fn}{{l{c}}}Af}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}IjIj}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{l{n}}}}{{{f{{l{n}}}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{n}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Al}}}}{f{An}}}{{l{n}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}Af}{{{f{{l{A`}}}}{f{{Ad{Ab}}}}}{{l{n}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{n}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{n}}}}{{{f{{l{c}}}}e}{{l{n}}}AfAj}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}}27143865{{{f{{l{c}}}}}FhDb}`{{{f{{l{j}}}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{{l{Bn}}}}}{{Bd{{Gh{Gf}}Bb}}}}`{{{f{{l{Al}}}}}{{`{{N`{}{{Cb{{C`{{f{An}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{N`{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{Al}}}}}{{`{Nb}}}}{{{f{Cl{l{j}}}}}{{`{Nb}}}}{{{f{{l{c}}}}}LdAf}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{E`}}}}LfNd}{{Bd{{C`{J`}}Bb}}}}{{{f{{l{Eb}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}}{{{f{{l{c}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}F`}{{{f{{l{c}}}}LfNd}{{Bd{LdBb}}}F`}{{{f{{l{E`}}}}LfNd}{{Bd{LdBb}}}}{{{f{{l{Eb}}}}LfNd}{{Bd{LdBb}}}}{{{f{An}}FhLf}{{Bd{{l{n}}Bb}}}}{{{f{An}}FhLfLf}{{Bd{{l{c}}Bb}}}Af}{{{f{An}}Fh}{{l{c}}}Af}{{{f{An}}FhLfLf}{{l{c}}}Af}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Mn}}}Db}{{{f{{l{Mh}}}}}B`}{{{f{{l{El}}}}}B`}{{{f{{l{Ln}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{E`}}}}}B`}{{{f{{l{Mj}}}}}B`}{{{f{{l{Lj}}}}}B`}{{{f{{l{Jj}}}}}B`}{{{f{{l{Mb}}}}}B`}84:25097163{{{f{{l{c}}}}e}{}Af{AhAj}}{{{l{c}}{l{c}}}{}Af}{{{l{c}}e}{}Af{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{An}}}bDb}{{{f{{l{{Bj{c}}}}}}}{{l{{Bj{c}}}}}Bl}{{{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{l{c}}}Af}{{{f{{l{Eh}}}}}{{l{Eh}}}}{{{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Bn}}}}}{{l{Bn}}}}{{{f{{l{c}}}}{f{Df}}Nf}{{Bd{B`Bb}}}Af}{{{f{{l{c}}}}Fhe}{{Bd{{l{c}}Bb}}}Kj{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}Lfdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Fhdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{n}}}}{f{{Ad{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{{{f{Cl{l{c}}}}{f{{Ad{Ij}}}}e}{{Bd{B`Bb}}}Nh{{Hb{}{{Cb{C`}}}}}}{{{f{{l{Al}}}}{f{{Ad{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{{f{An}}}}}}}}}}{{{f{{l{n}}}}c{C`{d}}}{{Bd{{l{n}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{A`}}}}c{C`{{f{{Ad{Ab}}}}}}}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Al}}}}c{C`{{f{An}}}}}{{Bd{{l{Al}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}Af{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Al}}}}ce}{{Bd{{l{Al}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{An}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{A`}}}}ce}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{{Ad{Ab}}}}}}}{{Dd{{C`{{Fn{Ab}}}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}Af{{Hb{}{{Cb{Ij}}}}}{{Df{C`}{{Dd{C`}}}}}}{{{f{{l{n}}}}ce}{{Bd{{l{n}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{A`}}}}{f{{l{n}}}}{C`{{f{{Ad{Ab}}}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{n}}}}{f{{l{n}}}}{C`{d}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{Al}}}}{f{{l{n}}}}{C`{{f{An}}}}}{{Bd{{l{Al}}Bb}}}}{{{f{{l{c}}}}{f{{l{n}}}}C`}{{Bd{{l{c}}Bb}}}Af}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{c}}}}d}bDb}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Ij}bDb}{{{f{Cl{l{c}}}}Kl}bDb}{{{f{{l{Eh}}}}Gf}{{l{Eh}}}}{{{f{{l{Al}}}}Gf}{{l{Al}}}}{{{f{{l{{Bj{c}}}}}}Gf}{{l{{Bj{c}}}}}Bl}{{{f{{l{Bn}}}}Gf}{{l{Bn}}}}{{{f{{l{c}}}}Gf}{{l{c}}}Af}{{{f{{l{n}}}}Gf}{{l{n}}}}{{{f{{l{j}}}}Gf}{{l{j}}}}{{{f{{l{A`}}}}Gf}{{l{A`}}}}{{{f{{l{n}}}}Gf{C`{d}}}{{l{n}}}}{{{f{{l{c}}}}GfC`}{{l{c}}}Af}{{{f{{l{{Bj{c}}}}}}Gf{C`{{Bj{c}}}}}{{l{{Bj{c}}}}}Bl}{{{f{{l{Bn}}}}Gf{C`{{f{B`}}}}}{{l{Bn}}}}{{{f{{l{A`}}}}Gf{C`{{f{{Ad{Ab}}}}}}}{{l{A`}}}}{{{f{{l{Al}}}}Gf{C`{{f{An}}}}}{{l{Al}}}}{{{f{{l{j}}}}Gf{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{Eh}}}}Gf{C`{{f{{Ad{Ab}}}}}}}{{l{Eh}}}}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GfFh}{{l{c}}}Db}0{{{f{{l{Al}}}}d}{{l{Al}}}}{{{f{{l{c}}}}d}{{l{c}}}Af}{{{f{{l{Eh}}}}d}{{l{Eh}}}}{{{f{{l{n}}}}d}{{l{n}}}}{{{f{{l{A`}}}}d}{{l{A`}}}}{{{f{{l{n}}}}Ej}{{l{n}}}}{{{f{{l{Al}}}}Ej}{{l{Al}}}}{{{f{{l{A`}}}}Ej}{{l{A`}}}}{{{f{{l{c}}}}Ej}{{l{c}}}Af}{{{f{{l{Eh}}}}Ej}{{l{Eh}}}}{{{f{{l{c}}}}Gf}{{Gj{{l{c}}{l{c}}}}}Db}0{{{f{{l{c}}}}Ab}{{C`{Lf}}}Af}{{{f{{l{E`}}}}Ab}Ld}{{{f{{l{Eb}}}}Ab}Ld}{{{f{{l{c}}}}Ab}LdF`}{{{l{c}}e}{}Af{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{l{c}}{l{c}}}{}Af}{{{f{{l{c}}}}e}{}Af{AhAj}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}C`Af}{{{f{{l{n}}}}}{{C`{Ij}}}}{{{f{{l{n}}}}}Ld}{{{f{{l{c}}}}}LdAf}{{{f{{l{A`}}}}}Ld}{{{f{{l{c}}}}{C`{Fh}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hf{{Ad{Ij}}}}Nj}}{{{f{{l{c}}}}{f{{Ad{Nl}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}{f{{Ad{Nl}}}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}{{Hf{{Ad{Ij}}}}Nj}}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}}{{{f{{l{A`}}}}{f{c}}}{{l{A`}}}{{Hf{{Ad{Ij}}}}Nj}}{{{f{{l{Al}}}}{f{c}}}{{l{Al}}}{{Hf{{Ad{Ij}}}}Nj}}{{{f{{l{A`}}}}{f{{l{El}}}}}{{l{A`}}}}{{{f{{l{Al}}}}{f{{l{El}}}}}{{l{Al}}}}`{{{f{{l{c}}}}dO`}{{Fn{{Fn{Ob}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{f{{l{Al}}}}Fh}{{Bd{B`Bb}}}}{{{f{Cl{l{Bn}}}}Ed}b}{{{f{Cl{l{j}}}}Ed}b}{{{f{{l{j}}}}}{{Bd{{Oj{Od{Oh{{Of{Fh}}}}}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{Oj{{Ol{f}}{Oh{{Of{Fh}}}}}}Bb}}}Af}{{{f{c}}}e{}{}}{{{f{{l{A`}}}}}{{l{Al}}}}{{{f{{l{c}}}}}{{Fn{C`}}}Af}{{{f{{l{c}}}}}{{On{Fn{Fn{C`}}}}}Af}{{{l{c}}{l{c}}}{}Af}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{l{c}}}{}Af}{{{f{{l{c}}}}}{}Af}01{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bn}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bn}}}}c}{{Bd{{l{Bn}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bn}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dh}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{An}}g}{{Bd{{l{i}}e}}}Cd{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{H`{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}A@`{}}0{{{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{{Bj{c}}}}}}}{{Bd{{l{{Bj{c}}}}Bb}}}Bl}{{{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{Al}}}}}{{Bd{{l{Al}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Af}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Fh}{}Db}{{{f{{l{c}}}}Ab}{{C`{Lf}}}Af}{{{f{{l{Eb}}}}Ab}Ld}{{{f{{l{E`}}}}Ab}Ld}{{{f{{l{c}}}}Ab}LdF`}{{{f{{l{K`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eh}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Al}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bj{c}}}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}Bl}{{{f{{l{A`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Lj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bj{c}}}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}Bl}{{{f{{l{Mj}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{K`}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Al}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Lj}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eh}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}{ce{}{}}0{{{f{{l{Bn}}}}}Fh}{{{f{An}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{e}}}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{c}}}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{An}}}{{l{c}}}Db}{{{f{{Ad{A@b}}}}e}c{}{{A@d{{f{{l{El}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}}{}Af}{{{l{c}}}{}Af}{{{f{{l{c}}}}{f{{l{c}}}}}{}Af}{{{l{c}}{l{c}}}{}Af}32013223103232102323013232012332{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bn}}}}{f{{l{c}}}}e}{{l{Bn}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{n}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClA@n}}{f{Cd}}}b}{{{f{ClA@n}}}b}{{{f{ClAA`}}}b}{{{f{ClAAb}}c}b{{Ch{}{{Cb{{C`{d}}}}}}If}}{{{f{Cl{AAd{c}}}}e}bAf{{Ch{}{{Cb{C`}}}}If}}{{{f{Cl{AAd{c}}}}e}bAf{{Ch{}{{Cb{}}}}If}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}65{{{f{ClAAj}}}b}{{{f{ClAAl}}}b}{{{f{ClAAb}}}b}{{{f{ClAAn}}}b}{{{f{Cl{AAd{c}}}}}bAf}{{{f{Cl{AB`{c}}}}}b{ABbNj}}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bAf}{{{f{ClA@n}}{C`{{f{Cd}}}}}b}{{{f{ClA@n}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{C`{{f{Ad}}}}}bAf}{{{f{Cl{AB`{c}}}}{C`{e}}}b{ABbNj}{{Hf{c}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAl}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAn}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{f{B`}}}{{Bd{bBb}}}Af}{{{f{Cl{AAd{c}}}}{f{Ad}}}bAf}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{C`{{f{An}}}}}}}}If}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{C`{{f{{Ad{Ab}}}}}}}}}}If}}{{{f{ClAAh}}c}b{}}{{{f{Cl{AB`{c}}}}e}b{ABbNj}{{Hf{c}}}}{{{f{ClABd}}d}b}{{{f{Cl{ABh{c}}}}}bAf}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{f{An}}}}}}}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{f{{Ad{Ab}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{AB`{c}}}}}{{AB`{c}}}{ABbNj}}{{{f{ABd}}}ABd}{{{f{ABf}}}ABf}{{{f{{ABh{c}}}}}{{ABh{c}}}{ABjAf}}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{c}}}b{}}000{{}A@n}{{}AA`}{Fh{{f{c}}}{}}0000000000{Fh{{f{Clc}}}{}}0000000000{Fhb}0000000000{{{f{AAj}}}d}{{{f{AAl}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dAf}{{{f{AAf}}}d}{{{f{AAj}}}{{f{Mn}}}}{{{f{AAl}}}{{f{Mn}}}}{{{f{AAb}}}{{f{Mn}}}}{{{f{{AAd{c}}}}}{{f{Mn}}}Af}{{{f{AAf}}}{{f{Mn}}}}{AAh{{l{c}}}Db}{{{f{ClA@n}}}{{l{j}}}}{{{f{ClAA`}}}{{l{j}}}}{{{f{ClAAn}}}{{l{j}}}}{{{f{ClAAf}}}{{l{j}}}}{{{AB`{{Ad{Ab}}}}}{{l{A`}}}}{{{AB`{An}}}{{l{Al}}}}{ABd{{l{n}}}}{ABfABl}{{{ABh{c}}}{{l{c}}}Af}`{cc{}}0000000000{{{f{An}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{{{f{An}}{f{{Ad{c}}}}}ABn{}}{{{f{An}}{f{{Ad{{C`{c}}}}}}}ABn{}}{{{f{Ed}}FhFh{f{An}}}{{Bd{{Cf{AAf}}Bb}}}}{{}Fh}0000000000{{{f{ClAAj}}}{{Cf{Cd}}}}{{{f{ClAAl}}}{{Cf{Cd}}}}{{{f{ClAAb}}}{{Cf{Cd}}}}{{{f{Cl{AAd{c}}}}}{{Cf{Cd}}}Af}{{{f{ClAAf}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{An}}Fh{C`{Ed}}}A@n}{{{f{An}}Fh{C`{Ed}}}AA`}{{{f{An}}FhFh}AAj}{{{f{An}}FhFh}AAl}{{{f{An}}FhFh}AAb}{{{f{An}}Fh}AAn}{{{f{An}}FhFhEd}{{AAd{c}}}Af}{{{f{An}}Fh}{{AB`{c}}}{ABbNj}}{{{f{An}}Fh}ABd}{{{f{An}}Fh}ABf}{{{f{An}}Fh}{{ABh{c}}}Af}{{{f{An}}FhFhEdEd}{{AAd{c}}}Af}{{{f{ClAAh}}}b}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bAf}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}A@`{}}0000000000{ce{}{}}0000000000````````{{{f{ClAAf}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAf}}}d}{{{f{AAf}}}{{f{Mn}}}}{{{f{ClAAf}}}{{l{j}}}}{{{f{Ed}}FhFh{f{An}}}{{Bd{{Cf{AAf}}Bb}}}}{{{f{ClAAf}}}{{Cf{Cd}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Fb}}}Fb}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{{}Fb}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{Fb}}{f{Fb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fb}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{Fb}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{Fb}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4``{{ACb{f{An}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{An}}Ed}{{l{c}}}Db}0{{ACb{f{An}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{An}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{ACfACf}``{{ACh{f{An}}Ed}e{}{{ACj{c}}}}{{e{f{An}}Ed}ACj{}{{Hn{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Fh{{f{c}}}{}}000{Fh{{f{Clc}}}{}}000{Fhb}000{cc{}}000{{}Fh}000{ce{}{}}0000000{{{f{ACl}}}ACn}{{{f{AD`}}Ed}ADb}{{{f{ClACn}}}C`}{{{f{ClADb}}}C`}{{{f{ClADd}}}C`}{{{f{Cl{ADf{c}}}}}C`Ch}32{{{f{Cl{ADf{c}}}}}C`Gb}`{{{f{ACn}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{ADb}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{{ADf{c}}}}}{{Gj{Fh{C`{Fh}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}A@`{}}000<<<<`````````````````````{{{f{c}}h}b{}}000{{}G`}{{}Il}{{G`G`}G`}{{IlIl}Il}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}3210{{{f{G`}}}Ij}0{{{f{Il}}}Ab}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{{Gd{c}}}}}{{Gd{c}}}Db}{{{f{ADh}}}ADh}{{{f{G`}}}G`}{{{f{Il}}}Il}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{c}}}b{}}000000{{{f{ClADj}}}b}{G`G`}{IlIl}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{{}{{Gd{c}}}Db}{{}G`}{{}Il}{Fh{{f{c}}}{}}0000{Fh{{f{Clc}}}{}}0000{{G`G`}G`}{{IlIl}Il}{{}d}{{{f{ADl}}}{{C`{Ij}}}}{{{f{{Gd{c}}}}}{{C`{Ij}}}Db}{{{Gd{c}}Ij}{{Gd{c}}}Db}{{{Gd{c}}{C`{Ij}}}{{Gd{c}}}Db}{Fhb}0000;:5{{{f{G`}}{f{G`}}}d}{{{f{Il}}{f{Il}}}d}7{{{f{ClG`}}c}b{{Hb{}{{Cb{G`}}}}}}{{{f{ClIl}}c}b{{Hb{}{{Cb{Il}}}}}}{{{Gd{c}}d}{{Gd{c}}}Db}{{{Gd{c}}{C`{d}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{e}}}DbDb}{{{Gd{c}}Il}{{Gd{c}}}Db}{{{Gd{c}}{C`{Il}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{f{ClGl}}}{{Bd{bGn}}}Db}{{{f{ADh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{G`}}{f{ClGl}}}{{Bd{bGn}}}}0000{{{f{Il}}{f{ClGl}}}{{Bd{bGn}}}}0000{cc{}}0000{Ij{{C`{G`}}}}{Ab{{C`{Il}}}}{IjG`}0{AbIl}010{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}0{cG`{{Hb{}{{Cb{G`}}}}}}{cIl{{Hb{}{{Cb{Il}}}}}}{{{f{An}}}{{C`{G`}}}}{{{f{An}}}{{C`{Il}}}}{{{f{{Gd{c}}}}}{{C`{Ij}}}Db}{{{f{{Gd{c}}}}}dDb}{{{f{Il}}}d}{{{f{ADl}}}Il}{{{f{{Gd{c}}}}}IlDb}0{{{f{{Gd{c}}}}}{{C`{f}}}Db}0{{{f{Il}}}Kl}{{}Fh}0000{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{G`G`}G`}{{IlIl}Il}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{ce{}{}}0000{G`}{Il}{{{f{G`}}}d}?{{{f{{Gd{c}}}}}dDb}1{{{f{Il}}}d}{{{f{{Gd{c}}}}}KlDb}22{{{f{G`}}}{{ADn{G`}}}}{{{f{Il}}}{{ADn{Il}}}}{{{f{G`}}}{{AE`{G`}}}}{{{f{Il}}}{{AE`{Il}}}}{{}d}{{}{{f{{AEd{AEb}}}}}}{{{f{ADl}}}{{C`{Ld}}}}{{{f{{Gd{c}}}}}{{C`{Ld}}}Db}{{{Gd{c}}}{{Gd{c}}}Db}{{{Gd{c}}C`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{Gd{c}}}{{AEf{c}}}Db}4231{G`G`}{IlIl}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{{f{ClG`}}G`d}b}{{{f{ClIl}}Ild}b}{{{f{Cl{Gd{c}}}}{C`{Ij}}}bDb}{{{f{Cl{Gd{c}}}}d}bDb}{{{f{ClIl}}d}b}{{{f{Cl{Gd{c}}}}Il}bDb}{{{f{Cl{Gd{c}}}}C`}bDb}033{{{f{Cl{Gd{c}}}}Kl}bDb}{{{f{ClIl}}Kl}b}{{{Gd{c}}Kl}{{Gd{c}}}Db}{{{Gd{c}}{C`{Kl}}}{{Gd{c}}}Db}{{G`G`}G`}{{IlIl}Il}>=10{{{f{c}}}e{}{}}000?>{c{{Bd{e}}}{}{}}000000000{{{f{c}}}A@`{}}000043{ce{}{}}0000{ADjADj}````{{{f{c}}h}b{}}{{{f{{AEh{c}}}}Fh}{{Gj{{AEh{c}}{AEh{c}}}}}Bl}{e{{AEh{c}}}Bl{{Hb{}{{Cb{{C`{{f{c}}}}}}}}}}{e{{AEh{c}}}Bl{{Hb{}{{Cb{{f{c}}}}}}}}{{AEje}g{}{{Hb{}{{Cb{c}}}}}{}}0{{{f{In}}}{{f{AEl}}}}{{{f{{AEh{c}}}}}{{f{AEl}}}Bl}{{{f{Cl{AEh{c}}}}}{{f{ClAEl}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{AEh{c}}}}Fh}dBl}{{{f{{AEh{c}}}}}{{AEh{c}}}{ABjBl}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{{f{{AEh{c}}}}}{{f{AEj}}}Bl}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{{f{In}}}}{f{{f{In}}}}}d}{{{f{In}}{f{In}}}d}{{{f{{AEh{c}}}}{f{ClGl}}}{{Bd{bGn}}}{AEnBl}}{cc{}}{{FhAEj}{{AEh{c}}}Bl}{{{f{{AEh{c}}}}Fh}{{C`{{f{c}}}}}Bl}{{}AEj}{{{f{Hl}}{f{{AEh{c}}}}{f{{AEh{c}}}}}{{AEh{c}}}Bl}{{AEj{f{Hl}}}{{AEh{c}}}Bl}{{{f{Hl}}{f{{AEh{c}}}}}{{AEh{c}}}Bl}0{{}Fh}{ce{}{}}{{{f{{AEh{c}}}}}{}Bl}{{{f{{AEh{c}}}}Fh}dBl}{{{f{c}}Fh}d{}}1{{{f{{AEh{c}}}}}{{AFb{AF`}}}Bl}{{{f{{AEh{c}}}}}{{AFb{{f{c}}{Ff{c}}AF`}}}Bl}{{{f{{AEh{c}}}}}FhBl}0`{db}{{{f{Cl{AEh{c}}}}{C`{Hl}}}bBl}{{{f{Cl{AEh{c}}}}FhFh}bBl}{{{f{c}}FhFh}e{}{}}01{{{f{{AEh{c}}}}Fh}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}Bl}0{{{f{In}}}{{Cf{In}}}}{{{f{{AEh{c}}}}}{{Cf{Cd}}}Bl}{{{f{c}}}e{}{}}{g{{Bd{{AEh{c}}e}}}Bl{}{{Hb{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{g{{Bd{{AEh{c}}e}}}Bl{}{{Hb{}{{Cb{{Bd{{f{c}}e}}}}}}}}{{AEjg}{{Bd{ie}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{In}}}{{f{An}}}}{{}{{f{An}}}}{{{f{{AEh{c}}}}}{{C`{{f{Hl}}}}}Bl}{{{f{{AEh{c}}}}Fh}{{f{c}}}Bl}0{{{f{{AEh{c}}}}Fh}{}Bl}{{{f{{AEh{c}}}}}{{f{{Lh{{Fn{c}}}}}}}Bl}{{{f{{AEh{c}}}}}{}Bl}{{{f{{AEh{c}}}}}{{Ff{c}}}Bl}{ce{}{}}{{{f{{AEh{c}}}}{C`{Hl}}}{{Cf{Cd}}}Bl}{{{AEh{c}}{C`{Hl}}}{{AEh{c}}}Bl}0`{{{f{Cl{AFd{c}}}}}bBl}0{{{f{Cl{AFd{c}}}}{C`{c}}}bBl}{{{f{Cl{AFd{c}}}}{f{AEl}}}bBl}{{{f{Cl{AFd{c}}}}c}bBl}{{{f{Cl{AFd{c}}}}{f{AEl}}}{{Bd{bBb}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AFd{c}}}Bl}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{AFd{c}}}{{l{{Bj{c}}}}}Bl}{cc{}}{{}Fh}{ce{}{}}{{{f{An}}Fh}{{AFd{c}}}Bl}{{{f{Cl{AFd{c}}}}}B`Bl}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{ClAFf}}}b}{{{f{ClAFf}}{C`{{f{AEl}}}}}b}{{{f{ClAFf}}{f{AEl}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AFh}}{f{ClGl}}}{{Bd{bGn}}}}<{{{f{An}}Fh}{{Cf{AFf}}}}{{}{{Lh{Df}}}}{{}AEj}>={{}d}`{{{Cf{Df}}{Lh{Df}}AEj}b}{{{f{ClAFf}}}B`}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{AFn}}{f{Df}}}AFn}{{{f{AFn}}{f{Df}}}{{l{c}}}Db}{{{f{{AFl{}{{AFj{c}}}}}}i{f{Cl{Ad{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{{f{AG`}}Ej}{{l{El}}}}{{{f{AG`}}{f{{Ad{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AGb}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AGd}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{AGd}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{Ej}}}Ej}{{{f{En}}}En}{{{f{AGf}}}AGf}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{c}}}b{}}0000{{}Ej}{{}En}{Fh{{f{c}}}{}}00{Fh{{f{Clc}}}{}}00``{Fhb}00{{{f{Ej}}{f{Ej}}}d}{{{f{En}}{f{En}}}d}{{{f{AGf}}{f{AGf}}}d}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AGj}}}{{Bd{B`Bb}}}}{{{f{AGj}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{{f{AGl}}c}{{Bd{AGlBb}}}{}}{{{f{AGn}}{f{{l{n}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Ej}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{En}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AGf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{En}}}Ej}{{{f{Ej}}}En}22`{{{f{An}}cFh}AH`{}}{{{f{An}}Fh}AHb}`{{{f{AHd}}Fh}{{Bd{IhBb}}}}{{{f{AHd}}Fh}Ih}??{{{f{Ej}}{f{Clc}}}bAC`}{{{f{En}}{f{Clc}}}bAC`}{{{f{AGf}}{f{Clc}}}bAC`}{{}Fh}00{ce{}{}}00{{{f{AHf}}}{{Bd{{l{n}}Bb}}}}{{{f{AHh}}}{{Bd{{l{n}}Bb}}}}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AHj}}}{{C`{c}}}{}}{{{f{AHj}}}{{C`{Lf}}}}{{{f{AHl}}}{{C`{c}}}{}}2{{{f{AHj}}}{{C`{{Gj{cc}}}}}{}}``{{{f{AGb}}}{{Bd{FhBb}}}}{{}Ej}{{}En}{{{f{AHn}}FhFh}{{l{c}}}Db}88``{{{f{AGj}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{AHl}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{{f{AI`}}}B`}0{{{f{AIb}}}AIb}{{{f{AId}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{AIf}}c{C`{e}}}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AIf}}ci}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AIf}}{f{{l{n}}}}{C`{c}}}{{Bd{AIfBb}}}{}}{{{f{AIh}}Gf}{{l{c}}}Db}{{{f{AIj}}Gfc}{{l{e}}}{}Db}{{{f{AIl}}FhFh}AIl}0`{{{f{AG`}}d}{{l{c}}}Db}{{{f{AG`}}Ej}{{l{c}}}Db}{{{f{AIn}}Ab}{{C`{Lf}}}}{{{f{AHj}}}{{C`{c}}}{}}{{{f{AJ`}}{f{c}}}{{Bd{AJ`Bb}}}Nj}{{{f{AJb}}{f{c}}}AJbNj}{{{f{AJd}}}{{Fn{{f{{Ad{Ab}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00{{{f{AGb}}}{{Bd{AGbBb}}}}8{ce{}{}}00{{Ejd}Ej}{{End}En}1010{{Enc}En{{Hb{}{{Cb{d}}}}}}210{EjEj}{EnEn}`{{{f{AJf}}{f{{l{n}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJh{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDb{CdAJj}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJl{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJn{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJj}AJn{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AK`{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAK`Db}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJj}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0{{{f{{l{c}}}}}FhAf}0{{KlKl}Kl}{{{f{{l{El}}}}Ij}{{Bd{bBb}}}}{{{f{{AKb{Ij}}}}Ij}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAKdd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AKd}}}AKd}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{{}AKd}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{AKd}}{f{AKd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AKd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{AKd}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{{Ad{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFhf}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4`{{Fh{f{Cl{Fn{d}}}}}b}```{{{f{AIl}}FhFh}AIl}0{{Fh{f{{Ad{B`}}}}{f{ClEn}}}{{Bd{{AKf{{l{El}}}}Bb}}}}{{{f{{Ad{B`}}}}{f{{Ad{d}}}}{f{{Ad{d}}}}}{{Bd{AKhBb}}}}{{{f{An}}{f{{Ad{B`}}}}{f{{Ad{d}}}}{f{{Ad{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{An}}{f{{Ad{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Ad{B`}}}}}{{Bd{AKhBb}}}}{{{f{{Ad{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````77`{AKjGf}00{{{f{An}}}{{Bd{EfBb}}}}{{{f{An}}}{{Bd{AKlBb}}}}{{{f{AKn}}}Gf}{{{f{An}}}{{Bd{bBb}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AL`}}c}AL`{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{ALb}}}d}{{{f{Ih}}}{{`{{Ch{}{{Cb{Ih}}}}}}}}{{{f{Ih}}{f{Cl{Fn{Ih}}}}}b}{{ALbd}ALb}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{Ih}}{f{Ih}}}Ih}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{Al}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AL`}}{f{Bh}}}B`}{{{f{ClALd}}{C`{{f{An}}}}}b}{{{f{ClALb}}{f{ALb}}}{{Bd{bBb}}}}{{{f{ClALd}}}b}{{{f{ClALd}}{f{An}}}b}{{{f{ALb}}Ej}{{l{El}}}}{eALf{}{{Hb{}{{Cb{c}}}}}}0{{AEje}ALh{}{{Hb{}{{Cb{c}}}}}}0{{{f{Ld}}}Ih}{{{f{Ih}}}Ih}{{{f{{Jh{JfJd}}}}}{{`{If}}}}{{{f{{Jh{JnJj}}}}}{{`{If}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Mn}}}{{f{Ed}}}}{{{f{ALj}}}{{f{Ed}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{{f{{Ad{c}}}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{Jh{KhJj}}}}}{{`{If}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{AMf{An}}}AMh}{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{{f{AMl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{Ih}}{f{Ed}}}Ih}{{{f{Ed}}Ed}Ed}{{{f{{Jh{JnJj}}}}Jl}{{Jh{JnJj}}}}{{{f{{Jh{KdJj}}}}Jl}{{Jh{KdJj}}}}{{{f{AMl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KbK`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KdJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KhJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JnJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JfJd}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{ALb}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AL`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AL`}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{{Jh{ce}}}}}{{Jh{ce}}}DbDb}{{{f{AMn}}}AMn}{{{f{AMh}}}AMh}{{{f{ALb}}}ALb}{{{f{AL`}}}AL`}{{{f{Ld}}}Ld}{{{f{AN`}}}AN`}{{{f{Ih}}}Ih}{{{f{ANb}}}ANb}{{{f{Ed}}}Ed}{{{f{Mn}}}Mn}{{{f{Jl}}}Jl}{{{f{Mh}}}Mh}{{{f{Lj}}}Lj}{{{f{El}}}El}{{{f{Mj}}}Mj}{{{f{Ln}}}Ln}{{{f{Mb}}}Mb}{{{f{Jd}}}Jd}{{{f{Jj}}}Jj}{{{f{E`}}}E`}{{{f{Eb}}}Eb}{{{f{Jf}}}Jf}{{{f{Kh}}}Kh}{{{f{Al}}}Al}{{{f{A`}}}A`}{{{f{Eh}}}Eh}{{{f{n}}}n}{{{f{Kb}}}Kb}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{ANd}}}ANd}{{{f{AEj}}}AEj}{{{f{ANf}}}ANf}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000{{{f{ClMn}}Ed}b}{ANhe{}{{ALf{c}}AJj}}0{{ANhAEj}e{}{{ALh{c}}AJj}}0{{{f{Ed}}}d}00{{{AMf{An}}}Ed}{{{f{Mn}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{}ANj}{{}AMn}{{}AMh}{{}Ih}{{}ANb}{{}Ed}{{}AEj}{Fh{{f{c}}}{}}0{{{f{{Jh{ce}}}}}fDbDb}11111111111111111111111111111111111111111{Fh{{f{Clc}}}{}}00{{{f{Cl{Jh{ce}}}}}{{f{Cl}}}DbDb}1111111111111111111111111111111111111111{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{ALdc}ALb{{Hb{}{{Cb{{C`{{f{An}}}}}}}}}}{Fhb}000000000000{{{f{ClAL`}}}b}111111111111111111111111111111{{{f{AMl}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{f{Ed}}}}{{{f{{Jh{KbK`}}}}}{{f{Ed}}}}{{{f{{Jh{JfJd}}}}}{{f{Ed}}}}{{{f{{Jh{KhJj}}}}}{{f{Ed}}}}{{{f{{Jh{JnJj}}}}}{{f{Ed}}}}{{{f{ALb}}}{{f{Ed}}}}{{{f{AL`}}}{{f{Ed}}}}{{{f{Ld}}}{{f{Ed}}}}{{{f{Ih}}}Ed}`{{{f{AMn}}{f{AMn}}}d}{{{f{Ih}}{f{Ih}}}d}{{{f{ANb}}{f{ANb}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Ed}}{f{AEj}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{AEj}}{f{AEj}}}d}{{{f{ANf}}{f{ANf}}}d}{{{f{Ih}}{f{Ih}}d}d}{{{f{ALb}}{f{An}}}}{{{f{ALb}}{f{{l{Al}}}}}}{{{f{ALb}}{f{ALb}}}}{{{f{AL`}}{f{AL`}}}{{l{n}}}}2310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jh{ce}}}}}MnDbDb}{{{f{AL`}}{f{An}}}{{Bd{B`Bb}}}}{{{f{AL`}}}{{f{{Ad{B`}}}}}}{{{f{ClAL`}}}{{f{Cl{Fn{B`}}}}}}{{{f{AMh}}{f{An}}}{{C`{Ij}}}}{{AMj{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{ALdALb}{ANj{{Lh{AMh}}}}{{{f{AMn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AMh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AN`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ih}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{ANb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ed}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Mn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Jl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{AEj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{ANf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}00{{{l{Jj}}}{{Jh{KhJj}}}}{{{l{Jd}}}{{Jh{JfJd}}}}2222222222222{dIh}{{{f{An}}}Ih}4{{{C`{c}}}Ih{{ANl{Ih}}}}{{{f{{Ad{Ab}}}}}Ih}{cIhANn}7{{{f{AEj}}}Ed}{{{f{Ih}}}Ed}9{IhEd}{{{f{Ih}}}Mn};{{{f{AO`}}}Mn}<{{{f{ANf}}}Jl}====================={AObAEj}{AOdAEj}?{{{f{AEj}}d}Ed}{{{l{El}}{Lh{AMh}}dAMn}ALb}{{{f{An}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{AOf}}}}}}{{{f{An}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{{C`{AOf}}}}}}}}{{{l{El}}AMn}ALb}{{{f{An}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{AOh}}}}}}{{{f{An}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{{C`{AOh}}}}}}}}{{{f{An}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{AKj}}}}}}{{{f{An}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{{C`{AKj}}}}}}}}{{{f{An}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{AKn}}}}}}{{{f{An}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{{C`{AKn}}}}}}}}{{{AOl{AOj}}Ed}Mn}{{{f{{l{Al}}}}{f{{AMf{An}}}}AMn}{{Bd{ALbBb}}}}{{{Fn{c}}AEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEj}{{AJj{}{{ALl{e}}{ALn{c}}{AM`{g}}}}}{AMb{AMd{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}{{FhcAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{FhAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{An}}dFhAMn}ALb}{{{f{An}}Fh}AL`}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AMh}}Ij}{{f{An}}}}{{{f{{Jh{KdJj}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{JnJj}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{JfJd}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{KbK`}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{KhJj}}}}Fh}{{Bd{IhBb}}}}{{{f{AMl}}Fh}{{Bd{IhBb}}}}{{{f{ALb}}Fh}{{Bd{IhBb}}}}{{{f{AL`}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{KbK`}}}}Fh}Ih}{{{f{{Jh{KdJj}}}}Fh}Ih}{{{f{{Jh{JfJd}}}}Fh}Ih}{{{f{{Jh{KhJj}}}}Fh}Ih}{{{f{{Jh{JnJj}}}}Fh}Ih}{{{f{AMl}}Fh}Ih}{{{f{ALb}}Fh}Ih}{{{f{AL`}}Fh}Ih}{{{f{AMh}}}{{f{{AMf{An}}}}}}{{}Ed}000000000000000000000000{{{f{AMh}}Ij}{{C`{{f{An}}}}}}{{{f{ALb}}}{{f{{Lh{AMh}}}}}}{{{f{Ed}}}{{C`{{Fn{Fh}}}}}}{{{f{Ih}}}{{C`{{f{An}}}}}}{{{f{AOn}}Fh}Ih}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{ALb}}{f{{l{Al}}}}}}{{{f{ALb}}{f{ALb}}}}{{{f{ALb}}{f{An}}}}{{{f{AL`}}{f{AL`}}}{{l{n}}}}2130{{{f{Ih}}{f{Clc}}}bAC`}{{{f{ANb}}{f{Clc}}}bAC`}{{{f{Ed}}{f{Clc}}}bAC`}{{{f{Mn}}{f{Clc}}}bAC`}{{{f{Jl}}{f{Clc}}}bAC`}{{{f{AEj}}{f{Clc}}}bAC`}{{{f{ANf}}{f{Clc}}}bAC`}{{{f{Ih}}{f{Clc}}d}bAC`}{{{f{{Jh{KhJj}}}}}{{l{Ln}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{EdEd}{{}Fh}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{AEj}}}{{C`{{f{AEj}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AL`}}}}{{B@`Ed}{{Bd{LdBb}}}}{{{Jh{JnJj}}}B`}{{{Jh{KhJj}}}B`}{{{Jh{JfJd}}}B`}{{{Jh{KdJj}}}B`}{{{Jh{KbK`}}}B`}{ALbB`}{AL`B`}{{Ld{f{An}}}B`}{Ih{{Bd{IhBb}}}}{{{f{Ed}}}d}00{{{f{Ih}}}d}11{{{f{ALb}}}d}{{{f{AL`}}}d}1323{{{f{AMh}}}d}34440443434344443444434{{{f{AEj}}}d}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{AFb{cgAF`}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AL`}}}ADd}{{{f{ALb}}}B@b}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ed}}}{{f{Ed}}}}{{{f{AMh}}}Fh}{{{f{ALb}}}Fh}{{{f{AL`}}}Fh}{{{f{ALb}}{f{{l{Al}}}}}}{{{f{ALb}}{f{An}}}}{{{f{ALb}}{f{ALb}}}}{{{f{AL`}}{f{AL`}}}{{l{n}}}}1230{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{ANb}}}{{C`{Ed}}}}{{{f{ALb}}}Ld}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClANj}}{f{{Lh{AMh}}}}}{{Bd{bBb}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}03{{{f{{Jh{KhJj}}}}}{{l{Ln}}}}1{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ALb}}}{{Bd{FhBb}}}}{{{f{ALb}}}{{f{An}}}}{{{f{AL`}}}{{f{{AOl{AOj}}}}}}{{{f{Mn}}}{{f{{AOl{AOj}}}}}}`{{{f{{Jh{KhJj}}}}}{{l{Jd}}}}9{{}c{}}0{{{f{An}}FhAMn}ALd}{{{f{An}}c}{{Jh{KhJj}}}{{Hf{{Ad{AKn}}}}}}{{{f{An}}c}{{Jh{JnJj}}}{{Hf{{Ad{{C`{AKj}}}}}}}}{{{f{An}}c}{{Jh{KdJj}}}{{Hf{{Ad{AOf}}}}}}{{{f{An}}c}{{Jh{JfJd}}}{{Hf{{Ad{AOh}}}}}}{{{f{An}}c}{{Jh{JfJd}}}{{Hf{{Ad{{C`{AOh}}}}}}}}{{{f{An}}c}{{Jh{JnJj}}}{{Hf{{Ad{AKj}}}}}}{{{f{An}}c}{{Jh{KhJj}}}{{Hf{{Ad{{C`{AKn}}}}}}}}{{{f{An}}c}{{Jh{KdJj}}}{{Hf{{Ad{{C`{AOf}}}}}}}}{{{Lh{AMh}}}ANj}{{{f{An}}{f{{Ad{B`}}}}}{{Bd{AL`Bb}}}}{{EdIh}Ld}{{{f{An}}Ed}Mn}{{{l{c}}}{{Jh{ec}}}DbDb}{{{f{ClB@b}}}C`}{{{f{ALb}}{f{{l{Al}}}}}}{{{f{ALb}}{f{ALb}}}}{{{f{ALb}}{f{An}}}}{{{f{AL`}}{f{AL`}}}{{l{n}}}}2130{{{f{ALb}}}Fh}{{{f{AL`}}}Fh}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}}{{Jh{KhJj}}}}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}}{{Jh{JfJd}}}}{{{f{Ih}}{f{Ih}}}{{C`{B@d}}}}{{{f{Jl}}{f{Jl}}}{{C`{B@d}}}}{{{f{ALb}}}{{f{{l{El}}}}}}{{{f{{Jh{KbK`}}}}}{{C`{Fh}}}}{{{f{ClAL`}}}b}{{{f{AL`}}}{{f{Mn}}}}{{{f{ClALd}}{f{An}}}{{Gj{Ijd}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClAL`}}{f{An}}}b}{{{f{{Jh{JfJd}}}}{f{{l{Al}}}}{C`{{f{AKl}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{{Jh{JnJj}}}}{f{{l{Al}}}}{C`{{f{AKl}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{AL`}}}{{Bd{{l{Eh}}Bb}}}}{{{f{AMh}}{f{AMh}}}d}{{{f{{Jh{KbK`}}}}}Fh}{{{f{{Jh{KhJj}}}}}{{l{Ln}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{{f{ClMn}}{AOl{AOj}}}b}{{{f{Cl{Jh{KdJj}}}}Jl}b}{{{f{Cl{Jh{JnJj}}}}Jl}b}{{{f{Cl{Jh{JnJj}}}}JlEf}{{Bd{bBb}}}}{{{f{Cl{Jh{JnJj}}}}Ef}{{Bd{bBb}}}}{{{f{B@b}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{ALb}}d}ALb}{{{f{ALb}}Ej}ALb}{{{f{{Jh{JnJj}}}}{f{An}}}{{Bd{{l{Al}}Bb}}}}{{{f{{Jh{KhJj}}}}{f{An}}}{{l{Al}}}}{{{f{{Jh{JfJd}}}}{f{An}}}{{l{Al}}}}{{{f{Ih}}{f{Ed}}}{{C`{Ih}}}}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bn}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jh{KdJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}{{f{{C`{Ef}}}}}}{{{f{ALb}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}AEj}{{{f{Mn}}d}AO`}{JlANf}{{{f{Ed}}{f{An}}d}AO`}{Jl{{f{An}}}}{{{f{ALb}}{f{{AMf{An}}}}B@f}ALb}{{{f{ALb}}}{{Bd{ALbBb}}}}{{{f{ALb}}}ALb}{{{f{AEj}}}{{f{AEj}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{AEj}}}B@h}{{{f{{Jh{KhJj}}}}{f{An}}}{{l{Al}}}}{{{f{{Jh{JnJj}}}}{f{An}}}{{Bd{{l{Al}}Bb}}}}{{{f{{Jh{JfJd}}}}{f{An}}}{{l{Al}}}}{{{f{c}}}Ef{}}00{{{f{Ih}}{f{Ih}}}d}{{{f{AL`}}}Fh}{{{f{{Jh{JfJd}}}}{C`{{f{AKl}}}}{f{{l{Al}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{AKl}}}}{f{{l{Al}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{g{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEjg}{{Bd{ALhe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANh{{Bd{eg}}}{}{{ALf{c}}AJj}{}}0{{ANhAEj}{{Bd{eg}}}{}{{ALh{c}}AJj}{}}0{{{f{Ih}}}{{Bd{cBb}}}Lb}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Ih}}{f{Ed}}}{{Bd{IhBb}}}}{{{f{Ed}}d}{{Bd{AEjBb}}}}{{{f{c}}}A@`{}}000000000000000000000000000000000000000000{{{f{AEj}}}AEj}{{{f{ALb}}}{{Bd{ALbBb}}}}{AL`B@j}{{{f{ClLd}}Ih}b}{{{f{ALb}}}d}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}cABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ld}}}{{f{Ih}}}}{{{f{ALb}}}{{Bd{B@jBb}}}}2{{{f{Ed}}Ih}d}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}gABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{ce{}{}}000000000000000000000000000000000000000000{Fhc{}}0{{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}{C`{Hl}}}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ed}}}Ih}```````````{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{AMj{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}B@l}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{{}b}{{{f{ClB@l}}}b}{Fhb}2{cc{}}6{{}Fh}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{}d}3``````````````````````````{{{f{B@n}}}{{f{An}}}}>>>===`{{BbB@n}Bb}{BbBb}={{{f{B@n}}}f}>>===:::`{{{f{BA`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@n}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Bb}}{f{ClGl}}}{{Bd{bGn}}}}0<{cB@n{{ANl{{Dj{An}}}}}}={BAbBb}{BAdBb}{BAfBb}{cc{}}{BAhBb}{BAjBb}{BAlBb}{{}{{Fj{{f{An}}BA`}{{Dd{b}}}}}}{{}Fh}00{ce{}{}}00{cBbAJn}````{{{Fj{{f{An}}BA`}{{Dd{b}}}}}b}{cBbBAn}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClB@j}}{Fn{B`}}{f{BB`}}}{{Bd{bBb}}}}{{{f{B@j}}{f{Df}}}{{Fn{B`}}}}0{{{f{B@j}}{f{{l{n}}}}}{{Bd{B@jBb}}}}{{{f{B@j}}{f{{Ad{{AOl{AOj}}}}}}}{{Bd{B@jBb}}}}0{{{f{B@j}}GfFh}B@j}{{{f{ClB@j}}}{{f{ClB@j}}}}{{{f{ClB@j}}{f{An}}e}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{c}}}}}}{{{f{ClB@j}}Fhe}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{B@j}}}{{`{{Ch{}{{Cb{Fh}}}}}}}}{{{f{B@j}}}B@j}{{{f{BBd}}}BBd}{{{f{BBf}}}BBf}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{B@j}}{f{An}}}{{Bd{{f{B`}}Bb}}}}{{{f{B@j}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{}BBf}{{}B@j}{Fh{{f{c}}}{}}0000{Fh{{f{Clc}}}{}}0000{Fhb}0000{{{f{B@j}}{f{An}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{An}}}{{Bd{B`Bb}}}}{{{f{B@j}}{f{{Ad{c}}}}}B@j{{Hf{An}}}}{{{f{B@j}}{f{{BBh{{f{An}}O`}}}}}B@j}{{{f{B@j}}{C`{{f{{Ad{c}}}}}}}{{Bd{B@jBb}}}{{Hf{An}}}}{{{f{B@j}}}{{Fn{Ed}}}}9{{{f{BBf}}{f{BBf}}}d}{{{f{B@j}}{f{B@j}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@j}}}Fh}`{{{f{B@j}}e}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}{Fn{B`}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{B@j}}}{{Bd{bBb}}}}{{{f{B@j}}}{{Fn{Mn}}}}{{{f{B@j}}AGf}{{Bd{B@jBb}}}}{{{f{B@j}}{f{{l{n}}}}}{{Bd{B@jBb}}}}{{{f{BBd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@j}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}000{{{f{BBj}}}B@j}{{{f{BB`}}}B@j}{AL`B@j}3{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB@j{{Hb{}{{Cb{B`}}}}}}{{{f{{Ad{BBl}}}}}{{Bd{B@jBb}}}}{{{f{{Ad{BBl}}}}{f{BB`}}}{{Bd{B@jBb}}}}{{c{f{BB`}}}{{Bd{B@jBb}}}{{Ch{}{{Cb{{f{BBl}}}}}}}}{{{f{B@j}}Fh}{{C`{{Fn{Ih}}}}}}{{{f{B@j}}{f{An}}}{{C`{Fh}}}}{{{f{B@j}}}{{Fn{{f{An}}}}}}{{{f{B@j}}}{{Fn{{AOl{AOj}}}}}}{{{f{B@j}}}{{f{{Ad{B`}}}}}}{{{f{ClB@j}}}{{f{Cl{Fn{B`}}}}}}{{{f{B@j}}Fh}{{Bd{BBlBb}}}}{{{f{B@j}}Fh{f{ClBBl}}}{{Bd{bBb}}}}{{{f{B@j}}Fh{f{ClBBl}}}b}{{{f{B@j}}}{{C`{{Bd{EdBb}}}}}}`{{{f{B@j}}e}{{Bd{BBnBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}{Fn{B`}}{f{BC`}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}1{{{f{B@j}}{Fn{B`}}dd}{{Bd{BBnBb}}}}{{{f{BBf}}{f{Clc}}}bAC`}{{{f{B@j}}{C`{Fh}}}B@j}{{{f{B@j}}}Fh}{{{f{B@j}}{f{{Ad{B`}}}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{{Ad{B`}}}}}{{Bd{{f{ClB@j}}Bb}}}}{{{f{ClB@j}}{f{{Ad{B`}}}}}{{f{ClB@j}}}}{{{f{B@j}}{BCb{Fh}}}f}{{{f{B@j}}{BCd{Fh}}}f}{{{f{B@j}}BCf}f}{{{f{B@j}}{Mf{Fh}}}f}{{{f{B@j}}{BCh{Fh}}}f}{{{f{B@j}}{f{An}}}f}{{{f{B@j}}Fh}f}{{{f{B@j}}{BCj{Fh}}}f}{{}Fh}0000{{{f{ClB@j}}Fhc}{{Bd{{f{ClB@j}}Bb}}}BBb}{ce{}{}}000000{{B@j{f{An}}}AL`}{{{f{B@j}}}{{Bd{{l{n}}Bb}}}}{{{f{B@j}}}d}1{{{f{B@j}}}{{Ff{B`}}}}{{{f{B@j}}}{{`{{Ch{}{{Cb{B@j}}}}}}}}{{{f{B@j}}dd}BCl}{{{f{B@j}}}BCn}{B@jBD`}{{{f{B@j}}}Fh}{{{f{B@j}}}{{Bd{{C`{B`}}Bb}}}}{{{f{B@j}}BBd}{{Bd{{C`{B`}}Bb}}}}122{{{Fn{c}}}{{Bd{B@jBb}}}BBb}{{{Fn{B`}}}B@j}{{{Fn{B`}}}{{Bd{B@jBb}}}}{{{f{ClBCl}}}C`}{{{f{ClBCn}}}C`}{{{f{B@j}}}B@j}{{B@je}{{Bd{cBb}}}{}{{Df{B@j}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@j}}e}{{Bd{cBb}}}{}{{Df{{f{ClB@j}}}{{Dd{{Bd{cBb}}}}}}}}{{B@jgc}{{Bd{eBb}}}{}{}{{Df{B@jc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClB@j}}}{{C`{B`}}}}{{{f{B@j}}{f{B@j}}}d}{{{f{ClB@j}}{f{An}}{f{An}}}{{Bd{{f{ClB@j}}Bb}}}}{{{f{ClB@j}}{f{An}}c}{{Bd{{f{ClB@j}}Bb}}}BBb}{{{f{ClB@j}}Fhc}{{Bd{{f{ClB@j}}Bb}}}BBb}18{{{f{B@j}}{Fn{B`}}{f{BDb}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}`{{{f{B@j}}{f{B`}}dd{C`{Jb}}}{{Bd{B@jBb}}}}0{{{f{B@j}}Fhdd{C`{Jb}}}{{Bd{B@jBb}}}}{{{f{B@j}}}BB`}{{{f{B@j}}{f{B@j}}}{{Bd{bBb}}}}{{{f{B@j}}e}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}Fh}{{C`{{f{B`}}}}}}{{{f{B@j}}c}{{Bd{B@jBb}}}{{BDd{Fh}}}}2{{{f{B@j}}c}{{Bd{{Fn{B`}}Bb}}}{{BDf{{AOl{AOj}}}}}}{{{f{B@j}}e{f{{Lh{BB`}}}}}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}e{f{BB`}}}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClB@j}}{f{{Ad{c}}}}}{{Bd{bBb}}}{{Hf{An}}}}{{{f{B@j}}}{{Gj{FhFh}}}}{{{f{B@j}}Gf}B@j}{{{f{B@j}}}d}{{{f{ClB@j}}}b}{{{f{BCl}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{BCn}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{B@j}}GfFh}B@j}00{{{f{B@j}}cEn}{{Bd{B@jBb}}}{{BDf{{AOl{AOj}}}}}}{{{f{ClB@j}}cEn}{{Bd{{f{ClB@j}}Bb}}}{{BDf{{AOl{AOj}}}}}}{{{f{B@j}}Gf}{{Gj{B@jB@j}}}}0{{{f{ClB@j}}}{{`{{Ch{}{{Cb{B@j}}}}}}}}{{B@jFhd}{{Fn{B@j}}}}{{{f{B@j}}BBd}{{Bd{{C`{B`}}Bb}}}}{{{f{B@j}}{C`{Fh}}}B@j}{{{f{B@j}}{f{{l{El}}}}}{{Bd{B@jBb}}}}{{{f{B@j}}{f{{l{El}}}}}B@j}{{{f{B@j}}{f{{l{El}}}}d}B@j}{{{f{B@j}}}{{f{B@j}}}}{{{f{B@j}}BDh}{{Bd{{Oj{Od{Oh{{Of{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{B@j}}FhcEn}{{Bd{B@jBb}}}{{BDf{{AOl{AOj}}}}}}{{{f{ClB@j}}{C`{{f{An}}}}{C`{{On{Ef{Fn{Ef}}}}}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{An}}e}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@j}}Fhe}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{BDj{{Bd{B@jBb}}}}{{{Gj{{BDl{{Cf{Cd}}}}{f{{Ad{AO`}}}}}}}{{Bd{B@jBb}}}}{{c{f{BB`}}}{{Bd{B@jBb}}}{{Ch{}{{Cb{{Bd{{f{BBl}}Bb}}}}}}}}{{{f{B@j}}{f{An}}}{{Bd{FhBb}}}}44444{{{f{c}}}A@`{}}0000{{{f{B@j}}{C`{{f{{Ad{Ef}}}}}}BBf{C`{{Gj{GfFh}}}}}{{Bd{B@jBb}}}}{{{f{B@j}}d{C`{{f{{Ad{Ef}}}}}}BBf{C`{{Gj{GfFh}}}}}{{Bd{B@jBb}}}}1{{{f{B@j}}c}{{Bd{B@jBb}}}{{BDf{Ef}}}}{{{f{B@j}}ce}{{Bd{B@jBb}}}{{BDf{{AOl{AOj}}}}}{{BDf{{AOl{AOj}}}}}}{{{f{B@j}}BDn}{{Bd{B@jBb}}}}{{{f{B@j}}c{f{An}}BE`}{{Bd{B@jBb}}}{{BDf{Ef}}}}0{{{f{B@j}}{f{B@j}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{B@j}}}{{Bd{{f{ClB@j}}Bb}}}}{ce{}{}}0000{{{f{B@j}}}Fh}{{{f{ClB@j}}c}{{Bd{{f{ClB@j}}Bb}}}BBb}{{{f{ClB@j}}c{f{BB`}}}{{Bd{{f{ClB@j}}Bb}}}BBb}{{{f{ClB@j}}B`}{{f{ClB@j}}}}{{{f{B@j}}{f{An}}{C`{Ij}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{An}}{C`{Ij}}}{{f{ClB@j}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BDn}}}BDn}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{}BDn}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{BDn}}{f{BDn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDn}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{BDn}}{f{Clc}}}bAC`}`{{}Fh}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBn}}}{{Bd{B@jBb}}}}`{{{f{BEb}}}{{f{{Ad{{BEd{Ij}}}}}}}}{{{f{BBn}}c}{{Bd{B@jBb}}}{{Dn{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BEb}}}BEb}{{{f{Bh}}}Bh}{{{f{BBn}}}BBn}{{{f{BEf}}}BEf}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BEb}{{}Bh}{Fh{{f{c}}}{}}000{{{f{BEh}}}f}1111{Fh{{f{Clc}}}{}}0000000`{{BEjc}{}BEl}{Fhb}0000{{{f{ClBEb}}}b}111{{{f{BEb}}{f{BEb}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEn}}}Ij}{{{f{BEb}}}{{f{{Ad{Ij}}}}}}{{{f{BBn}}}{{Bd{B@jBb}}}}{{{f{ClBEb}}}{{f{Cl{Fn{Ij}}}}}}{{{f{BEb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Bh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BEf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{An}}BEf}Ef}{cc{}}000{{{Fn{{Fn{{Gj{Ij{BEd{Ij}}}}}}}}}BEb}{{{Fn{{Gj{Ij{BEd{Ij}}}}}}}BEb}{{{Fn{{Gj{{Fn{Ij}}{Fn{{BEd{Ij}}}}}}}}}BEb}33{BEbBh}4{BF`BEf}5{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cBEb{{Hb{}{{Cb{{Gj{Ij{BEd{Ij}}}}}}}}}}{cBEb{{Hn{}{{Cb{{Gj{Ij{BEd{Ij}}}}}}}}}}{{{f{Bh}}Fh}BEn}{{{f{BBn}}}{{f{Bh}}}}{{{f{ClBBn}}}{{f{ClBh}}}}{{{f{Bh}}}{{l{El}}}}{{{f{BFb}}dd}{{Bd{BhBb}}}}{{{f{BBn}}}{{Bd{B@jBb}}}}{{{f{ClBh}}}{{f{ClBEb}}}}{{}Fh}0000000{ce{}{}}0000000{BhBEb}1{BEb}{{{f{BEb}}}}310{{{f{BEn}}}d}{{{f{Bh}}}d}{{{f{BEb}}}d}{{{f{BEb}}}{{BFf{{BFd{{Ff{Ij}}}}{Ff{{BEd{Ij}}}}}}}}{{{f{Bh}}}BFh}{{{f{BBn}}}{{Fn{B`}}}}{{{f{BBn}}{C`{{Gj{GfFh}}}}}{{Fn{B`}}}}={{{f{BEn}}}Fh}{{{f{Bh}}}Fh}?????{{{Fn{Ij}}{Fn{{BEd{Ij}}}}d}BEb}{{{f{B@j}}{Fn{B`}}Bh{C`{{Fn{Ef}}}}}BBn}{{{f{ClBFh}}}C`}{{{f{ClBFh}}Fh}C`}{{{f{BBn}}c}{{Bd{B@jBb}}}{{Df{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{{f{c}}}{}{}}{{{f{Bh}}}BEj}{{{f{BBn}}LfNd}{{Bd{B@jBb}}}}{{BBne}BBn{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{Bh}}GfFh}BEh}{{{f{ClBEb}}}b}{{{f{ClBh}}}b}{{{f{BBn}}Ab}{{Bd{B@jBb}}}}{{{f{BBn}}}{{Bd{B@jBb}}}}{Bh{{Fn{Ij}}}}0{BBnBh}{{{f{ClBBn}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}A@`{}}0000000{BhBh}{{{f{Bh}}}{{f{BEb}}}}{{{f{Bh}}}{{f{{Fn{{Of{Ij}}}}}}}};{ce{}{}}0000000`````{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{C`}}}}I`Ib}}{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{}}}}I`Ib}}{{{f{{Ad{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}I`Ib}}{{{f{{Ad{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}I`Ib}}{{{f{{Ad{c}}}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{Ad{c}}}}{f{Hl}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{Ad{{Cf{Cd}}}}}}}d}{{{f{BFn}}{f{Bh}}}B`}{{BG`BG`}BG`}0`{{{f{BGb}}{f{B@j}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BGb}}}{{Bd{{f{An}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBGd}}Ih}{{C`{b}}}}{{{f{ClBGf}}{f{Ih}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BGd}}}BGd}{{{f{BGf}}}BGf}{{{f{BBl}}}BBl}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Ad{c}}}}}Ed{{Hj{Ed}}}}{{}BBl}{Fh{{f{c}}}{}}00{Fh{{f{Clc}}}{}}00{Fhb}00{{{f{BBl}}{f{BBl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBl}}{f{ClGl}}}{{Bd{bGn}}}}{{{Gj{{f{Ed}}Fh}}}BGd}{cc{}}0{{{Gj{{f{Ed}}Fh}}}BGf}1{{eFh}BB`{{ANl{Ed}}}{{Ch{}{{Cb{{Fn{{Gj{Efc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BGdB`}{BGfB`}{{{f{Ed}}Fh}BGd}{{{f{Ed}}Fh}BGf}{{{Fn{Ih}}}BBl}{{{f{ClBGd}}Fh}B`}{{{f{ClBGf}}Fh}B`}{{{f{{Ad{BBl}}}}{C`{Fh}}}{{Bd{BB`Bb}}}}0{{{f{{Ad{BBl}}}}{C`{Fh}}}{{Bd{{Fn{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00<<<{{{f{{Ad{B@j}}}}}{{Bd{B@jBb}}}}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{B@j{f{{Ad{{f{An}}}}}}{f{{Ad{{f{An}}}}}}{C`{{f{An}}}}{f{B@j}}}B@j}{{BD`c}{{Bd{B@jBb}}}{{Df{BGh{f{Cl{BGl{BGj}}}}{f{Cl{BGl{BGn}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BH`}}{f{{Ad{Ij}}}}dd}B@j}{{{f{BH`}}{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}{f{B@j}}BHb}{{Bd{B@jBb}}}}{{{f{BH`}}{f{B@j}}{f{B`}}{f{B`}}BHb}{{Bd{B@jBb}}}}{{{f{An}}{f{An}}}Ef}{{{f{BH`}}{f{B@j}}{f{B`}}{f{B`}}BHbd{C`{{f{{Ad{{f{An}}}}}}}}}{{Bd{B@jBb}}}}{{{f{BDj}}Fh}{{Gj{BDjBDj}}}}{{{f{BHd}}{f{{Ad{Nl}}}}Kl}B@j}0{{{f{BHd}}{f{{Ad{Nl}}}}}B@j}0{{{f{BHf}}{C`{{Fn{{f{An}}}}}}{C`{{f{An}}}}d}{{Bd{B@jBb}}}}{{BD`d}BD`}{{{BHh{c}}{C`{{Lh{BHj}}}}}{{BHh{c}}}BHl}{{{f{B`}}}{{Bd{B`Bb}}}}{BHnBHn}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BE`}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}0{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}1{{BIdc}BD`{{Hf{{Ad{BHn}}}}}}5`{{BHn{f{An}}}BHn}{{}BHn}{{BHnd}BHn}{c{{Bd{BHnBb}}}{{Hf{{Ad{BHn}}}}}}{{{f{{Lh{ce}}}}}{{f{e}}}{}BIf}{{BIhd}BIh}`{{{f{BIj}}}d}00`{{BHnc}BHn{{ANl{BHn}}}}{{{Lh{BIj}}BIl}{{Bd{BD`Bb}}}}65{{BHncd}BHn{{ANl{BHn}}}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAh}}c}b{}}{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{BIdc{Lh{BB`}}}BD`{{Df{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{BHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{{f{BHn}}{f{Clc}}f}{{Bd{BJbBb}}}{{Dn{{f{BHn}}f}{{Dd{{Bd{BJbBb}}}}}}}}{{{f{AFn}}{f{Df}}}AFn}{{{f{AFn}}{f{Df}}}{{l{c}}}Db}{{BHnc{f{{Ad{BHn}}}}{BJ`{{Lh{BIn}}}}}BHn{{Df{{f{Cl{Ad{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBJd{f{{Ad{BHn}}}}dd}BHn}{{ce{BJ`{{Lh{BIn}}}}d}BHn{{Df{{f{Cl{Ad{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}{{Hf{{Ad{BHn}}}}}}{{{f{{AFl{}{{AFj{c}}}}}}i{f{Cl{Ad{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{BHnBHnGfEd}BHn}{BDj{{Lh{Cd}}}}{{{f{BJf}}}{{C`{Fh}}}}{BJhBHn}{BJjBHn}{BHnBHn}3210{{{f{AG`}}Ej}{{l{El}}}}{{BHnEj}BHn}{{{f{BJl}}Ej}{{l{El}}}}{{cEn}BHn{{Hf{{Ad{BHn}}}}}}{{{f{AG`}}{f{{Ad{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AGb}}}{{Bd{{l{El}}Bb}}}}6{{{f{BJl}}}{{Bd{{l{El}}Bb}}}}{cBHn{{ANl{BHn}}}}{{{f{BJn}}}{{f{{Ad{Mn}}}}}}``{BHnBJh}{eALf{}{{Hb{}{{Cb{c}}}}}}0{{AEje}ALh{}{{Hb{}{{Cb{c}}}}}}0`{{{f{Cl{BK`{c}}}}}{{Bd{BBjBb}}}BKb}{{{f{BIj}}}{{f{AEl}}}}{{{f{BJl}}}{{f{AEl}}}}{{{f{BKd}}}{{f{AEl}}}}{{{f{BDj}}}{{f{AEl}}}}{{{f{ClBJl}}}{{f{ClAEl}}}}{{{f{ClBDj}}}{{f{ClAEl}}}}{{{f{BKf}}}{{f{{l{A`}}}}}}{{{f{BKh}}{C`{{f{An}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}Jldd{C`{{f{Ef}}}}{f{{l{Al}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}Jld{C`{{f{Ef}}}}{f{{l{Al}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Lh{c}}}}}BKj{BKlNj}}{{{f{BKn}}}{{f{{l{j}}}}}}{{{f{{Lh{ce}}}}}{}NjBIf}{{{f{{Lh{c}}}}}MlBL`}{{{f{BLb}}}{{f{BHn}}}}{{{f{{Lh{ce}}}}}{{f{c}}}NjBIf}{{{f{ALj}}}{{f{Ed}}}}{{{f{BLd}}}{{f{B`}}}}{{{f{ClBJl}}}{{Bd{FhBb}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{{f{{Ad{c}}}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BLf}}}{{f{{l{Al}}}}}}{{{Fn{BHn}}}BHn}{{{f{BKh}}{C`{{f{An}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{Lh{{Ad{{BLh{c}}}}e}}}{{Lh{{Ad{c}}e}}}{}BIf}{{{Lh{{BLh{c}}e}}}{{Lh{ce}}}{}BIf}{{{f{An}}}BHn}{{BHn{C`{Ij}}}BHn}{{{f{BLj}}}{{Bd{{l{Al}}Bb}}}}{{{f{BLj}}}{{l{Al}}}}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKl}}}{{Jh{KdJj}}}}`{{{BHh{{Cf{BHl}}}}{C`{{Lh{BB`}}}}}{{Bd{BLlBb}}}}{{{BLn{c}}{f{BB`}}}{{Bd{{BM`{c}}Bb}}}BMb}{{{BMd{c}}{f{BB`}}}{{Bd{{BMf{c}}Bb}}}BMb}{{{BMh{c}}Fh}{{Bd{BMjBb}}}BHl}{{{BMl{c}}{f{BB`}}}{{Bd{{BMn{c}}Bb}}}BMb}{{{f{Cl{BHh{c}}}}}{{Bd{BN`Bb}}}BHl}`{BHnBNb}{{BHnBNdBHn}BHn}{{{f{BJl}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}{{f{c}}}NjBIf}111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BD`IjcEn}BD`{{Hf{{Ad{BHn}}}}}}{BDj{{Cf{Cd}}}}`{BD`BD`}```{{{f{BNf}}{f{An}}}{{Bd{EfBb}}}}{{BNh{Fn{BHn}}}{{Bd{BHnBb}}}}{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{{f{BKd}}{f{Cl{Ad{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BNj}}B`B`}{{Bd{B`Bb}}}}{{BNh{Fn{BHn}}}BHn}{{{f{BNl}}}b}{{BHnEd}BHn}{{{f{BJl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BD`{BNn{{f{An}}EdO`}}d}BD`}{{{f{AGd}}{f{Ed}}}{{Bd{B`Bb}}}}3{{{f{AMl}}{f{Ed}}}{{Bd{B`Bb}}}}{{BD`Edd}BD`}2{{{f{AGd}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AMl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BHnEdFb}BHn}`{BHnBO`}{{{f{{Lh{c}}}}}{{C`{{f{AJn}}}}}{AJnNj}}{BHnBHn}{{{f{BOb}}}{{Bd{B`Bb}}}}1`{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BDj}}Fh}d}{{{f{BBj}}{f{BBj}}{C`{{f{{Ad{Ef}}}}}}{f{An}}}{{Bd{bBb}}}}{{{f{BB`}}{f{BB`}}{C`{{f{{Ad{Ef}}}}}}{f{An}}}{{Bd{bBb}}}}0{{{f{BOf}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJl}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOf}}c}{{Bd{B`Bb}}}Aj}{{{f{BJl}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Fh}}}}}}}}``{{{f{BJl}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJl}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHnBHnBHn}BHn}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHnBHn}BHn}10{{{f{BNl}}}BNl}{{{f{BD`}}}BD`}{{{f{BId}}}BId}{{{f{BIl}}}BIl}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{BC`}}}BC`}{{{f{BDb}}}BDb}{{{f{C@b}}}C@b}{{{f{BE`}}}BE`}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{A@b}}}A@b}{{{f{Nl}}}Nl}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{BHb}}}BHb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{BLb}}}BLb}{{{f{BHn}}}BHn}{{{f{CDn}}}CDn}{{{f{BNd}}}BNd}{{{f{{BJ`{c}}}}}{{BJ`{c}}}ABj}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{BJd}}}BJd}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{BNh}}}BNh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{{Lh{ce}}}}}{{Lh{ce}}}Nj{BIfABj}}{{{f{CGd}}}CGd}{{{f{Nf}}}Nf}{{{f{BDh}}}BDh}{{{f{BDj}}}BDj}{{{f{BB`}}}BB`}{{{f{AO`}}}AO`}{{{f{BBj}}}BBj}{{{f{Nd}}}Nd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{BJl}}}{{Lh{BJl}}}}{{{f{c}}{f{Cle}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{c}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CGl}}}{{C`{{f{CGn}}}}}}````{{{f{BE`}}{f{BE`}}}B@d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}B@d{CH`Nj}BIf}{{{f{{Ad{BHn}}}}}BHn}{{BIhCBd}BIh}{{{f{CBd}}{f{CBf}}}d}`{{{f{{Ad{B`}}}}}{{Bd{B`Bb}}}}{{{f{An}}}BHn}{BD`{{Bd{B@jBb}}}}{c{{Bd{{Fn{B@j}}Bb}}}{{Hn{}{{Cb{BD`}}}}}}{ANhe{}{{ALf{c}}AJj}}0{{ANhAEj}e{}{{ALh{c}}AJj}}0{{ACb{f{An}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{An}}Ed}{{l{c}}}Db}0{BD`{{Bd{BNlBb}}}}{cBHn{{BDf{Ef}}}}{{{f{CGd}}Fh}CHb}``{{{f{BHf}}{Fn{{f{An}}}}{C`{{f{An}}}}d}{{Bd{B@jBb}}}}`{{{f{c}}{f{e}}}B@d{}{}}0``{{{f{CDd}}}{{Bd{{Lh{BB`}}Bb}}}}{{cCGb}{{Bd{BD`Bb}}}{{Hf{{Ad{BD`}}}}}}{{{f{BLj}}{f{{l{Al}}}}}{{l{Al}}}}{{ed}{{Bd{BHnBb}}}{{ANl{BHn}}ABj}{{Hf{{Ad{c}}}}}}{{{f{CGl}}{Fn{BD`}}}{{Bd{BD`Bb}}}}{{{f{BOh}}{Fn{BD`}}}{{Bd{BD`Bb}}}}44{e{{Bd{BHnBb}}}{{ANl{BHn}}ABj}{{Hf{{Ad{c}}}}}}{{c{f{An}}d}BHn{{Hf{{Ad{BHn}}}}}}{{BJhc}BHn{{ANl{BHn}}}}{{{f{CHd}}{f{{Ad{Ab}}}}}{{l{n}}}}{{{f{BLj}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{BJjc}BHn{{ANl{BHn}}}}{{{f{BB`}}{f{An}}}d}{{{f{CHd}}{f{{l{A`}}}}}{{l{n}}}}{{{f{BLj}}{f{{l{Al}}}}dd}{{Bd{{l{n}}Bb}}}}{{{f{BLj}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{Cd}}{f{AEj}}}{{Cf{Cd}}}}{{{f{B`}}Fh}{{Bd{{l{El}}Bb}}}}{BD`BD`}{{{CHf{c}}}{{Bd{FhBb}}}BHl}{BHnBHn}{{{f{BLj}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLj}}{f{{l{Al}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CHh}}Ab{C`{Ab}}{C`{{f{CAb}}}}Abd}{{Bd{FhBb}}}}{{{AMf{An}}}Ed}{{{f{BH`}}{f{{Ad{Nl}}}}d}B@j}{{{f{CHj}}c}{{Cf{CHl}}}BMb}{{{f{CHn}}c}{{Cf{CHl}}}BMb}`{{BD`BD`{C`{Ef}}}BD`}{{{f{CI`}}{f{B@j}}{C`{{f{An}}}}{C`{{Gj{GfFh}}}}}{{Bd{B@jBb}}}}{{{f{CI`}}{f{B@j}}{C`{{Gj{GfFh}}}}d}{{Bd{{Gj{B@jB@j}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BHnd}BHn}{{BHnced}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{Ad{BHn}}}}}}212121{{ce}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{Ad{BHn}}}}}}32{{CIbBHnFhd}BHn}`{{{f{BDj}}}{{f{AEj}}}}{{{f{AO`}}}{{f{AEj}}}}```{{BHnBHnBE`C@d}BHn}`{CEjBHn}`{{BHnBHnBE`C@d{C`{Jl}}{C`{Ef}}}BHn}0{AKjGf}00{{{f{CId}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CIh}}}{{l{Jj}}}}{{{f{BE`}}}Gf}`{{{f{BE`}}}d}```{{}b}{cbBIf}{{}BD`}{{}BIl}{{}BOj}{{}BOn}{{}CHj}{{}CHn}{{}BC`}{{}BDb}{{}C@h}{{}C@l}{{}C@n}{{}CA`}{{}CAf}{{}CAh}{{}CAj}{{}CAn}{{}CB`}{{}CBb}{{}BHb}{{}CBd}{{}CBj}{{}CBl}{{}CBn}{{}CC`}{{}CCb}{{}CCd}{{}CCh}{{}CDb}{{}CDd}{{}BHn}{{}{{BJ`{{Lh{BNj}}}}}}{{}{{BJ`{{Lh{BIn}}}}}}{{}{{BJ`{{Lh{CIj}}}}}}{{}CEj}{{}CEl}{{}CF`}{{}CFb}{{}CFd}{{}CFf}{{}CFj}{{}CFn}{{}CG`}{{}CGb}{{}{{Lh{c}}}CIl}{{}{{Lh{{Ad{c}}}}}{}}{{}{{Lh{CIn}}}}{{}{{Lh{An}}}}{{}Nf}{{}BDh}{{}BB`}{{}AO`}{{}BBj}{{}Nd}`{{}{{On{{Fn{A@b}}{Fn{Nl}}}}}}{Fh{{f{c}}}{}}0{{{f{{AKf{c}}}}}f{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BJ`{c}}}}}f{}}2222222222222222222222{{{f{{Lh{ce}}}}}{{f{c}}}NjBIf}333333333333{Fh{{f{Clc}}}{}}0{{{f{Cl{AKf{c}}}}}{{f{Cl}}}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CDd}}}{{Bd{EfBb}}}}{{{f{BD`}}}{{Bd{EfBb}}}}0001{{{f{{Lh{c}}}}}{{f{An}}}{AJnNj}}{{{f{AO`}}{f{CJ`}}}{{Bd{CJbBb}}}}```{{{f{B`}}GfCJd}{{Bd{B`Bb}}}}{{BJjGfCJd}BHn}{{BHnGfCJd}BHn}{{{f{CDd}}}{{Bd{{`{BAn}}Bb}}}}``{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{BHnc}BHn{{ANl{BHn}}}}{{{Lh{AElc}}}{{Bd{{Lh{ec}}{Lh{AElc}}}}}BIf{AElI`Ib}}{{{Lh{AElc}}}{{Lh{ec}}}BIf{AElI`Ib}}{{{f{{Lh{ce}}}}}{{CJf{ce}}}Nj{ABjBIf}}{Fhb}000000{{{f{ClBNl}}}b}1{{BD`e}BD`{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Lh{ce}}}}}bNjBIf}3333333333333{BHnBHn}2{{BD`{C`{{Fn{BHn}}}}}BD`}1{{{f{BJl}}}B`}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKl}}}{{Jh{KdJj}}}}`{BHnCJh}{{{f{AMl}}}{{f{Ed}}}}{{{f{BJl}}}{{f{Ed}}}}`{{{f{Ed}}}BHn}{cBHn{{Hf{{Ad{Ed}}}}}}`{CElBHn}``{{}CG`}{{{f{c}}}e{}{{CJl{CJj}}}}0`{{{f{CHd}}{f{{Ad{Ab}}}}}{{l{n}}}}{{{f{CHd}}{f{{l{A`}}}}}{{l{n}}}}{{BE`{f{Ed}}{f{An}}}{{Bd{bBb}}}}{{BE`{C`{{f{An}}}}{f{An}}}{{Bd{bBb}}}}{{{f{CJn}}{f{An}}}{{Bd{bBb}}}}`{{{f{C@`}}{f{C@`}}}d}{{{f{BC`}}{f{BC`}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{BE`}}{f{BE`}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{BHb}}{f{BHb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{BLb}}{f{BLb}}}d}{{BHnc}BHn{{ANl{BHn}}}}{{{f{BHn}}{f{BHn}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{BNd}}{f{BNd}}}d}{{{f{{BJ`{{Lh{c}}}}}}{f{{BJ`{{Lh{c}}}}}}}dNj}{{{f{{BJ`{B`}}}}{f{{BJ`{B`}}}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{BJd}}{f{BJd}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CK`Nj}BIf}{{{f{{Lh{Cd}}}}{f{Cd}}}d}{{{f{{Lh{CKb}}}}{f{CKb}}}d}{{{f{Nf}}{f{Nf}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{BDj}}{f{{f{Cd}}}}}d}{{{f{BDj}}{f{BDj}}}d}{{{f{BB`}}{f{BB`}}}d}{{{f{AO`}}{f{AO`}}}d}{{{f{BBj}}{f{BBj}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{CGj}}{f{CGj}}}d}{{BHnc}BHn{{ANl{BHn}}}}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CKdBHnd}BHn}``{{BHnc}BHn{{BDf{Ef}}}}{{BHnc}BHn{{Hf{{Ad{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAf}}}{}CKf{}}{{{f{CGl}}d}{{Bd{{Gj{{Lh{{Ad{CHh}}}}Fh}}Bb}}}}{{{f{BD`}}d}{{Bd{EfBb}}}}{{BD`e}BD`{{ANl{BHn}}ABj}{{Hf{{Ad{c}}}}}}{{{f{AGj}}}{{Bd{B`Bb}}}}{BHnBHn}{{{f{AGj}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{BHnBHnBHn}BHn}{{{f{CHj}}}CHh}{{{f{CHn}}}CHh}{{{f{BLj}}{f{{l{Al}}}}Fh}{{Bd{{l{Al}}Bb}}}}{Nl{{Gj{IjIj}}}}{{{f{BLj}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{{l{Al}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{An}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AAf}}}d}``{{{f{BNl}}}{{C`{{Bd{B@jBb}}}}}}{{BD`Fh}{{Bd{B@jBb}}}}{{{f{BNl}}}{{Bd{B@jBb}}}}{{{f{AAf}}}{{f{Mn}}}}{{{f{BJl}}}{{Dj{Mn}}}}{{CKhGf}BHn}{{CKh{f{An}}}BHn}{{CKh{f{{Ad{c}}}}}BHn{{Hf{An}}}}{{{f{BDj}}}{{f{{Ad{AO`}}}}}}```{{BD`c}BD`{{ANl{BHn}}}}{{BHnc}BHn{{ANl{BHn}}}}`10{{BHnAGf}BHn}{{{f{AGl}}c}{{Bd{AGlBb}}}{}}{{{f{AGn}}{f{{l{n}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BJl}}{f{{l{n}}}}}{{Bd{B`Bb}}}}{{BD`BHn}BD`}5{{BBjc}BBj{{Df{Fh{f{AO`}}}{{Dd{d}}}}}}{{{f{BLj}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLj}}{f{{l{Al}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BLj}}{f{An}}}{{Bd{{l{El}}Bb}}}}{CKj{{Bd{B@jBb}}}}{{{f{ClCHl}}{f{ClB@j}}}{{Bd{bBb}}}}{AAh{{l{c}}}Db}{{AMj{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BIhBD`}{CGl{{Bd{BD`Bb}}}}{{{BHh{c}}}{{Bd{B@jBb}}}BHl}{BOh{{Bd{BD`Bb}}}}{BOl{{Bd{BD`Bb}}}}{{{f{Cl{BLn{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{CKl{c}}}{{Bd{B@jBb}}}BHl}{{{BK`{c}}}{{Bd{B@jBb}}}BKb}{{{f{Cl{CKn{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{f{Cl{BMd{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{f{Cl{CL`{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{CLb{c}}}{{Bd{B@jBb}}}BHl}{{{CHf{c}}}{{Bd{B@jBb}}}BHl}{{{BMh{c}}}{{Bd{B@jBb}}}BHl}{{{BMl{c}}{f{ClB@j}}}{{Bd{JbBb}}}BMb}{{{f{ClAAf}}}{{l{j}}}}><;{{{CKl{c}}{C`{{Lh{BHj}}}}d}{{Bd{B@jBb}}}BHl}{{{f{BMj}}Fh}d}{{}BHn}{BD`BD`}{BJjBHn}{BHnBHn}`0``{{}{{BJ`{{Lh{BIn}}}}}}{{{f{BOb}}}{{Bd{B`Bb}}}}2{{BHnBHn}BHn}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Lh{AEb}}}}}{{Bd{bBAf}}}}{{{f{BKd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BC`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@b}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BE`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{C@d}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@f}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@h}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{A@b}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BIj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@l}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@n}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CA`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CLd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BHb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBj}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CC`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CD`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CDb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BHn}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CDn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{{BJ`{c}}}}{f{ClGl}}}{{Bd{bGn}}}{}}{{{f{CE`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEh}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{BJd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CF`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CJb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CG`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{BAnNj}BIf}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{AEnNj}BIf}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}NjBIf}{{{f{CGd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AO`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{An}}BEf}Ef}```{{BHnce}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{Ad{BHn}}}}}}{{BIhd}BIh}``{{{f{An}}c}{{Bd{BHnBb}}}{{Hf{{Ad{BHn}}}}}}{{BHn{C`{Ij}}}BHn}{cc{}}0000000{BIdBD`}{CDdBD`}2222222222222222222222222222222222{IjA@b}33333333{{{f{An}}}CAb}444444444{CBfBHb}555555555555555555555555{dBHn}{LfBHn}{GfBHn}8{{{f{An}}}BHn}{MdBHn}{IjBHn}{JbBHn}{BLbBHn}{MlBHn}{AbBHn}{LlBHn}{M`BHn}{J`BHn}{cc{}}0{CLf{{BJ`{{Lh{BKd}}}}}}{CLh{{BJ`{{Lh{BKd}}}}}}{BJd{{BJ`{{Lh{BKd}}}}}}{CLj{{BJ`{{Lh{BKd}}}}}}{CEd{{BJ`{{Lh{BKd}}}}}}{CEh{{BJ`{{Lh{BKd}}}}}}6{CE`{{BJ`{{Lh{BKd}}}}}}{CLl{{BJ`{{Lh{BKd}}}}}}{CLn{{BJ`{{Lh{BKd}}}}}}{CEb{{BJ`{{Lh{BKd}}}}}}:::::{CE`BJd}{CEbBJd}{CLhBJd}{CEhBJd}>>>>>>>{CFfCFd}?????{CM`CJb}{cc{}}000{CHh{{Lh{CMb}}}}{{{f{CIn}}}{{Lh{CIn}}}}{CMd{{Lh{CMf}}}}{{{f{CMb}}}{{Lh{CMb}}}}{{{f{CMf}}}{{Lh{CMf}}}}{Ef{{Lh{An}}}}{{{Lh{An}}}{{Lh{{Ad{Ab}}}}}}7{{{f{An}}}{{Lh{An}}}}{{{f{{Ad{c}}}}}{{Lh{{Ad{c}}}}}ABj}{CMhc{}}{CMj{{Lh{CIn}}}}{c{{Lh{c}}}{}}{{{Dj{c}}}{{Lh{c}}}{CMlNj}}{{{Cf{ce}}}{{Lh{ce}}}NjBIf}{{{Of{c}}}{{Lh{{Ad{c}}}}}{}}{{{Fn{ce}}}{{Lh{{Ad{c}}e}}}{}{BIfABj}}{cc{}}000{CMnBDj}{CN`BDj}2{BBjBB`}{{{f{BBj}}}BB`}{{{f{BBl}}}BB`}{{{f{{Lh{BBj}}}}}BB`}{{{Lh{BBj}}}BB`}{{{f{{Ad{B`}}}}}BB`}888{{{Fn{AO`}}}BBj}9999{{c{C`{Hl}}}CNb{}}{{{CNd{Gf}}{CNd{Ab}}{C`{Hl}}}CNf}{{{CNd{Gf}}{CNd{Ab}}{C`{Hl}}}CNh}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}00{c{{AKf{{l{e}}}}}{{Hb{}{{Cb{}}}}}Af}{c{{AKf{{l{n}}}}}{{Hb{}{{Cb{d}}}}}}{e{{Lh{{Ad{c}}}}}{}{{Hb{}{{Cb{c}}}}}}{eBB`{{ANl{Mn}}}{{Hb{}{{Cb{c}}}}}}{{gFh}{{CNj{Gf}}}Hf{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}0{e{{CNj{Gf}}}{{Hb{}{{Cb{{C`{d}}}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gAEj}{{CNj{Gf}}}BFl{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}673{{{f{An}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{c{{AKf{{l{e}}}}}{{Hn{}{{Cb{}}}}}Af}{e{{Lh{{Ad{c}}}}}I`{{Hn{}{{Cb{c}}}}}}`{c{{Bd{{CHf{AEb}}Bb}}}{{ANl{CHh}}}}{{}{{Lh{c}}}Nj}{c{{Lh{ec}}}BIfNj}{{{f{An}}{f{{Ad{c}}}}}ABn{}}{{{f{An}}{f{{Ad{{C`{c}}}}}}}ABn{}}{{{f{An}}}{{Bd{CNl}}}}{c{{AKf{{l{e}}}}}{{If{}{{Cb{}}}}}Af}{c{{AKf{{l{n}}}}}{{If{}{{Cb{d}}}}}}{Ed{{BJ`{{Lh{BIn}}}}}}{{{f{An}}c}CNn{}}{{{Fn{c}}AEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEj}{{AJj{}{{ALl{e}}{ALn{c}}{AM`{g}}}}}{AMb{AMd{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}`{{{f{An}}cFh}AH`{}}{{FhcAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{}CG`}{{BD`BD`cc}BD`{{ANl{BHn}}}}{{{f{CO`}}{f{B@j}}ee}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{An}}Fh}AHb}{{FhAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}``{{BHnc{BJ`{{Lh{BIn}}}}COb}BHn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}`{{BHnc}BHn{{ANl{BHn}}}}{{BHnFhFh}BHn}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}{{{f{BJl}}Fh}{{Bd{IhBb}}}}{{BJhBHnd}BHn}{{BJjBHnd}BHn}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}6{{{f{BB`}}{f{An}}}{{C`{{f{Ed}}}}}}{{{f{AHd}}Fh}{{Bd{IhBb}}}}{{{f{AMl}}Fh}{{Bd{IhBb}}}}{{{f{AHd}}Fh}Ih}{{{f{AMl}}Fh}Ih}{{{f{BB`}}Fh}{{C`{{Gj{{f{{AOl{AOj}}}}{f{Ed}}}}}}}}{{{f{ClBB`}}Fh}{{C`{{Gj{{f{Cl{AOl{AOj}}}}{f{ClEd}}}}}}}}{BO`BHn}{{{f{BD`}}}CFj}{{{f{CFl}}}Ed}{{}Ed}{{{f{C@j}}GfC@d{C`{{f{AKl}}}}}{{Bd{C@bBb}}}}00{{{f{CIj}}{f{BB`}}COf{f{Mn}}{f{Mn}}}{{C`{Mn}}}}{{{f{BIn}}{f{BB`}}COf{f{{Ad{Mn}}}}}{{Bd{MnBb}}}}{{{f{BB`}}{f{An}}}{{C`{Mn}}}}{{{f{AEj}}}{{f{{Ad{AO`}}}}}}{{{f{BJn}}}Fh}{{{f{BB`}}{f{An}}}{{C`{{Gj{Fh{f{{AOl{AOj}}}}{f{Ed}}}}}}}}{{{f{Cl{BMh{c}}}}}{{Bd{{f{{Lh{CGd}}}}Bb}}}BHl}{{{f{BJl}}}{{C`{{f{ADl}}}}}}{{{f{Cl{Lh{ce}}}}}{{C`{{f{Clc}}}}}NjBIf}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}NjBIf}{{{f{COh}}}{{Fn{{f{An}}}}}}{{{f{BB`}}}{{Fn{{f{An}}}}}}{{{f{BBj}}}{{Fn{{f{An}}}}}}{{{f{BJl}}Fh}{{C`{{f{In}}}}}}{{{f{BJl}}FhFh}{{C`{{f{In}}}}}}{{{f{BKd}}}{{C`{{BJ`{{Lh{BIn}}}}}}}}{{{f{C@j}}C@bC@dJl{C`{{f{AKl}}}}C@h}{{Bd{COjBb}}}}{{{f{C@l}}}{{Lh{C@n}}}}{{{f{Clc}}}{{Bd{COlBb}}}{BKbBHlNj}}{{{f{CLd}}{f{BB`}}}{{Bd{{Lh{BB`}}Bb}}}}{{cFh}{{Fn{{Gj{FhFh}}}}}{{Ch{}{{Cb{Fh}}}}}}{{{f{AOn}}Fh}Ih}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BJl}}Fh}Ih}{{{f{CGl}}}d}{{{f{BOh}}}d}`{{BD`e}BId{{ANl{BHn}}ABj}{{Hf{{Ad{c}}}}}}{{{f{COn}}{Fn{B`}}{f{BC`}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}{{BD`BHncBC`}BId{{Hf{{Ad{BHn}}}}}}2{{BE`BE`{f{{Ad{Gf}}}}C@dJl{C`{AKl}}}{{Bd{{Fn{{Of{Ij}}}}Bb}}}}{{C@j{f{{Ad{Gf}}}}C@dJl{f{{C`{Ef}}}}ddC@h}{{Gj{{Fn{{Of{Ij}}}}{Fn{Gf}}{Fn{Gf}}}}}}{{{f{BFb}}dd}{{Bd{BhBb}}}}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}21`{{{f{BJl}}}d}{{{f{D@`}}}d}{{{f{BC`}}{f{Clc}}}bAC`}{{{f{BDb}}{f{Clc}}}bAC`}{{{f{BE`}}{f{Clc}}}bAC`}{{{f{C@d}}{f{Clc}}}bAC`}{{{f{C@f}}{f{Clc}}}bAC`}{{{f{C@h}}{f{Clc}}}bAC`}{{{f{C@l}}{f{Clc}}}bAC`}{{{f{C@n}}{f{Clc}}}bAC`}{{{f{CA`}}{f{Clc}}}bAC`}{{{f{CAb}}{f{Clc}}}bAC`}{{{f{CAd}}{f{Clc}}}bAC`}{{{f{CAf}}{f{Clc}}}bAC`}{{{f{CAh}}{f{Clc}}}bAC`}{{{f{CAj}}{f{Clc}}}bAC`}{{{f{CAl}}{f{Clc}}}bAC`}{{{f{CAn}}{f{Clc}}}bAC`}{{{f{CB`}}{f{Clc}}}bAC`}{{{f{CBb}}{f{Clc}}}bAC`}{{{f{BHb}}{f{Clc}}}bAC`}{{{f{CBd}}{f{Clc}}}bAC`}{{{f{CBf}}{f{Clc}}}bAC`}{{{f{CBh}}{f{Clc}}}bAC`}{{{f{CBj}}{f{Clc}}}bAC`}{{{f{CBl}}{f{Clc}}}bAC`}{{{f{CBn}}{f{Clc}}}bAC`}{{{f{CC`}}{f{Clc}}}bAC`}{{{f{CCb}}{f{Clc}}}bAC`}{{{f{CCd}}{f{Clc}}}bAC`}{{{f{CCf}}{f{Clc}}}bAC`}{{{f{CCh}}{f{Clc}}}bAC`}{{{f{CCj}}{f{Clc}}}bAC`}{{{f{CCl}}{f{Clc}}}bAC`}{{{f{CCn}}{f{Clc}}}bAC`}{{{f{CD`}}{f{Clc}}}bAC`}{{{f{CDb}}{f{Clc}}}bAC`}{{{f{BLb}}{f{Clc}}}bAC`}{{{f{BHn}}{f{Clc}}}bAC`}{{{f{CDn}}{f{Clc}}}bAC`}{{{f{BNd}}{f{Clc}}}bAC`}{{{f{CE`}}{f{Clc}}}bAC`}{{{f{CEb}}{f{Clc}}}bAC`}{{{f{CEd}}{f{Clc}}}bAC`}{{{f{CEf}}{f{Clc}}}bAC`}{{{f{CEh}}{f{Clc}}}bAC`}{{{f{BJd}}{f{Clc}}}bAC`}{{{f{CEn}}{f{Clc}}}bAC`}{{{f{CF`}}{f{Clc}}}bAC`}{{{f{CFb}}{f{Clc}}}bAC`}{{{f{CFd}}{f{Clc}}}bAC`}{{{f{CFf}}{f{Clc}}}bAC`}{{{f{CFh}}{f{Clc}}}bAC`}{{{f{CFl}}{f{Clc}}}bAC`}{{{f{CFn}}{f{Clc}}}bAC`}{{{f{CG`}}{f{Clc}}}bAC`}{{{f{CGb}}{f{Clc}}}bAC`}{{{f{{Lh{ce}}}}{f{Clg}}}b{D@bNj}BIfAC`}{{{f{BDh}}{f{Clc}}}bAC`}{{{f{BB`}}{f{Clc}}}bAC`}{{{f{AO`}}{f{Clc}}}bAC`}{{{f{Nd}}{f{Clc}}}bAC`}{{{f{CGj}}{f{Clc}}}bAC`}{{{f{D@d}}{f{B`}}CBjd}{{Bd{{Gj{{Gj{{Fn{Ij}}{Fn{Ij}}}}d}}Bb}}}}{{{f{D@d}}{f{B`}}CBjd}{{Bd{{Gj{{AKb{Ij}}{AKb{Ij}}}}Bb}}}}{{BId{C`{Fh}}}BD`}{{BJjBHn}BHn}{{BHn{C`{Fh}}}BHn}{{{f{BLj}}}{{Bd{{l{Al}}Bb}}}}{{{f{BLj}}}{{l{Al}}}}`{{{f{{Ad{{f{{l{Al}}}}}}}}{f{An}}d}{{Bd{{l{Al}}Bb}}}}{{{f{D@f}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CIh}}}{{l{Jj}}}}`{{BIhCBf}BIh}`{{{f{A@b}}}Ij}`{{{f{{Jh{JnJj}}}}{f{{l{Al}}}}CGj{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{An}}}}{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{BHnBHn}{{{f{AKj}}}d}{{{BLn{c}}d}{{BLn{c}}}BMb}``0`{{}b}{cb{ABjBIf}}`{cBHn{{Hf{{Ad{Gf}}}}}}``{{{f{COh}}{f{An}}}{{C`{Fh}}}}{{{f{BB`}}{f{An}}}{{C`{Fh}}}}{{{f{BBj}}{f{An}}}{{C`{Fh}}}}{{{f{{Ad{Ij}}}}}{{`{{Ch{}{{Cb{Fh}}}}}}}}{{{f{COl}}Ab{C`{Fh}}d{C`{{f{BB`}}}}FhFh{C`{{f{CAb}}}}{C`{Ab}}Ab{C`{{f{CAd}}}}dd{f{Cl{C`{Fh}}}}d}{{Bd{{Gj{BB`FhFh}}Bb}}}}{{{CLb{c}}{C`{{D@h{Fh}}}}}{{CLb{c}}}BHl}{{{CHf{c}}{C`{{D@h{Fh}}}}}{{CHf{c}}}BHl}``{{}Fh}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClAAf}}}{{Cf{Cd}}}}{{BD`BD`cc}BD`{{ANl{BHn}}}}{{{f{CO`}}{f{B@j}}ee}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClNl}}}{{f{ClJb}}}}`{{{f{ClBB`}}Fh{AOl{AOj}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BHnBHnGfEd}BHn}{{BHnBHnBHn}BHn}``{{{f{B`}}CCf}B`}{{BHnCCf}BHn}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BHnBHn}BHn}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDj{{Gj{{Fn{AO`}}{Fn{{Cf{Cd}}}}{C`{Hl}}}}}}{{{AKf{c}}}c{}}{{{Lh{ce}}}{{C`{c}}}{}BIf}33{{{f{BHn}}}}{{{f{BDj}}}}{BB`}{D@jBJj}{BJjBJj}{{{Lh{ce}}}{}NjBIf}{{{Lh{ce}}}{{Gj{e}}}NjBIf}{{C@lc}{{BHh{c}}}BHl}{{B@`Ed}{{Bd{LdBb}}}}{BBbB`}{{{Lh{BJl}}}B`}{CGdD@l}{BDf{{Fn{c}}}{}}{c{{Fn{{AOl{AOj}}}}}{}}{c{{Fn{Ef}}}{}}{{{f{CBf}}}d}{{{f{B`}}{f{B`}}{f{B`}}CCh}{{Bd{{l{n}}Bb}}}}{{BHnccCCh}BHn{{ANl{BHn}}}}{cd{{Hf{CMb}}}}{{{f{{Ad{Ab}}}}}d}{{{f{BE`}}{C`{{f{An}}}}}d}{{{f{CG`}}}d}{{{f{BJl}}}d}{{{f{BB`}}}d}{{{f{BBj}}}d}{{{f{BMj}}}d}{BHnBHn}{{{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{AHf}}}{{Bd{{l{n}}Bb}}}}27{{{f{BE`}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{BHnc}BHn{{ANl{BHn}}}}54{{{f{AHh}}}{{Bd{{l{n}}Bb}}}}6{{{f{CId}}}{{l{n}}}}{{{f{CIf}}}{{l{n}}}}{{{f{BOd}}}{{Bd{{l{n}}Bb}}}}999{{{f{BJl}}}{{l{n}}}}::0{{{f{Nl}}}d};{{{f{A@b}}}d}`{{{f{B`}}}d}{{{f{{Lh{AEb}}}}}d}{{}d}{{{f{CJn}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CBj}}{f{CBf}}}{{Bd{bBb}}}}4?{{{f{CId}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{AFb{cgAF`}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BDj}}}{{AFb{{Fn{{Cf{CKb}}}}D@nAF`}}}}{{{f{BB`}}}{{`{{Ch{}{{Cb{{Gj{{f{{AOl{AOj}}}}{f{Ed}}}}}}}}}}}}{{{f{BB`}}}{{`{Kf}}}}{{{f{ClBB`}}}{{`{Kf}}}}11{{BJhBHnd}BHn}{{BD`BD`ccBHb}BD`{{Hf{{Ad{BHn}}}}}}{{BJjBHnd}BHn}{{{f{CO`}}{f{B@j}}eeBHb}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{{f{DA`}}{f{B@j}}{f{An}}{f{An}}eeCC`{C`{Ih}}}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{BD`BIh}{{{f{DAb}}{f{An}}d}{{Bd{{l{Al}}Bb}}}}{{{f{DAb}}{f{{l{Al}}}}d}{{Bd{{l{Al}}Bb}}}}{{BIhd}BIh}`{CKhBHn}{DAdBHn}{{{f{CGd}}}{{f{{C`{{Fn{DAf}}}}}}}}``{{}BHn}{BD`BD`}{BJjBHn}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{BHnBHn}{DAhBD`}4{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}`{{BD`BD`cc}BD`{{ANl{BHn}}}}{{{f{CO`}}{f{B@j}}ee}{{Bd{B@jBb}}}{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{BIhc}BIh{{Hf{{Ad{BHn}}}}}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}<{{{f{BJl}}}Fh};9{{{f{BDj}}}Fh}{{{f{BB`}}}Fh}{{{f{BBj}}}Fh}{{BD`Ij}BD`}{{{f{BJl}}Fh}B`}{{{f{BMj}}}d}`{BHnBJj}{cBHnDAj}{DAjBHn}{BE`BHn}{DAlBHn}{CFlBHn}{{BHnc}BHn{{ANl{BHn}}}}0``{{BOld}BOl}{{{CHf{c}}d}{{CHf{c}}}BHl}```{BHnBHn}{{{f{DAb}}}{{l{El}}}}0{{{f{DAb}}{f{{Ad{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}GfCJd}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}Gfd}{{Bd{B`Bb}}}}{{{f{DAb}}{f{{l{Al}}}}d}{{Bd{{l{Al}}Bb}}}}4{{{f{DAb}}}{{Bd{B`Bb}}}}{{{f{DAb}}}B`}01{{{f{DAb}}}{{Bd{{l{El}}Bb}}}}{{{f{DAb}}}{{l{j}}}}{{{f{DAb}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}GfFh}{{l{j}}}}{{{f{DAb}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}Ab}B`}7{{{f{DAb}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}21``````{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}{DAnNj}{BIfABj}}{{BD`cCFj{C`{{Lh{CLd}}}}{C`{{f{An}}}}}BD`{{Df{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{DAdc}BHn{{Df{{f{An}}}{{Dd{{Bd{EfBb}}}}}}I`Ib}}{{BHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHn{f{Clc}}{f{Cl}}}{{Bd{BHnBb}}}{{Dn{BHn{f{Cl}}}{{Dd{{Bd{BHnBb}}}}}}}}{{{f{BJn}}{C`{{f{Ef}}}}}{{Bd{MnBb}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}I`Ib}}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{{Ad{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}I`Ib}}{{BHnc}BHn{{Dn{BHn}{{Dd{BHn}}}}}}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{Mn}}}{{Dd{{Bd{MnBb}}}}}}I`Ib}}{{DAd{Lh{Df}}}BHn}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{{Ad{Mn}}}}}{{Dd{{Bd{MnBb}}}}}}I`Ib}}:{{ce{BJ`{{Lh{BIn}}}}}BHn{{Df{{f{Cl{Ad{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}{{Hf{{Ad{BHn}}}}}}{{BHnc{f{{Ad{BHn}}}}{BJ`{{Lh{BIn}}}}}BHn{{Df{{f{Cl{Ad{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBJd{f{{Ad{BHn}}}}dd}BHn}2{{{f{BJn}}}{{Bd{MnBb}}}}{{C@lc}C@l{{Df{C@n}{{Dd{C@n}}}}}}1111{CFlCFl}{{{C`{{f{{Ad{Fh}}}}}}{f{BBj}}{C`{{f{{Ad{B`}}}}}}{C`{{f{DB`}}}}}B@j}{{{C`{{f{{Ad{Ef}}}}}}{f{BB`}}{C`{{f{{Ad{B`}}}}}}d}{{C`{{Fn{Fh}}}}}}{{{f{An}}}BHn}{BJhBHn}{BD`BD`}{BJjBHn}{{{f{AHj}}}{{C`{c}}}{}}{BHnBHn}{{{f{DBb}}}Ld}{{{f{BJl}}}{{Bd{LdBb}}}}``754{{{f{AHj}}}{{C`{Lf}}}}3{{{f{BJl}}}{{C`{Lf}}}}9876{{{f{AHl}}}{{C`{c}}}{}}51{{{f{DBd}}}Ld}4``{{{CKl{c}}{C`{CHh}}}{{CKl{c}}}BHl}{{{f{ClBB`}}BB`}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBB`}}{f{BB`}}}b}````{{{f{CIh}}}{{l{Jj}}}}`{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}1`{{{f{An}}}BHn}{BJhBHn}{BD`BD`}{BJjBHn}{{{f{AHj}}}{{C`{c}}}{}}{BHnBHn}{{{f{AHj}}}{{C`{{Gj{cc}}}}}{}}```{{{f{DBb}}}Ld}{{{f{BJl}}}{{Bd{LdBb}}}}``{{{f{D@f}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}`=```6{{{f{CId}}}{{l{Ln}}}}21`{{{f{BE`}}}Gf}{{{f{BE`}}}d}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BE`Gf}BE`}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BJl}}}Fh}{{{f{CGl}}}{{C`{Fh}}}}{{{f{BOh}}}{{C`{Fh}}}}{{{f{BOl}}}{{C`{Fh}}}}`````{{{BLn{c}}Fh}{{BLn{c}}}BMb}`{BJhBHn}{BJjBHn}{{{f{AGb}}}{{Bd{FhBb}}}}{BHnBHn}{{{f{BJl}}}{{Bd{FhBb}}}}{{{f{BJl}}}{{f{An}}}}{BHnDAd}````33`{{{f{D@f}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{CIh}}}{{l{Jj}}}}{{{f{BE`}}}Gf}`{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CK`Nj}BIf}{{{f{CBj}}}d}{BE`}{BHn}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{BE`}}}d}{{DBfFh}{{C`{Fh}}}}{{BHnc}BHn{{ANl{BHn}}}}0{{{f{BJn}}}{{Bd{MnBb}}}}{{}c{}}{cCKjBKb}{cCHlBMb}2{{{f{An}}c}DBh{}}{c{{AKf{c}}}{}}{BD`BIh}{c{{BHh{c}}}BHl}{cBOh{{Hf{CMb}}}}{cBOl{{Hf{CMb}}}}{c{{BLn{c}}}BMb}{{{f{{Ad{Mn}}}}}BJn}{c{{CKl{c}}}BHl}{c{{BK`{c}}}BKb}{c{{CKn{c}}}BMb}{{}CHj}{c{{BMd{c}}}BMb}{{}CHn}{c{{CL`{c}}}BMb}{GfBE`}{c{{CLb{c}}}BHl}{{BE`BE`BE`}C@j}{c{{CHf{c}}}BHl}{{DBj{Lh{CGd}}{Lh{BBj}}Fh{C`{{Fn{Fh}}}}{C`{{Lh{BHj}}}}{C`{DB`}}Fhd{C`{{Fn{B`}}}}CBl}{{Bd{BMjBb}}}}{c{{BMh{c}}}BHl}{c{{BMl{c}}}{BMbBMb}}{CBfBHb}{c{{BJ`{c}}}{}}{{BHnBHnBHn}CEj}{{}CEl}{{{f{An}}{Fn{Mn}}{BJ`{{Lh{BIn}}}}c}BNhBKd}{c{{Lh{c}}}{}}{{AEj{Fn{{Cf{Cd}}}}{C`{Hl}}}BDj}{{}BB`}{{cAEjd}AO`{{ANl{Ef}}}}{e{{Lh{c}}}{}{{A@d{{f{{CJf{c}}}}}{{Dd{c}}}}}}{AEjBDj}{{{f{AHn}}FhFh}{{l{c}}}Db}{{{f{BJl}}FhFh}B`}{{{f{An}}}CAb}{{ce}{{Lh{ce}}}{}BIf}{{{f{BB`}}Fh{AOl{AOj}}Ed}{{Bd{BB`Bb}}}}{{Gf{f{An}}}{{Bd{B`Bb}}}}{EfCAb}{{AEjFh}BDj}{{{Lh{{Ad{CHh}}}}}BOh}{{{Lh{{Ad{CHh}}}}}BOl}{AbCAb}``{{}{{Lh{{BLh{c}}}}}{}}{c{{Lh{{BLh{e}}c}}}BIf{}}{Fh{{Lh{{Ad{{BLh{c}}}}}}}{}}{{Fhc}{{Lh{{Ad{{BLh{e}}}}c}}}BIf{}}3210{{{f{ClDBl}}}C`}{{{f{ClCOj}}}C`}{{{f{ClBN`}}Fh}{{Bd{{C`{{Fn{B@j}}}}Bb}}}}{{{f{ClBLl}}Fh}{{Bd{{C`{{Fn{B@j}}}}Bb}}}}{{{f{ClBMj}}Fh}{{Bd{{C`{{Fn{B@j}}}}Bb}}}}{{{f{BHn}}{f{Cl{BEd{{f{BHn}}}}}}}b}{{BHn{f{Cl{BEd{BHn}}}}}b}{BHnBHn}0{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0{GfBHn}`{{}A@b}{{}Nl}`{{{f{BJl}}}Fh}{BD`BD`}6`````{{{f{Cl{BMh{c}}}}}{{Bd{FhBb}}}BHl}````{{{f{AGj}}}{{Bd{{Gh{Gf}}Bb}}}}{{BIhc}BIh{{Hf{{Ad{BHn}}}}}}`{{BD`{f{Cl{BGl{BGj}}}}{f{Cl{BGl{BGn}}}}}{{Bd{BGhBb}}}}`{{BHnc}BHn{{ANl{BHn}}}}{{{f{CId}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{CDhc}BHn{{ANl{BHn}}}}{{CDlc}BHn{{ANl{BHn}}}}`{{BHne}BHn{{ANl{BHn}}ABj}{{Hf{{Ad{c}}}}}}{{BHne{C`{{Gj{eEj}}}}CFf}BHn{{ANl{BHn}}ABj}{{Hf{{Ad{c}}}}}}```{{{f{An}}}BE`}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}}{{Jh{JfJd}}}}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}}{{Jh{KhJj}}}}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}Jl}{{Jh{JnJj}}}}``{{{f{BE`}}{f{BE`}}}{{C`{B@d}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}{{C`{B@d}}}{COdNj}BIf}`{{{f{CGl}}}{{f{{Ad{CHh}}}}}}{{{f{BOh}}}{{f{{Ad{CHh}}}}}}{{{f{BOl}}}{{f{{Ad{CHh}}}}}}``{{}BHn}{c{{DBn{{Lh{c}}}}}{}}{{ce}{{DBn{{Lh{ce}}}}}{}BIf}````{{BHnc}BHn{{ANl{BHn}}}}```{{DAd{f{An}}}BHn}0{{{f{B@j}}{f{B@j}}d}{{Bd{{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}Bb}}}}`{{{f{DBb}}}Ld}{BHnBHn}{BD`{{Bd{{Gj{B@jB@j}}Bb}}}}```{{{f{{Lh{c}}}}{f{ClDC`}}}b{AJnNj}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}dNjBIf}{{{f{An}}BHnNd}BHn}{{BD`BHnNd}BD`}{{{f{AHl}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{BHnBHnNd}BHn}{{{f{DBd}}LfNd}{{Bd{LdBb}}}}{{{f{BJl}}LfNd}{{Bd{LdBb}}}}{{{f{CId}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAf}}}{}CKf{}}````{{{f{DCb}}CDb{C`{Jb}}}B`}{{BHnCDb{C`{Jb}}}BHn}{{{f{Cl{Lh{AEb}}}}{f{Cl{Ad{Ab}}}}}{{Bd{FhBAf}}}}{{{f{Cl{Lh{AEb}}}}DCd}{{Bd{bBAf}}}}{{{BMh{c}}CBl}{{BMh{c}}}BHl}{{{f{Cl{Lh{AEb}}}}{f{Cl{Fn{Ab}}}}}{{Bd{FhBAf}}}}{{{f{Cl{Lh{AEb}}}}{f{ClEf}}}{{Bd{FhBAf}}}}{{{f{Clc}}}{{Bd{eBAf}}}{}DCf}{{{f{Cl{Lh{AEb}}}}{f{Cl{Ad{DCh}}}}}{{Bd{FhBAf}}}}{{{f{CGl}}}d}{{{f{BJl}}}B`}{{{f{BOh}}}d}{{{f{BOl}}}d}````{{ce}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hf{{Ad{BHn}}}}}}{{{f{AI`}}}B`}0{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBB`}}{f{An}}}{{C`{Ed}}}}{{{f{ClBJl}}{f{An}}}b}{{BD`ei}BD`{{Hf{An}}}{{Hb{}{{Cb{c}}}}}{{Hf{An}}}{{Hb{}{{Cb{g}}}}}}{{{f{ClBB`}}{f{An}}{AOl{AOj}}}{{C`{{AOl{AOj}}}}}}{{CKh{Fn{Ef}}}BHn}{{cBHn}BHn{{ANl{BHn}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BLj}}{f{An}}{f{An}}}{{Bd{{l{Al}}Bb}}}}{{BHncc}BHn{{ANl{BHn}}}}1{{{f{BJn}}{C`{Ed}}}{{Bd{MnBb}}}}{{{f{BLj}}{f{An}}{f{An}}Fh}{{Bd{{l{Al}}Bb}}}}3{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{BHncc{C`{c}}{C`{Ed}}}BHn{{ANl{BHn}}}}{{{f{{Jh{JnJj}}}}{C`{{f{An}}}}{f{{l{Al}}}}CGj}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{ClBB`}}Fh}b}{{BHn{f{{Ad{Gf}}}}CFh}BHn}{{{f{CMb}}}CHh}`{{{f{AIb}}}AIb}{{{f{BJl}}}B`}{BJhBHn}{BD`BD`}{BJjBHn}{BHnBHn}`{{BIhc}BIh{{Hf{{Ad{BHn}}}}}}{{{f{COn}}{Fn{B`}}{f{BDb}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}{{BD`BHncBDb}BId{{Hf{{Ad{BHn}}}}}}{{BHnBDb}BHn}{{{f{AId}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHn{Lh{Df}}{BJ`{{Lh{BIn}}}}Nf}BHn}{{{f{BJl}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHnFhc}BHn{{Dn{{f{Cl{l{Eb}}}}}{{Dd{{C`{Lf}}}}}}I`IbDh}}{{{f{DCj}}Nf}{{Bd{B`Bb}}}}{{BHnNf}BHn}{{{f{DCj}}{f{B`}}C@`}{{Bd{B`Bb}}}}{{BHnBHnC@`}BHn}32102032103{{BHnNdLfNf}BHn}2{{BHnBHnNdLfC@`}BHn}543254325432{{{f{DCl}}{f{{l{Al}}}}{C`{{f{AKl}}}}}{{Bd{DClBb}}}}{{{f{BOb}}Ij}{{Bd{B`Bb}}}}{{BHnIj}BHn}{{{f{C@j}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}0{{{f{BOb}}Ml}{{Bd{B`Bb}}}}{{BHnMl}BHn}2````{{{f{CGl}}}{{C`{{f{DB`}}}}}}{{{f{BOh}}}{{C`{{f{DB`}}}}}}{{{f{BOl}}}{{C`{{f{DB`}}}}}}``````{{{f{DAb}}{l{j}}}{{l{j}}}}{{}{{BJ`{{Lh{BIn}}}}}}{{BHnBHndd{C`{Jb}}}BHn}0`{{{f{BIj}}DCn}{{Bd{B@jBb}}}}{{cBOj}{{Bd{BD`Bb}}}{{Hf{CMb}}}}{{{Lh{{Ad{CHh}}}}BOj}{{Bd{BD`Bb}}}}{{cBOn}{{Bd{BD`Bb}}}{{Hf{CMb}}}}{{{Lh{{Ad{CHh}}}}BOn}{{Bd{BD`Bb}}}}{{DD`{f{{Ad{Ij}}}}e}{{Bd{B`Bb}}}Dh{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{AIf}}c{C`{e}}}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AIf}}ci}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{ClBD`}}}{{Bd{{Lh{BB`}}Bb}}}}{{{f{Cl{CKl{c}}}}}{{Bd{{Lh{BBj}}Bb}}}BHl}{{{f{Cl{BK`{c}}}}}{{Bd{BB`Bb}}}BKb}{{{f{BMj}}}{{f{{Lh{BBj}}}}}}{{{f{Cl{BMh{c}}}}}{{Bd{{Lh{BBj}}Bb}}}BHl}{{{f{BIj}}{C`{Fh}}}{{Bd{{Lh{BB`}}Bb}}}}{{{f{CGd}}}{{f{DDb}}}}``````{{{f{ClBD`}}{f{Cl{BGl{BGj}}}}{f{Cl{BGl{BGn}}}}}{{Bd{{Lh{BB`}}Bb}}}}`{{{f{D@f}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CIh}}}{{l{Jj}}}}`{{{f{Cl{Lh{AEb}}}}DDd}{{Bd{JbBAf}}}}{{BD`c}BD`{{Hf{{Ad{BHn}}}}}}0````{{{f{AIf}}{f{{l{n}}}}{C`{c}}}{{Bd{AIfBb}}}{}}{{{f{BD`}}{BGl{BGj}}{BGl{BGn}}}b}{{{f{ClBB`}}{f{An}}Ed}{{C`{Ed}}}}{{{f{ClBB`}}FhEd}{{C`{Ed}}}}{{{BMh{c}}d}{{BMh{c}}}BHl}{{{BMl{c}}d}{{BMl{c}}}BMb}{{{CKl{c}}d}{{CKl{c}}}BHl}{{{BK`{c}}d}{{BK`{c}}}BKb}{{{CLb{c}}d}{{CLb{c}}}BHl}4{{CKjd}CKj}{{BHnKl}BHn}{{{f{ClBDj}}{C`{Hl}}}b}{{{f{AIh}}Gf}{{l{c}}}Db}{{{f{BJl}}Gf}B`}{{BJhBHn}BHn}{{BD`c}BD`{{ANl{BHn}}}}{{BJjBHn}BHn}{{BHnBHn}BHn}{{{f{AIj}}Gfc}{{l{e}}}{}Db}{{BD`ce}BD`{{ANl{BHn}}}{{ANl{BHn}}}}{{BHnce}BHn{{ANl{BHn}}}{{ANl{BHn}}}}{{{f{ClBB`}}{f{An}}}{{C`{Ed}}}}{{{f{ClBB`}}Fh}{{C`{{Gj{{AOl{AOj}}Ed}}}}}}{{{f{BHb}}}d}{BHnBHn}{{{f{ClAAh}}}b}{{{f{ClBJl}}}b}{{BHn{C`{Jb}}}BHn}``{{BD`CHhCAf}{{Bd{bBb}}}}{{BD`CHhCAn}{{Bd{bBb}}}}{{BD`CHhCBb}{{Bd{bBb}}}}{{BD`CHhCCb}{{Bd{bBb}}}}`````{{{f{BJl}}GfFh}B`}{{BD`GfIj}BD`}{{BJjBHnBHn}BHn}>{{{f{ClBDj}}FhFh}b}0```{{{f{AIl}}FhFh}AIl}{{{f{c}}FhFh}e{}{}}1022{{BDjFhFh}BDj}0`{{{f{AG`}}d}{{l{c}}}Db}{{BJhEj}BHn}{{BD`cEn}BD`{{BDf{{AOl{AOj}}}}}}{{BJjEj}BHn}{{BHnEj}BHn}{{BHneEn}BHn{{ANl{BHn}}ABj}{{Hf{{Ad{c}}}}}}{{BD`cEn}BD`{{Hf{{Ad{BHn}}}}}}{{{f{AG`}}Ej}{{l{c}}}Db}{{{f{BJl}}Ej}{{Bd{B`Bb}}}}{{{f{{Lh{c}}}}}{{C`{{f{AJn}}}}}{AJnNj}}{{{f{BLj}}{f{{l{Al}}}}}{{l{j}}}}{{{f{BJl}}Gf}{{Gj{B`B`}}}}{{{f{BDj}}Fh}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}}0{{{f{BLj}}{f{{l{Al}}}}Fh}{{Bd{AL`Bb}}}}0{{{f{{l{Al}}}}{f{{l{Al}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}4{{{f{{l{Al}}}}{f{{l{Al}}}}Fhed}{{Bd{AL`Bb}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}2{BHnBHn}`{{{f{CHd}}{f{{Ad{Ab}}}}}{{l{n}}}}{{{f{CHd}}{f{{l{A`}}}}}{{l{n}}}}`{{BJhAb}BHn}{{BD`Ab}BD`}{{BJjAb}BHn}{{{f{AIn}}Ab}{{C`{Lf}}}}{{BHnAb}BHn}{{{f{BJl}}Ab}{{C`{Lf}}}}{{{f{DDf}}Ab}Ld}{{{f{BJl}}Ab}{{Bd{LdBb}}}}{{IjIj}Nl}{BHnDDh}{{{f{BLj}}{f{B`}}}{{Bd{{l{Al}}Bb}}}}{{{f{{l{Al}}}}{f{An}}d}{{l{Al}}}}{{{f{BLj}}}{{l{El}}}}0{{{f{BLj}}}{{l{Al}}}}{{{f{BLj}}{f{B`}}{f{B`}}}{{Bd{{l{Al}}Bb}}}}4````{{{f{BOd}}{f{An}}}{{Bd{B`Bb}}}}`{{BHnEd}BHn}`{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}707070{{{f{BLj}}{f{{l{Al}}}}}{{l{Al}}}}10{{{f{{Lh{ce}}}}}FhNjBIf}{BHnCKh}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{BIhc}BIh{{Hf{An}}}}{{DAd{f{An}}}BHn}{{{f{BHb}}}{{f{An}}}}`1{{{f{An}}}BHn}{BJhBHn}{BD`BD`}{BJjBHn}{{{f{AHj}}}{{C`{c}}}{}}{BHnBHn}{{{f{DBb}}}Ld}{{{f{BJl}}}{{Bd{LdBb}}}}{{}{{BJ`{{Lh{BIn}}}}}}{{{f{Clc}}i}{{Bd{gBAf}}}{}{}{}{{A@d{{f{Cle}}}{{Dd{g}}}}}}{{BD`Ij}BD`}{{BId{C`{Fh}}}BD`}{{BJjBHn}BHn}{{BHn{C`{Fh}}}BHn}{{{f{AJ`}}{f{c}}}{{Bd{AJ`Bb}}}Nj}{{{f{BJl}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DDj}}{f{{Ad{Nl}}}}Kl}DDj}{{{f{DDj}}{f{{Ad{Nl}}}}}DDj}{{{f{BJl}}{f{{Ad{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJl}}{f{{Ad{Ij}}}}}B`}{{{f{AJb}}{f{c}}}AJbNj}{{{f{BJl}}{f{{l{El}}}}}B`}{{{f{ClBDj}}}{{C`{Hl}}}}{{BHnBHnBHn}BHn}{{CDfc}CDh{{ANl{BHn}}}}{{CDjc}CDl{{ANl{BHn}}}}`{{BHnBHnBE`C@d}BHn}```{{{f{BOd}}Jl}{{Bd{{l{Jj}}Bb}}}}{BD`{{Bd{DDlBb}}}}{CDd{{Bd{DDlBb}}}}1{{{f{CFl}}}{{C`{Ih}}}}{{BJjFh}BHn}{{{f{BB`}}d}BBj}{{{f{BDj}}}{{Cf{Cd}}}}{{{f{AJd}}}{{Fn{{f{{Ad{Ab}}}}}}}}{{{f{BD`}}d}{{Bd{EfBb}}}}{{{f{DDn}}{C`{{f{An}}}}d}{{Bd{B@jBb}}}}{{{f{BHf}}{C`{{f{An}}}}d}{{Bd{B@jBb}}}}{{{f{BHn}}{f{BB`}}COf}{{Bd{MnBb}}}}{{{f{BLj}}{f{{l{El}}}}d}{{Bd{{l{Jj}}Bb}}}}{BJhBHn}{{{f{BLj}}}{{l{Al}}}}{DAdBHn}{{{f{A@b}}}{{C`{Ij}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BHnBHn}{{{f{BJn}}}{{Bd{MnBb}}}}{{{f{BOd}}{f{An}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}00000000000{{{f{ClBB`}}{f{BB`}}}{{Bd{dBb}}}}`887``{{BD`IjcEn}BD`{{Hf{{Ad{BHn}}}}}}{{{f{BDj}}{f{BDj}}}Hl}{{{f{BDj}}f}Hl}10{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{f{DE`}}{C`{{f{AKl}}}}{f{{l{Al}}}}}{{Bd{DE`Bb}}}}{{{f{BE`}}Gf{C`{{f{AKl}}}}ceg}{{Bd{GfBb}}}{{Df{Gf}{{Dd{Gf}}}}}{{Df{Gf}{{Dd{AKj}}}}}{{Df{AKj}{{Dd{Gf}}}}}}{{{f{BE`}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}{{{f{C@j}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}10`10{g{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEjg}{{Bd{ALhe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANh{{Bd{eg}}}{}{{ALf{c}}AJj}{}}0{{ANhAEj}{{Bd{eg}}}{}{{ALh{c}}AJj}{}}0{{ACb{f{An}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{An}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Ih{{Bd{CFlBb}}}}11111{{{Lh{{Ad{c}}e}}}{{Bd{{Lh{{Of{c}}e}}}}}{}BIf}2222222222222{D@l{{Bd{CGdBAh}}}}{{{f{BB`}}{f{An}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BB`}}Fh}{{Bd{{Gj{{f{{AOl{AOj}}}}{f{Ed}}}}Bb}}}}{{{f{BB`}}{f{An}}}{{Bd{MnBb}}}}{{{f{BB`}}{f{An}}}{{Bd{{Gj{Fh{f{{AOl{AOj}}}}{f{Ed}}}}Bb}}}}{{{f{ClBB`}}{f{An}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{COh}}{f{An}}}{{Bd{FhBb}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{C@l{C`{CHh}}}{{Bd{{BHh{AEb}}Bb}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{{Ad{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BHnc}{{Bd{BHnBb}}}{{Dn{BHn}{{Dd{{Bd{BHnBb}}}}}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{Mn}}}{{Dd{{Bd{MnBb}}}}}}}}{{DBfFh}{{Bd{FhBb}}}}{Ab{{Bd{CCjBb}}}}{Ij{{Bd{CClBb}}}}{Ml{{Bd{CD`Bb}}}}{c{{Bd{{Lh{c}}DEb}}}{}}{{AEj{Fn{{Cf{Cd}}}}{C`{Hl}}}{{Bd{BDjBb}}}}{{ce}{{Bd{{Lh{ce}}DEb}}}{}BIf}{{}{{Bd{{Lh{{BLh{c}}}}DEb}}}{}}{c{{Bd{{Lh{{BLh{e}}c}}DEb}}}BIf{}}10`{c{{Bd{{DBn{{Lh{c}}}}DEb}}}{}}{{ce}{{Bd{{DBn{{Lh{ce}}}}DEb}}}{}BIf}{{{f{BKd}}{f{Cl{Fn{Ab}}}}}{{Bd{bBb}}}}{{{Lh{ce}}}{{Bd{c{Lh{ce}}}}}{}BIf}``{{{f{c}}}A@`{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{An}}}}`{{{f{AGb}}}{{Bd{AGbBb}}}}{BJhBHn}{{BD`{C`{{Fn{Ef}}}}BBf}BD`}{BJjBHn}{BHnBHn}{{{f{BJl}}}{{Bd{B`Bb}}}}4321{{BD`e}BD`{{Hf{An}}}{{Hb{}{{Cb{c}}}}}}{{BD`BDn}BD`}{{{Lh{{DEd{c}}}}}{{Bd{cb}}}I`}{{{Lh{ce}}}cABjBIf}{{{f{ClC@l}}{f{DEf}}}b}6{{{f{DEh}}c{f{An}}BE`}{{Bd{B@jBb}}}{{BDf{Ef}}}}0{{{BMh{c}}d}{{BMh{c}}}BHl}```{{BIhCBj}BIh}`{{{f{BDj}}}{{C`{{f{Hl}}}}}}0{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}cABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{CJn}}ddEfd}{{Bd{B@jBb}}}}{{BHnddEfd}BHn}`2{{{f{BDj}}}{{f{{Ad{{Cf{Cd}}}}}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}gABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BDj}}}D@n}{{BJhAb}BHn}{{BD`Ab}BD`}{{BJjAb}BHn}{{{f{AIn}}Ab}{{C`{Lf}}}}{{BHnAb}BHn}{{{f{BJl}}Ab}{{C`{Lf}}}}{{{f{DDf}}Ab}Ld}{{{f{BJl}}Ab}{{Bd{LdBb}}}}`{{{f{DEj}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{DEj}}O`{f{Cl{Ad{Jb}}}}}{{Bd{bBb}}}}`{{{f{{Lh{{DEd{c}}}}}}g}{{Bd{eb}}}I`{}{{A@d{{f{c}}}{{Dd{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}FhNjBIf}{{{f{CId}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}210{{{f{C@h}}}{{C`{Ij}}}}{{{f{BE`}}}Gf}`{{{f{BE`}}}d}`{cCDf{{ANl{BHn}}}}{{CDhc}CDj{{ANl{BHn}}}}{{CDlc}CDj{{ANl{BHn}}}}```{{BIhBD`}BIh}{{CEjBHn}CEj}{{BOl{C`{{D@h{Fh}}}}}BOl}{{{BLn{c}}{D@h{Fh}}}{{BLn{c}}}BMb}{{{CLb{c}}{D@h{Fh}}}{{CLb{c}}}BHl}{{BOhd}BOh}{Fhc{}}0{FhBB`}{{{CHf{c}}{C`{{D@h{Fh}}}}}{{CHf{c}}}BHl}{{C@lFh}C@l}{{BOh{C`{CGn}}}BOh}{{BD`d}BD`}{{BHbCBd}BHb}{{BD`BHn}BD`}{{{f{ClBB`}}{AOl{AOj}}Ed}{{C`{Ed}}}}{{BD`c}BD`{{Hf{{Ad{BHn}}}}}}{{{CKl{c}}{C`{{Fn{Ef}}}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{{Fn{Ef}}}}}{{BK`{c}}}BKb}{{{BMh{c}}{C`{{Fn{Ef}}}}}{{BMh{c}}}BHl}{{C@l{C`{{Lh{{Ad{Ef}}}}}}}C@l}`4{{BOh{C`{{f{An}}}}}BOh}{{C@n{C`{c}}}C@n{{ANl{CAb}}}}{{{CKn{c}}{C`{CB`}}}{{CKn{c}}}{}}{{CHj{C`{CB`}}}CHj}{{{BMd{c}}{C`{CB`}}}{{BMd{c}}}BMb}{{CHn{C`{CB`}}}CHn}{{{BMl{c}}CCd}{{BMl{c}}}BMb}{{BD`c}BD`{{Hf{{Ad{BD`}}}}}}{{{BMl{c}}{C`{Fh}}}{{BMl{c}}}BMb}{{{BLn{c}}{C`{Ef}}}{{BLn{c}}}BMb}0{{CEjBHn}CEj}{{CElBHn}CEl}{{BOhd}BOh}{{C@nd}C@n}{{{f{BJn}}Ed}{{Bd{MnBb}}}}{{BOh{C`{{Lh{BB`}}}}}BOh}{{C@l{C`{{Lh{{Fn{Ed}}}}}}}C@l}{{BOhCA`}BOh}{{C@nCA`}C@n}{{BOhAb}BOh}{{C@nAb}C@n}{{CHjCHh}CHj}{{CHnCHh}CHn}{{CKh{Fn{BHn}}}BHn}{{{BLn{c}}{C`{Fh}}}{{BLn{c}}}BMb}{{CElBHnBHnBHn}CEl}=={{C@ld}C@l}{{{BMh{c}}{C`{{Fn{B`}}}}}{{BMh{c}}}BHl}{{CEjBHnBHnBHn}CEj}3{{CEjBHn}CEj}{{CElBHn}CEl}{{BOhd}BOh}{{BOld}BOl}{{{CLb{c}}d}{{CLb{c}}}BHl}{{{CHf{c}}d}{{CHf{c}}}BHl}8{{BOh{C`{Fh}}}BOh}{{BOl{C`{{D@h{Fh}}}}}BOl}{{C@l{C`{Fh}}}C@l}{{{CL`{c}}DEl}{{CL`{c}}}BMb}{{{CLb{c}}DEl}{{CLb{c}}}BHl}{{{BLn{c}}Ef}{{BLn{c}}}BMb}9>{{AO`{DEn{EfEf}}}AO`}{{BBj{DEn{EfEf}}}BBj}=<<=<;{{C@nd}C@n}>{{CGlc}CGl{{ANl{{C`{Fh}}}}}}9{{BOhc}BOh{{ANl{{C`{Fh}}}}}}{{BOl{C`{Fh}}}BOl}{{BOlc}BOl{{ANl{{C`{Fh}}}}}}{{{CKl{c}}{C`{Fh}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{Fh}}}{{BK`{c}}}BKb}{{{CHf{c}}{C`{Fh}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{Fh}}}{{BMh{c}}}BHl}>1>{{CElBHn}CEl}{{BD`d}BD`}={{BOh{C`{CAd}}}BOh}{{C@n{C`{CAd}}}C@n}{{BD`CFj}BD`}{{C@lC@n}C@l}{{{CHf{c}}{C`{e}}}{{CHf{c}}}BHl{{ANl{CHh}}}}{{C@l{C`{c}}}C@l{{ANl{CHh}}}}{{CGl{Lh{{Ad{CHh}}}}}CGl}{{BOh{Lh{{Ad{CHh}}}}}BOh}{{BOl{Lh{{Ad{CHh}}}}}BOl}{{{CKn{c}}d}{{CKn{c}}}{}}{{{BMd{c}}d}{{BMd{c}}}BMb}{{{CHf{c}}{C`{{Lh{BHj}}}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{{Lh{BHj}}}}}{{BMh{c}}}BHl}={{{CKl{c}}{C`{{Fn{Fh}}}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{{Fn{Fh}}}}}{{BK`{c}}}BKb}{{{CLb{c}}{C`{{Fn{Ef}}}}}{{CLb{c}}}BHl}{{{CHf{c}}{C`{{Lh{{Ad{Ef}}}}}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{{Fn{Fh}}}}}{{BMh{c}}}BHl}{{C@l{C`{{Lh{{Fn{Fh}}}}}}}C@l}{{BD`d}BD`}{{BOh{C`{Ab}}}BOh}{{{BLn{c}}Ab}{{BLn{c}}}BMb}{{C@n{C`{Ab}}}C@n}{{{BLn{c}}CAj}{{BLn{c}}}BMb}{{BOhd}BOh}{{C@ld}C@l}{{CGld}CGl}2{{BOld}BOl}{{{CHf{c}}d}{{CHf{c}}}BHl}39{{{BMl{c}}{C`{Fh}}}{{BMl{c}}}BMb}{{CGlc}CGl{{ANl{{C`{DB`}}}}}}{{BD`{f{An}}{C`{Ij}}}BD`}{{BOh{C`{DB`}}}BOh}{{BOhc}BOh{{ANl{{C`{DB`}}}}}}{{BOlc}BOl{{ANl{{C`{DB`}}}}}}{{BOl{C`{DB`}}}BOl}{{{CKl{c}}{C`{DB`}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{DB`}}}{{BK`{c}}}BKb}{{{CHf{c}}{C`{{f{ClDB`}}}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{DB`}}}{{BMh{c}}}BHl}{{C@l{C`{DB`}}}C@l}{{{f{BJn}}}{{Bd{MnBb}}}}{{C@lFh}C@l}{{BOh{C`{{Lh{BB`}}}}}BOh}{{BOl{C`{{Lh{BB`}}}}}BOl}{{{CLb{c}}{Lh{BB`}}}{{CLb{c}}}BHl}{{{CHf{c}}{Lh{BB`}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{{Lh{BBj}}}}}{{BMh{c}}}BHl}{{C@l{C`{{Lh{BB`}}}}}C@l}{{BOhc}{{Bd{BOhBb}}}{{Df{BB`}{{Dd{{Bd{BB`Bb}}}}}}}}{{{CLb{c}}{f{BB`}}}{{CLb{c}}}BHl}{{{CHf{c}}{f{BB`}}}{{CHf{c}}}BHl}3{{CEjBHn}CEj}{{CElBHn}CEl}{{BOhAb}BOh}{{{BLn{c}}Ab}{{BLn{c}}}BMb}{{C@nAb}C@n}{{BD`d}BD`}{{BOhFh}BOh}{{C@lFh}C@l}102{{{BMl{c}}CG`}{{BMl{c}}}BMb}3{{BHb{C`{Ef}}}BHb}{{{BLn{c}}{C`{Ef}}}{{BLn{c}}}BMb}{{CEjJl}CEj}{{CEj{C`{Ef}}}CEj}{{BOhd}BOh}{{C@nd}C@n}109{{BDj{C`{Hl}}}BDj}{{{f{BDj}}{C`{Hl}}}{{Cf{Cd}}}}{{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}{C`{Hl}}}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{CElBHn}CEl}{{CEjBHn}CEj}{BD`BD`}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}10{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}210213210210{{{f{Cl{Lh{AEb}}}}{f{{Ad{Ab}}}}}{{Bd{FhBAf}}}}{{{f{Clc}}e}{{Bd{FhBAf}}}{}DCf}{{{f{Cl{Lh{AEb}}}}{f{{Ad{DF`}}}}}{{Bd{FhBAf}}}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{CId}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}``{{{f{AJf}}{f{{l{n}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{C`}}}}I`Ib}}{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{}}}}I`Ib}}{{{f{{Ad{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}I`Ib}}{{{f{{Ad{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}I`Ib}}{{{f{{Ad{c}}}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{Ad{c}}}}{f{Hl}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{Ad{{Cf{Cd}}}}}}}d}{{{f{BFn}}{f{Bh}}}B`}{{BG`BG`}BG`}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJh{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDb{CdAJj}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJl{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJn{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJj}AJn{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AK`{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAK`Db}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJj}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0``{{{f{DFb}}}{{l{El}}}}0{{{f{DFb}}{f{{l{Jj}}}}d}{{Bd{B`Bb}}}}{{{f{DFb}}{f{{l{Al}}}}d}{{Bd{B`Bb}}}}{{{f{DFb}}}B`}{{{f{DFb}}}{{Bd{B`Bb}}}}1{{{f{DFb}}}{{Bd{{l{El}}Bb}}}}{{{f{DFb}}}{{l{Bn}}}}{{{f{DFb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DFb}}Ej}{{Bd{{l{Bn}}Bb}}}}{{{f{DFb}}Ab}{{Bd{B`Bb}}}}5{{{f{DFb}}}{{Bd{{l{j}}Bb}}}}01{{{f{DFd}}}{{f{{l{Bn}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BNbBHn}BHn}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}2````````{{{f{BKh}}{C`{{f{An}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}Jldd{C`{{f{Ef}}}}{f{{l{Al}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}Jld{C`{{f{Ef}}}}{f{{l{Al}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}`{{{f{CId}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{CIh}}}{{l{Jj}}}}`{{{f{D@f}}}{{l{Ln}}}}21{{{f{CId}}}{{l{n}}}}{{{f{CIf}}}{{l{n}}}}{{{f{CId}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}55`46576{{{f{D@f}}}{{l{Jd}}}}16{{{f{CId}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}}{{Jh{JfJd}}}}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}}{{Jh{KhJj}}}}{{{f{An}}{f{{Ad{{f{An}}}}}}{f{An}}Jl}{{Jh{JnJj}}}}=<{{{f{DCj}}Nf}{{Bd{B`Bb}}}}{{{f{DCj}}{f{B`}}C@`}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BKh}}{C`{{f{An}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}Jldd{C`{{f{Ef}}}}{f{{l{Al}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{An}}}}Jld{C`{{f{Ef}}}}{f{{l{Al}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{DFf}}}{{f{{l{Al}}}}}}{{{f{BKh}}{C`{{f{An}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFh}}}DFh}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{DFh}}{f{DFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DFh}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DFh}}{f{Clc}}}bAC`}`{{}Fh}{ce{}{}}{{{f{DFh}}{f{An}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DFj{c}}}}}{{DFj{c}}}{ABjAf}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{cc{}}{{{f{An}}}{{C`{DFh}}}}{{}Fh}{ce{}{}}`{{{f{Cl{DFj{c}}}}{f{An}}}C`Af}{{{f{ClDFl}}{f{{Ad{Ab}}}}{C`{Jl}}}{{C`{c}}}{}}{{{f{Cl{DFj{Jd}}}}{f{{Ad{Ab}}}}{C`{Jl}}}{{C`{Ml}}}}{{{f{Cl{DFj{Jj}}}}{f{{Ad{Ab}}}}{C`{Jl}}}{{C`{Gf}}}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{c{C`{Jl}}}{{Bd{{DG`{}{{DFn{e}}}}Bb}}}{}{}}{{DFh{C`{Jl}}}{{Bd{{DFj{Jd}}Bb}}}}{{DFh{C`{Jl}}}{{Bd{{DFj{Jj}}Bb}}}}3{{{f{c}}}A@`{}}:```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CGn}}}CGn}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{}CGn}{Fh{{f{c}}}{}}0{Fh{{f{Clc}}}{}}0{Fhb}0{{{f{CGn}}{f{CGn}}}d}{{{f{DGb}}{f{DGb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CGn}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}0{{{f{An}}}{{Bd{DGb}}}}{{{f{An}}g}{{Bd{CGnBb}}}{{Hf{An}}}{{ANl{Ef}}}{{Hb{}{{Cb{{Gj{ce}}}}}}}}{{{f{CGn}}{f{Clc}}}bAC`}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}A@`{}}033```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eALf{}{{Hb{}{{Cb{c}}}}}}0{{AEje}ALh{}{{Hb{}{{Cb{c}}}}}}0{{{f{ALj}}}{{f{Ed}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{{f{{Ad{c}}}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{{f{AMl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AMl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{ANhe{}{{ALf{c}}AJj}}0{{ANhAEj}e{}{{ALh{c}}AJj}}0{{{AMf{An}}}Ed}{{{f{AMl}}}{{f{Ed}}}}`{{AMj{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fn{c}}AEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEj}{{AJj{}{{ALl{e}}{ALn{c}}{AM`{g}}}}}{AMb{AMd{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}{{FhcAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{FhAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AMl}}Fh}{{Bd{IhBb}}}}{{{f{AMl}}Fh}Ih}{{}Ed}{{{f{AOn}}Fh}Ih}4{{B@`Ed}{{Bd{LdBb}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{AFb{cgAF`}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEjg}{{Bd{ALhe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANh{{Bd{eg}}}{}{{ALf{c}}AJj}{}}0{{ANhAEj}{{Bd{eg}}}{}{{ALh{c}}AJj}{}}0{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Fh}cABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}0{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}gABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{Fhc{}}0{{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}{C`{Hl}}}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}```````````{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{AMj{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jh{JnJj}}}}{f{{l{Al}}}}CGj{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{An}}}}{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{An}}}}{f{{l{Al}}}}CGj}{{Bd{{Jh{JnJj}}Bb}}}}```{{c{C`{Hl}}}CNb{}}{{{CNd{Gf}}{CNd{Ab}}{C`{Hl}}}CNf}{{{CNd{Gf}}{CNd{Ab}}{C`{Hl}}}CNh}`{CJhBHn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CJhJl}BHn}3{{CJhBHnJl}BHn}{{CJhEf}BHn}555{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CJh{C`{Ef}}BHnCGj}BHn}{{CJhBHn}BHn}={{CJh{f{An}}}BHn}>;0>>>>>>>1{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}5{CJhBHn}0>0`{{{f{BGb}}{f{B@j}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BGb}}}{{Bd{{f{An}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DGd}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{DGd{C`{{f{AEj}}}}}{{Bd{AD`Bb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DGd}}}d}{{FhFh}DGd}{{{f{ClDGd}}{Cf{Cd}}}b}{{{f{ClDGd}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}6`{{{f{{l{c}}}}}FhAf}0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGf}}}DGf}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{DGf}}{f{DGf}}}d}{{{f{DGf}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGf}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGh}}}DGh}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{DGh}}{f{DGh}}}d}{{{f{DGh}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGh}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4{{KlKl}Kl}{{{f{{l{El}}}}Ij}{{Bd{bBb}}}}{{{f{{AKb{Ij}}}}Ij}{{Bd{bBb}}}}```{{{f{B`}}CCf}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{An}}}B`}0`{{{f{c}}h}b{}}{{{f{DGj}}}{{f{AEl}}}}{{{f{ClDGj}}}{{Cf{Cd}}}}{{{f{ClDGj}}}{{f{ClAEl}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGj}}}DGj}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{{f{DGj}}}{{f{AEj}}}}{{}DGj}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{ClDGj}}Fh}b}{{{f{DGj}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DGj}}}Fh}{FhDGj}{{{f{ClDGj}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{DGj}}}{{C`{{f{DGl}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DEf}}}DEf}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{}DEf}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{{BBh{EdO`}}}}}Ed}{{{f{DEf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DEf}}}Fh}{{{f{DEf}}}{{Lh{BB`}}}}{{{f{An}}dd}Ed}{{{f{COl}}Ab{C`{Fh}}d{C`{{f{BB`}}}}FhFh{C`{{f{CAb}}}}{C`{Ab}}Ab{C`{{f{CAd}}}}dd{f{Cl{C`{Fh}}}}d}{{Bd{{Gj{BB`FhFh}}Bb}}}}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{COl}}{f{C@l}}}{{Bd{DEfBb}}}}1{{{f{c}}}A@`{}}4{{DEf{Lh{BB`}}}DEf}````{{{f{{l{c}}}}eAKdd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{Ad{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFhf}{{Dd{d}}}}}}``{{{f{DGn}}}{{f{B`}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}0{{{f{BOd}}}{{Bd{{l{n}}Bb}}}}22112{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}322{{{f{BOd}}{f{An}}}{{Bd{B`Bb}}}}{{{f{BOd}}Jl}{{Bd{{l{Jj}}Bb}}}}1445`{{{f{AIl}}FhFh}AIl}0`{{Fh{f{Cl{Fn{d}}}}}b}```11{{Fh{f{{Ad{B`}}}}{f{ClEn}}}{{Bd{{AKf{{l{El}}}}Bb}}}}{{{f{{Ad{B`}}}}{f{{Ad{d}}}}{f{{Ad{d}}}}}{{Bd{AKhBb}}}}{{{f{An}}{f{{Ad{B`}}}}{f{{Ad{d}}}}{f{{Ad{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{An}}{f{{Ad{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Ad{B`}}}}}{{Bd{AKhBb}}}}{{{f{{Ad{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````88```{{{f{BLf}}}{{f{{l{Al}}}}}}{{{f{BLj}}}{{Bd{{l{Al}}Bb}}}}{{{f{BLj}}}{{l{Al}}}}{{{f{BLj}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{BLj}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{{f{BLj}}{f{{l{Al}}}}dd}{{Bd{{l{n}}Bb}}}}{{{f{BLj}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{BLj}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLj}}{f{{l{Al}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLj}}{f{{l{Al}}}}Fh}{{Bd{{l{Al}}Bb}}}}{{{f{BLj}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{{l{Al}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{An}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BLj}}{f{{l{Al}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BLj}}{f{An}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{Ad{{f{{l{Al}}}}}}}}{f{An}}d}{{Bd{{l{Al}}Bb}}}}{{{f{BLj}}{f{An}}{f{An}}}{{Bd{{l{Al}}Bb}}}}0{{{f{BLj}}{f{An}}{f{An}}Fh}{{Bd{{l{Al}}Bb}}}}1{{{f{BLj}}{f{{l{Al}}}}}{{l{j}}}}{{{f{BLj}}{f{{l{Al}}}}Fh}{{Bd{AL`Bb}}}}0{{{f{{l{Al}}}}{f{{l{Al}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}2{{{f{{l{Al}}}}{f{{l{Al}}}}Fhed}{{Bd{AL`Bb}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Df{{f{An}}{f{An}}}{{Dd{c}}}}}}2{{{f{BLj}}{f{B`}}}{{Bd{{l{Al}}Bb}}}}{{{f{{l{Al}}}}{f{An}}d}{{l{Al}}}}{{{f{BLj}}}{{l{El}}}}0{{{f{BLj}}}{{l{Al}}}}{{{f{BLj}}{f{B`}}{f{B`}}}{{Bd{{l{Al}}Bb}}}}4{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}505050{{{f{BLj}}{f{{l{Al}}}}}{{l{Al}}}}10{{{f{BLj}}{f{{l{El}}}}d}{{Bd{{l{Jj}}Bb}}}}444````````{{eFhFh}{{DH`{Gf}}}{{Hf{An}}}{{Ch{}{{Cb{c}}}}}}{{eFhFh}{{DHb{Gf}}}{{Hf{{Ad{Ab}}}}}{{Ch{}{{Cb{c}}}}}}``````````````{{{f{c}}h}b{}}0{{{f{An}}{Fn{{Cf{Cd}}}}{f{AEj}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Cf{Cd}}}}{f{AEj}}{C`{{f{{DEn{EfEf}}}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AhLb}}{{{f{B`}}c}{}{AhLb}}{{B`B`}}`{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Fh}}}}0{{{f{BJl}}Ej}{{l{El}}}}{{{f{BJl}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bn}}}}Bb}}}}{{{f{B`}}Fh}{{f{{Cf{Cd}}}}}}{{{f{BJl}}}{{f{AEl}}}}{{{f{ClBJl}}}{{f{ClAEl}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBJl}}}{{f{Cl{l{c}}}}}Db}{{{f{BJl}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BJl}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBJl}}}{{Bd{FhBb}}}}{{{f{ClB`}}}{{Bd{FhBb}}}}{{{f{B`}}}{{Bd{{f{{l{A`}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eh}}}}Bb}}}}{{{f{BJl}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{n}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{{{f{BJl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{ALb}}Bb}}}}7{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Aj}{{{f{BJl}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Fh}}}}}}}}{{{f{B`}}}{{`{{Ch{}{{Cb{Fh}}}}}}}}{{{f{BJl}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJl}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kl}}}Kl}1{{{f{BJl}}}{{Lh{BJl}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{c}}}b{}}00{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jh{JfJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{JnJj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{KbK`}}}}Bb}}}}{{}B`}{Fh{{f{c}}}{}}000{{{f{B`}}}f}{Fh{{f{Clc}}}{}}000{{{f{B`}}c}{}{AhLb}}{{B`B`}}{{B`c}{}{AhLb}}{{{f{B`}}{f{B`}}}}{Fhb}000{{{f{BJl}}}B`}{{{f{BJl}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jh{KdJj}}}}Bb}}}}{{{f{Kl}}{f{Kl}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANn}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}3{{{f{B`}}c}{}ANn}1{{{f{B`}}{f{An}}}}66{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Fh}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IhFh}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{BJl}}}{{Dj{Mn}}}}{{{f{B`}}AGf}{{Bd{B`Bb}}}}{{{f{BJl}}{f{{l{n}}}}}{{Bd{B`Bb}}}}{{{f{Kl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{B`}}}Ef}{cc{}}00{{{Jh{KdJj}}}B`}1{{{Jh{JnJj}}}B`}{{{l{c}}}B`Db}{{{Jh{JfJd}}}B`}{{{Jh{KhJj}}}B`}{{{f{An}}{f{{Ad{Ih}}}}d}{{Bd{B`Bb}}}}{{{f{An}}{f{{Ad{Ih}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{An}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB`{{Hb{}{{Cb{Ef}}}}}}{cB`{{Hb{}{{Cb{Lf}}}}}}{cB`{{Hb{}{{Cb{{C`{J`}}}}}}}}{cB`{{Hb{}{{Cb{{f{M`}}}}}}}}{cB`{{Hb{}{{Cb{{C`{M`}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Ij}}}}}}}}{cB`{{Hb{}{{Cb{{f{An}}}}}}}}{cB`{{Hb{}{{Cb{M`}}}}}}{cB`{{Hb{}{{Cb{{f{Ab}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Gf}}}}}}}}{cB`{{Hb{}{{Cb{Gf}}}}}}{cB`{{Hb{}{{Cb{Md}}}}}}{cB`{{Hb{}{{Cb{{C`{Ab}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Lf}}}}}}}}{cB`{{Hb{}{{Cb{{f{Ij}}}}}}}}{cB`{{Hb{}{{Cb{d}}}}}}{cB`{{Hb{}{{Cb{{f{Gf}}}}}}}}{cB`{{Hb{}{{Cb{Ij}}}}}}{cB`{{Hb{}{{Cb{Ml}}}}}}{cB`{{Hb{}{{Cb{Ll}}}}}}{cB`{{Hb{}{{Cb{{f{Ll}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Ml}}}}}}}}{cB`{{Hb{}{{Cb{{f{Lf}}}}}}}}{cB`{{Hb{}{{Cb{Ab}}}}}}{cB`{{Hb{}{{Cb{J`}}}}}}{cB`{{Hb{}{{Cb{{f{J`}}}}}}}}{cB`{{Hb{}{{Cb{Jb}}}}}}{cB`{{Hb{}{{Cb{{C`{d}}}}}}}}{cB`{{Hb{}{{Cb{{f{Ml}}}}}}}}{cB`{{Hb{}{{Cb{{f{d}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Ll}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Md}}}}}}}}{cB`{{Hb{}{{Cb{{f{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{f{Md}}}}}}}}{{{f{An}}{Fn{Ll}}}B`}{{{f{An}}{Fn{J`}}}B`}{{{f{An}}{Fn{Md}}}B`}{{{f{An}}{Fn{Gf}}}B`}{{{f{An}}{Fn{Ml}}}B`}{{{f{An}}{Fn{Ab}}}B`}{{{f{An}}{Fn{M`}}}B`}{{{f{An}}{Fn{Ij}}}B`}{{{f{An}}{Fn{Lf}}}B`}{{{f{An}}{Fn{Jb}}}B`}{{{f{An}}Fh{f{Ed}}}B`}{{{f{B`}}FhFh}B`}{{{f{BJl}}Fh}{{Bd{IhBb}}}}{{{f{B`}}}Fh}{{{f{B`}}}Il}{{{f{B`}}}B`}{{{f{BJl}}}{{C`{{f{ADl}}}}}}{{{f{BJl}}Fh}{{C`{{f{In}}}}}}{{{f{BJl}}FhFh}{{C`{{f{In}}}}}}{{{f{BJl}}Fh}Ih}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANn}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}301{{{f{B`}}{f{An}}}}{{{f{BJl}}}d}{{{f{Kl}}{f{Clc}}}bAC`}{{{f{B`}}{C`{Fh}}}B`}{{{f{B`}}}{{Bd{{f{{l{Mb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ln}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Fh}000{ce{}{}}000{B`B@j}1{BBbB`}{B`B`}={{{f{B`}}}{{Bd{{l{n}}Bb}}}}000{{{f{BJl}}}{{l{n}}}}0{{}d}0{{{f{B`}}}Kl}{{{f{B`}}}DHd}{{{f{B`}}}{{`{{Ch{}{{Cb{B`}}}}}}}}{{{f{BJl}}}Fh}{{{f{B`}}}Fh}{{{f{BJl}}Fh}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BHn}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{An}}}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANn}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}3201{{{f{B`}}}{{Bd{{C`{c}}Bb}}}Lb}{{{f{BJl}}}{{Bd{LdBb}}}}{{{f{BJl}}}{{C`{Lf}}}}{{{f{B`}}}Ld}1232{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AhLb}}{{B`c}{}{AhLb}}{{B`B`}}{{{f{BJl}}}Fh}{{{f{B`}}}Fh}{{{f{BJl}}}{{Bd{FhBb}}}}{{{f{BJl}}}{{f{An}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{Ab}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{AOh}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Ij}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{Md}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{{Dj{{Ad{Ab}}}}}}}}}}}}{{{f{An}}{f{B`}}}B`}{{{f{An}}c}B`{{Hf{{Ad{{C`{J`}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Lf}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{Ef}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{AKj}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{AKj}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Ll}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{Dj{{Ad{Ab}}}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{{Fn{Ab}}}}}}}}}}{{{f{An}}{Mf{Gf}}}B`}{{{f{An}}c}B`{{Hf{{Ad{{C`{Ll}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{M`}}}}}}{{{f{An}}c}B`{{Hf{{Ad{AOf}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Md}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{d}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Ef}}}}}}{{{f{An}}c}B`{{Hf{{Ad{AKn}}}}}}{{{f{An}}{Mf{Ml}}}B`}{{{f{An}}c}B`{{Hf{{Ad{{C`{M`}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{AKn}}}}}}}}{{{f{An}}c}B`BBb}{{{f{An}}c}B`{{Hf{{Ad{{C`{AOf}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{J`}}}}}}{{{f{An}}c}B`{{Hf{{Ad{B`}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{f{An}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{Ml}}}}}}}}{{{f{An}}{Mf{Ij}}}B`}{{{f{An}}c}B`{{Hf{{Ad{{C`{Lf}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Jb}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Ab}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Ih}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{Ij}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Gf}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{{f{An}}}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{Jb}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{AOh}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{Gf}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{{f{{Ad{Ab}}}}}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{B`}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{d}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{f{{Ad{Ab}}}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{Ml}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{C`{{Dj{An}}}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{Dj{An}}}}}}}}{{{f{An}}c}B`{{Hf{{Ad{{Fn{Ab}}}}}}}}{{{f{An}}{Mf{Jb}}}B`}{{{f{An}}{f{Ed}}}B`}{{{f{BJl}}FhFh}B`}{{{f{An}}Fh}B`}{{{f{ClDHd}}}C`}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANn}{{{f{B`}}{f{An}}}{{Bd{{l{n}}Bb}}}}3{{{f{B`}}c}{}ANn}{{{f{B`}}{f{An}}}}4{{{f{B`}}}{{Bd{{f{ABl}}Bb}}}}{{{f{BJl}}}Fh}`{{{f{B`}}}{{Cf{Kf}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{BJl}}LfNd}{{Bd{LdBb}}}}{{{f{BJl}}}B`}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AhLb}}{{B`c}{}{AhLb}}{{{f{ClBJl}}{f{An}}}b}{{{f{ClB`}}{f{An}}}{{f{ClB`}}}}{{{f{B`}}{f{{Ad{Gf}}}}}{{Bd{B`Bb}}}}06{KlKl}{{{f{BJl}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{B`}}Lfdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Fhdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Fh}B`}{{{f{ClB`}}Kl}b}{{{f{BJl}}Gf}B`}{{{f{ClBJl}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{Jb}}}B`}{{{f{DHd}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{BJl}}GfFh}B`}{{{f{B`}}GfFh}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BJl}}Ej}{{Bd{B`Bb}}}}{{{f{BJl}}Gf}{{Gj{B`B`}}}}{{{f{B`}}Gf}{{Gj{B`B`}}}}{{{f{BJl}}Ab}{{C`{Lf}}}}{{{f{BJl}}Ab}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{{f{{l{Al}}}}Bb}}}}{{{f{B`}}Fh}{{Bd{{Dj{An}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AL`}}Bb}}}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AhLb}}{{B`c}{}{AhLb}}{{B`B`}}{{{f{B`}}}{{Bd{cBb}}}Lb}{{{f{BJl}}}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{B`}}{C`{Fh}}}B`}{{{f{BJl}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{Ad{Nl}}}}Kl}B`}{{{f{B`}}{f{{Ad{Nl}}}}}B`}{{{f{BJl}}{f{{Ad{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJl}}{f{{Ad{Ij}}}}}B`}{{{f{BJl}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{Ad{Ij}}}}}B`}{{{f{B`}}}{{Bd{{f{{Jh{KhJj}}}}Bb}}}}{{{f{B`}}Fhd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{An}}}}d}{{Bd{B@jBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dj{B`}}}}{{{f{c}}}Ef{}}{{B`B`}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}00{{{Gj{{f{An}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{AO`}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{An}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{AO`}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}444445{{{f{ClB`}}{Gd{c}}}dDb}6{{{f{c}}}A@`{}}000{{{f{B`}}}{{Bd{{f{{l{Lj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mh}}}}Bb}}}}{{{f{BJl}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJl}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{BJl}}Ab}{{C`{Lf}}}}{{{f{BJl}}Ab}{{Bd{LdBb}}}}{ce{}{}}000{{B`{f{An}}}B`}{{{f{B`}}c}B`{AhLb}}{{{f{B`}}{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{c}}h}b{}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{{f{Dl}}}B`}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{DHf{B`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}5{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Df{{f{Dl}}}{{Dd{c}}}}}}````{{{f{B`}}{f{B`}}c}{{Bd{B`Bb}}}{{Dn{{f{B`}}{f{B`}}}{{Dd{{Bd{B`Bb}}}}}}}}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BOf}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOf}}c}{{Bd{B`Bb}}}Aj}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Aj}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CJd}}}CJd}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{{}CJd}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{CJd}}{f{CJd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CJd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{CJd}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}3","D":"AEIlAIb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11130],[5,"ListType",1942,11131],[5,"ChunkedArray",17,11132],[5,"BooleanType",1942,11131],[5,"BinaryType",1942,11131],[1,"u8"],[1,"slice"],[10,"PolarsNumericType",1942,11131],[10,"Num",11133],[10,"ToPrimitive",11134],[5,"StringType",1942,11131],[1,"str"],[5,"Series",10620,11135],[6,"PolarsError",3425,11136],[6,"Result",11137],[10,"NumOpsDispatchInner",11075,11138],[6,"GroupsProxy",3815,11139],[5,"ObjectType",1942,11131],[10,"PolarsObject",1497,11140],[5,"FixedSizeListType",1942,11131],[6,"Option",11141],[17,"Item"],[10,"Array",11142],[5,"Box",11143],[10,"Iterator",11144],[5,"AmortizedListIter",11145],[0,"mut"],[17,"IsNested"],[5,"FalseT",1942,11131],[10,"PolarsDataType",1942,11131],[17,"Output"],[10,"Fn",11146],[10,"Copy",11147],[6,"Cow",11148],[5,"AmortSeries",11051,11149],[10,"FnMut",11146],[5,"Float32Type",1942,11131],[5,"Float64Type",1942,11131],[6,"DataType",1942,11150],[5,"String",11151],[5,"BinaryOffsetType",1942,11131],[5,"SortOptions",1625,11152],[5,"UInt32Type",1942,11131],[5,"SortMultipleOptions",1625,11152],[10,"PolarsIntegerType",1942,11131],[6,"CastOptions",1131,11153],[10,"NumOpsDispatchCheckedInner",11096,11154],[5,"Iter",11155],[1,"usize"],[1,"fn"],[5,"Map",11156],[5,"Vec",11157],[5,"MetadataProperties",1253,11158],[10,"DoubleEndedIterator",11159],[5,"Metadata",1253,11158],[1,"i64"],[5,"OffsetsBuffer",11160],[1,"tuple"],[5,"Formatter",11161],[5,"Error",11161],[17,"Array"],[10,"IntoIterator",11162],[10,"FallibleIterator",11163],[10,"AsRef",11164],[10,"PolarsAsRef",11165],[10,"Borrow",11166],[5,"Bitmap",11167],[10,"IntoParallelIterator",11168],[10,"Send",11147],[10,"Sync",11147],[10,"NoOption",11169],[10,"TrustedLen",11170],[6,"AnyValue",1942,11171],[1,"u32"],[5,"MetadataFlags",1253,11158],[10,"PolarsObjectSafe",1497,11140],[1,"f32"],[1,"u64"],[5,"Int32Type",1942,11131],[5,"DateType",1942,11131],[5,"Logical",1942,11172],[5,"Int64Type",1942,11131],[6,"TimeUnit",1942,11173],[5,"DatetimeType",1942,11131],[5,"Int128Type",1942,11131],[5,"DecimalType",1942,11131],[5,"DurationType",1942,11131],[10,"ExactSizeIterator",11174],[5,"TimeType",1942,11131],[10,"PolarsFloatType",1942,11131],[6,"IsSorted",10620,11175],[10,"PolarsIterator",1181,11176],[6,"ChunkedArrayLayout",17,11132],[10,"NumCast",11134],[5,"Scalar",1942,11171],[1,"f64"],[5,"Arc",4186,11177],[5,"UInt16Type",1942,11131],[1,"u16"],[5,"Int8Type",1942,11131],[1,"i8"],[5,"Int16Type",1942,11131],[1,"i16"],[5,"Range",11178],[5,"UInt8Type",1942,11131],[5,"UInt64Type",1942,11131],[1,"i32"],[5,"Field",1942,11179],[10,"ParallelIterator",11168],[10,"IndexedParallelIterator",11168],[6,"QuantileInterpolOptions",4186,11180],[5,"RollingOptionsFixedWindow",4186,11181],[10,"PolarsOpsNumericType",11182],[10,"Sized",11147],[5,"ChunkId",4186,11183],[17,"HasViews"],[5,"RandomState",11184],[5,"BytesHash",11185],[5,"OwnedRepr",11186],[1,"array"],[5,"Dim",11187],[5,"ArrayBase",11188],[5,"ViewRepr",11188],[6,"Either",11189],[5,"TypeId",11190],[5,"NullableIdxSize",4186,11183],[10,"FnOnce",11146],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",825,11191],[5,"AnonymousListBuilder",853,11192],[5,"AnonymousOwnedListBuilder",853,11192],[5,"ListBooleanChunkedBuilder",853,11193],[5,"ListPrimitiveChunkedBuilder",853,11194],[10,"ListBuilderTrait",853,11195],[10,"ChunkedBuilder",853,11196],[5,"ListStringChunkedBuilder",853,11197],[5,"ListBinaryChunkedBuilder",853,11197],[5,"ListNullChunkedBuilder",853,11198],[5,"BinViewChunkedBuilder",853,11199],[10,"ViewType",11200],[5,"BooleanChunkedBuilder",853,11201],[5,"NullChunkedBuilder",853,11202],[5,"PrimitiveChunkedBuilder",853,11203],[10,"Clone",11204],[5,"NullChunked",11205],[10,"NewChunkedArray",853,11196],[10,"Hasher",11206],[10,"ChunkedCollectInferIterExt",1161,11207],[10,"ChunkedCollectIterExt",1161,11207],[10,"Canonical",1175,11208],[10,"ChunkedCollectParIterExt",1177,11209],[10,"FromParIterWithDtype",1177,11209],[5,"BooleanArray",11210],[5,"BoolIterNoNull",1181,11176],[5,"FixedSizeListArray",11211],[5,"FixedSizeListIterNoNull",1181,11176],[5,"StructIter",1181,11176],[5,"SomeIterator",1181,11176],[5,"MetadataEnv",1253,11212],[10,"MetadataCollectable",1253,11158],[10,"MetadataTrait",1253,11158],[5,"Iter",11213],[5,"IterNames",11213],[5,"File",11214],[5,"Mutex",11215],[6,"MetadataMerge",1253,11158],[5,"ObjectArray",1497,11140],[6,"ArrowDataType",1942,11216],[10,"Any",11190],[10,"Debug",11161],[5,"BitmapIter",11217],[6,"ZipValidity",11218],[5,"ObjectChunkedBuilder",1574,11219],[10,"AnonymousObjectBuilder",1597,11220],[5,"ObjectRegistry",1597,11220],[17,"FuncRet"],[10,"ChunkApply",1625,11221],[10,"ChunkApplyKernel",1625,11221],[10,"ChunkSort",1625,11221],[10,"ChunkUnique",1625,11221],[10,"ChunkCast",1625,11221],[6,"FillNullStrategy",1625,11221],[10,"ChunkCompare",10620,11221],[10,"ChunkExplode",1625,11221],[10,"ChunkFillNullValue",1625,11221],[10,"ChunkFilter",1625,11221],[10,"ChunkFull",1625,11221],[10,"ChunkFullNull",1625,11221],[10,"ChunkAnyValue",1625,11221],[10,"IsFirstDistinct",1625,11221],[10,"IsLastDistinct",1625,11221],[10,"ChunkAgg",1625,11221],[10,"ChunkQuantile",1625,11221],[10,"ChunkExpandAtIndex",1625,11221],[10,"Reinterpret",1625,11221],[10,"ChunkReverse",1625,11221],[10,"ChunkRollApply",1625,11221],[10,"ChunkSet",1625,11221],[10,"ChunkShift",1625,11221],[10,"ChunkShiftFill",1625,11221],[10,"SlicedArray",1625,11222],[10,"ChunkVar",1625,11221],[10,"ChunkTake",1625,11221],[10,"ChunkTakeUnchecked",1625,11221],[10,"ChunkBytes",1625,11221],[10,"ChunkZip",1625,11221],[10,"BinaryFnMut",1832,11223],[10,"StaticArray",1942,11224],[10,"TernaryFnMut",1832,11223],[10,"Error",11225],[10,"UnaryFnMut",1832,11223],[5,"PrimitiveArray",11226],[6,"SearchSortedSide",1872,11227],[5,"NoNull",4186,11228],[5,"RowsEncoded",11229],[5,"NaiveDateTime",11230],[6,"Tz",11231],[5,"NaiveTime",11232],[5,"StructChunked",1942,11233],[5,"CategoricalChunked",1942,11234],[5,"CategoricalChunkedBuilder",1942,11235],[10,"ArrayFromIter",1942,11236],[10,"ArrayFromIterDtype",1942,11236],[10,"AsRefDataType",1942,11150],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11237],[10,"From",11164],[5,"BinaryViewArrayGeneric",11200],[6,"RevMapping",1942,11238],[10,"CategoricalMergeOperation",1942,11239],[10,"LogicalType",1942,11172],[6,"CategoricalOrdering",1942,11238],[5,"OwnedObject",1942,11171],[6,"UnknownKind",1942,11150],[5,"CategoricalType",1942,11131],[6,"ArrowTimeUnit",1942],[10,"ArrayCollectIterExt",1942,11236],[5,"GlobalRevMapMerger",1942,11239],[10,"Into",11164],[10,"NumericNative",1942,11131],[5,"ArrowField",4186],[6,"PrimitiveType",11240],[6,"IntegerType",11241],[5,"TimeDelta",11242],[5,"NaiveDate",11243],[5,"LazyCompact",11244],[5,"SmartString",11245],[10,"GetAnyValue",1942,11171],[10,"IntoScalar",1942,11246],[5,"CatIter",1942,11234],[6,"Ordering",11247],[1,"u128"],[6,"PhysicalType",11241],[5,"DataFrame",3520,11248],[5,"StringCacheHolder",3404,11249],[5,"ErrString",3425,11136],[6,"PolarsWarning",3425,11250],[5,"TryReserveError",11251],[6,"Error",11252],[5,"Error",11253],[6,"ParquetError",11254],[5,"Utf8Error",11255],[5,"Error",11256],[10,"Display",11161],[5,"Schema",4186,11257],[10,"IntoSeries",10620,11258],[6,"NullStrategy",3520,11248],[6,"UniqueKeepStrategy",3520,11248],[5,"HashSet",11259],[5,"ArrowSchema",4186,11260],[5,"Row",4074,11261],[5,"GroupBy",3815,11262],[5,"DynamicGroupOptions",4186,11263],[5,"RangeTo",11178],[5,"RangeFrom",11178],[5,"RangeFull",11178],[5,"RangeToInclusive",11178],[5,"RangeInclusive",11178],[5,"RecordBatchIter",3520,11248],[5,"PhysRecordBatchIter",3520,11248],[5,"LazyFrame",4186,11264],[5,"RollingGroupOptions",4186,11263],[10,"RangeBounds",11178],[10,"IntoVec",4186,11228],[6,"IndexOrder",4186,11265],[5,"StructArray",4186,11266],[5,"RecordBatchT",11267],[5,"UnpivotArgs",3785,11268],[5,"Duration",4186,11269],[5,"GroupsIdx",3815,11139],[5,"UnitVec",11270],[6,"GroupByMethod",3815,11262],[5,"SlicedGroups",3815,11139],[5,"GroupsProxyParIter",3815,11139],[10,"UnindexedConsumer",11271],[6,"GroupsIndicator",3815,11139],[6,"IRAggExpr",11272],[10,"IntoGroupsProxy",3815,11273],[5,"Copied",11274],[5,"Zip",11275],[5,"GroupsProxyIter",3815,11139],[10,"IsFloat",11276],[10,"NativeType",11277],[10,"AggList",4058,11278],[10,"TakeExtremum",4058,11279],[10,"PhysicalAggExpr",4071,11280],[6,"AnyValueBuffer",4074,11281],[6,"AnyValueBufferTrusted",4074,11281],[5,"Node",11282],[6,"IR",11283],[5,"Arena",11282],[6,"AExpr",11272],[10,"JoinDispatch",4186,11284],[5,"JoinArgs",4186,11285],[10,"DfTake",4186,11286],[10,"DataFrameOps",4186,11287],[5,"CsvReader",4186,11288],[10,"PhysicalIoExpr",11289],[10,"MmapBytesReader",11290],[6,"Expr",4186,11291],[10,"LhsNumOps",11075,11138],[10,"NumOpsDispatch",11075,11138],[5,"LazyGroupBy",4186,11264],[10,"Allocator",11292],[5,"JoinBuilder",4186,11264],[10,"AnonymousScan",4186,11293],[5,"ScanArgsAnonymous",4186,11294],[10,"FunctionOutputField",4186,11295],[5,"SpecialEq",4186,11295],[6,"VisitRecursion",11296],[6,"FunctionExpr",4186,11297],[10,"ArgAgg",4186,11298],[5,"ArrayNameSpace",4186,11299],[5,"ListNameSpace",4186,11300],[10,"SeriesTrait",10620,11175],[5,"FieldsMapper",4186,11301],[5,"IpcStreamReader",4186,11302],[10,"Read",11303],[10,"SeriesUdf",4186,11295],[10,"AsBinary",4186,11304],[10,"StringMethods",9578,11305],[5,"BorrowedFd",11306],[10,"AsFd",11306],[10,"AsList",4186,11307],[10,"AsRawFd",11308],[6,"AggExpr",4186,11291],[10,"SeriesSealed",4186,11309],[10,"AsString",4186,11310],[20,"MaybeUninit",11311],[10,"StringNameSpaceImpl",4186,11312],[5,"OwnedBatchedCsvReader",4186,11313],[5,"CsvWriter",4186,11314],[5,"BatchedWriter",11314],[10,"Write",11303],[5,"IpcWriter",4186,11315],[5,"BatchedWriter",11315],[5,"ParquetReader",4186,11316],[5,"BatchedParquetReader",4186,11317],[5,"ParquetWriter",4186,11318],[5,"BatchedWriter",11319],[5,"BatchedCsvReader",4186,11313],[5,"BinaryNameSpace",9561,11320],[6,"Operator",4186,11291],[10,"RenameAliasFn",4186,11295],[5,"UserDefinedFunction",4186,11321],[10,"SeriesBinaryUdf",4186,11295],[5,"InProcessQuery",4186,11322],[5,"HashMap",11323],[5,"CategoricalNameSpace",4186,11324],[10,"RoundSeries",4186,11325],[10,"TemporalMethods",10503,11326],[10,"NumOpsDispatchChecked",11096,11154],[5,"LazyCsvReader",4186,11327],[5,"ScanArgsIpc",4186,11328],[5,"LazyJsonLineReader",4186,11329],[5,"ScanArgsParquet",4186,11330],[5,"RollingOptionsDynamicWindow",4186,11331],[5,"Bounds",4186,11332],[6,"ClosedWindow",4186,11333],[6,"Label",4186,11333],[6,"StartBy",4186,11333],[5,"Window",4186,11334],[5,"CsvReadOptions",4186,11335],[5,"CsvParseOptions",4186,11335],[6,"CsvEncoding",4186,11335],[6,"CommentPrefix",4186,11335],[6,"NullValues",4186,11335],[5,"CsvWriterOptions",4186,11336],[5,"SerializeOptions",4186,11336],[6,"QuoteStyle",4186,11336],[5,"IpcScanOptions",4186,11337],[5,"IpcWriterOptions",4186,11315],[6,"IpcCompression",4186,11315],[5,"JsonWriterOptions",4186,11338],[6,"JoinCoalesce",4186,11285],[6,"JoinType",4186,11285],[5,"ParquetOptions",4186,11339],[6,"JoinValidation",4186,11285],[6,"ParallelStrategy",4186,11339],[5,"AsOfOptions",4186,11340],[6,"AsofStrategy",4186,11340],[5,"ParquetWriteOptions",4186,11341],[6,"ParquetCompression",4186,11341],[6,"InterpolationMethod",4186,11342],[6,"ClosedInterval",4186,11343],[5,"GzipLevel",4186,11341],[5,"BrotliLevel",4186,11341],[6,"RankMethod",4186,11344],[5,"ZstdLevel",4186,11341],[5,"RankOptions",4186,11344],[6,"DslPlan",4186,11345],[5,"When",4186,11346],[5,"Then",4186,11346],[5,"ChainedWhen",4186,11346],[5,"ChainedThen",4186,11346],[6,"Excluded",4186,11291],[6,"BooleanFunction",4186,11347],[6,"CategoricalFunction",4186,11348],[6,"TemporalFunction",4186,11349],[6,"PowFunction",4186,11350],[6,"StringFunction",4186,11351],[5,"DatetimeArgs",4186,11352],[5,"DurationArgs",4186,11352],[5,"RollingCovOptions",4186,11353],[5,"StrptimeOptions",4186,11353],[5,"JoinOptions",4186,11353],[6,"WindowType",4186,11353],[6,"WindowMapping",4186,11353],[6,"NestedType",4186,11353],[5,"OptState",4186,11354],[6,"LiteralValue",4186,11355],[5,"AnonymousScanOptions",4186,11356],[5,"StatisticsOptions",4186,11357],[5,"UnionArgs",4186,11356],[5,"FileMetaData",4186,11358],[5,"RollingVarParams",4186,11359],[5,"RollingQuantileParams",4186,11359],[6,"NonExistent",4186,11360],[10,"LazyFileListReader",4186,11361],[5,"CloudOptions",9716,11362],[10,"Ord",11247],[6,"ColumnOrder",11363],[10,"BinaryNameSpaceImpl",4186,11364],[5,"JsonLineReader",4186,11365],[5,"PathBuf",11366],[5,"IpcStreamWriterOption",4186,11302],[10,"SerWriter",4186,11367],[5,"IpcWriterOption",4186,11315],[10,"CrossJoin",4186,11368],[10,"ExprEvalExtension",4186,11369],[10,"DateMethods",9578,11370],[10,"DatetimeMethods",9578,11371],[10,"DurationMethods",9578,11372],[10,"BinaryUdfOutputField",4186,11295],[10,"Default",11373],[5,"CStr",11374],[5,"RowGroupMetaData",11375],[5,"ParquetStatistics",4186],[6,"NullBehavior",11102,11376],[5,"Weak",11177],[5,"DateLikeNameSpace",10078,11377],[1,"char"],[10,"FromIterator",11162],[10,"SeriesMethods",4186,11378],[10,"PartialEq",11247],[10,"Scalar",11379],[10,"ListNameSpaceExtension",4186,11380],[10,"Command",11381],[5,"StructNameSpace",4186,11382],[10,"SerReader",4186,11367],[5,"IpcReader",4186,11337],[5,"IpcStreamWriter",4186,11302],[5,"JsonWriter",4186,11338],[5,"JsonReader",4186,11338],[10,"UdfSchema",4186,11383],[6,"ListFunction",11384],[6,"BinaryFunction",11385],[6,"StructFunction",11386],[6,"RangeFunction",11387],[6,"ArrayFunction",11388],[5,"MutableStatistics",11389],[5,"Path",11366],[5,"OsString",11390],[5,"OsStr",11390],[1,"never"],[5,"CString",11391],[10,"ToOwned",11148],[5,"MutableStructArray",11392],[5,"GrowableStruct",11393],[10,"FromData",10072,11394],[5,"Buffer",11395],[10,"FromDataUtf8",10072,11394],[10,"FromDataBinary",10072,11394],[5,"ListArray",11396],[6,"Ambiguous",4186,11360],[10,"NamedFromOwned",4186,11397],[10,"DataFrameJoinOps",4186,11398],[5,"FunctionOptions",11356],[10,"PartialOrd",11247],[6,"Context",11345],[10,"IndexOfSchema",4186,11257],[5,"BoundsIter",4186,11334],[6,"ReaderBytes",11290],[10,"PolarsTemporalGroupby",4186,11263],[10,"PolarsArray",4186,11399],[10,"Hash",11206],[10,"SeriesJoin",4186,11400],[10,"TimeMethods",9578,11401],[5,"NonZero",11402],[10,"IntoListNameSpace",4186,11380],[5,"FileMetaData",11403],[5,"StructValueIter",11404],[10,"AsofJoinBy",4186,11405],[10,"ListNameSpaceImpl",4186,11406],[5,"ExprNameNameSpace",4186,11407],[5,"KeyValue",11403],[10,"IntoLazy",4186,11264],[10,"Literal",4186,11355],[5,"Null",4186,11355],[10,"CloneToUninit",11204],[5,"RowIndex",11408],[10,"ChunkAggSeries",4186,11409],[10,"QuantileAggSeries",4186,11410],[10,"IndexToUsize",4186,11411],[10,"NamedFrom",4186,11397],[6,"RowGroupFetcher",11317],[5,"SplitNChars",4186,11412],[5,"Pin",11413],[5,"Request",11225],[10,"SeriesRank",4186,11344],[5,"BorrowedCursor",11414],[10,"VarInt",11415],[5,"IoSliceMut",11303],[10,"SeriesOpsTime",9578,11416],[10,"PolarsRound",4186,11417],[5,"AnonymousScanArgs",4186,11293],[10,"ChunkedSet",4186,11182],[5,"SchemaDescriptor",11418],[6,"SeekFrom",11303],[10,"VarAggSeries",4186,11419],[5,"StringNameSpace",11420],[10,"TakeChunked",4186,11286],[5,"IRPlan",11283],[10,"ToDummies",4186,11421],[10,"PolarsTruncate",4186,11422],[5,"AllocError",11292],[5,"RwLock",11423],[5,"SchemaInferenceResult",10470,11424],[10,"PolarsUpsample",4186,11425],[10,"VecHash",4186,11426],[6,"JsonFormat",4186,11338],[5,"BTreeMap",11427],[5,"IoSlice",11303],[10,"ArrayNameSpace",9542,11428],[10,"AsArray",9542,11429],[10,"AsString",9645,11305],[6,"Pattern",9645,11430],[5,"DatetimeInfer",9685,11431],[10,"StrpTimeParser",9685,11431],[17,"Error"],[10,"TryFromWithUnit",9685,11431],[6,"CloudType",9716,11362],[5,"AnonymousBuilder",10133,11432],[6,"RollingFunction",10366,11433],[6,"RollingFunctionBy",10396,11434],[5,"MutableNullArray",10439,11435],[5,"MutableBitmap",11436],[10,"AsSeries",10503,11326],[5,"Utf8Array",11437],[5,"BinaryArray",11438],[5,"SeriesIter",10620,11439],[5,"Rc",11440],[8,"FillNullLimit",1625],[10,"InitHashMaps",1942],[10,"InitHashMaps2",1942],[5,"TrueT",1942],[8,"PolarsResult",3425],[15,"IO",9474],[15,"Context",9474],[15,"Count",9468],[15,"Slice",9469],[8,"ChunkJoinOptIds",4186],[8,"DynArgs",4186],[8,"AllowedOptimizations",4186],[10,"ListFromIter",4186],[15,"Quantile",9347],[15,"Min",9347],[15,"Max",9347],[15,"IsBetween",10319],[15,"Any",10319],[15,"All",10319],[15,"GroupBy",9357],[15,"Union",9357],[15,"Sort",9357],[15,"Cache",9357],[15,"ExtContext",9357],[15,"DataFrameScan",9357],[15,"IR",9357],[15,"Select",9357],[15,"HStack",9357],[15,"Scan",9357],[15,"MapFunction",9357],[15,"Filter",9357],[15,"Distinct",9357],[15,"Slice",9357],[15,"Sink",9357],[15,"Join",9357],[15,"HConcat",9357],[15,"SortBy",9411],[15,"Filter",9411],[15,"Cast",9411],[15,"Sort",9411],[15,"Gather",9411],[15,"RenameAlias",9411],[15,"Ternary",9411],[15,"Function",9411],[15,"Window",9411],[15,"AnonymousFunction",9411],[15,"Slice",9411],[15,"BinaryExpr",9411],[15,"Round",10322],[15,"RoundSF",10322],[15,"Clip",10322],[15,"BackwardFill",10322],[15,"ForwardFill",10322],[15,"Random",10322],[15,"GatherEvery",10322],[15,"ValueCounts",10322],[15,"Rank",10322],[15,"ReplaceStrict",10322],[15,"CumCount",10322],[15,"CumSum",10322],[15,"CumProd",10322],[15,"CumMin",10322],[15,"CumMax",10322],[15,"Range",9471],[15,"ConcatHorizontal",10344],[15,"ConcatVertical",10344],[15,"ExtractGroups",10344],[15,"SplitExact",10344],[15,"Contains",10344],[15,"Find",10344],[15,"Replace",10344],[15,"DatetimeFunction",10358],[10,"Utf8FromIter",10616],[10,"BinaryFromIter",10616],[6,"BitRepr",10620]],"r":[[1,11441],[2,11441],[3,11441],[4,11441],[6,11249],[7,11441],[8,11441],[9,11441],[13,11441],[14,11441],[16,11249],[17,11132],[18,11132],[19,11132],[112,11132],[135,11132],[136,11132],[162,11132],[164,11132],[218,11132],[271,11132],[413,11132],[462,11132],[562,11132],[565,11132],[700,11132],[825,11191],[853,11192],[854,11192],[855,11199],[856,11199],[857,11201],[858,11196],[859,11197],[860,11193],[861,11195],[862,11198],[863,11194],[864,11197],[865,11196],[866,11202],[867,11203],[868,11199],[1005,11196],[1021,11195],[1049,11196],[1114,11192],[1115,11192],[1116,11197],[1117,11193],[1118,11195],[1119,11198],[1120,11194],[1121,11197],[1129,11195],[1131,11153],[1161,11207],[1162,11207],[1175,11208],[1177,11209],[1178,11209],[1181,11176],[1182,11176],[1183,11176],[1184,11176],[1185,11176],[1231,11176],[1251,11442],[1252,11442],[1261,11158],[1262,11158],[1263,11212],[1264,11158],[1265,11158],[1266,11158],[1267,11158],[1497,11140],[1498,11140],[1499,11140],[1500,11140],[1512,11140],[1542,11140],[1543,11443],[1574,11219],[1597,11220],[1598,11220],[1599,11220],[1600,11220],[1612,11220],[1613,11220],[1614,11220],[1617,11220],[1619,11220],[1626,11221],[1627,11221],[1628,11221],[1629,11221],[1630,11221],[1631,11221],[1632,11221],[1633,11221],[1634,11221],[1635,11221],[1636,11221],[1637,11221],[1638,11221],[1639,11221],[1640,11221],[1641,11221],[1642,11221],[1643,11221],[1644,11221],[1645,11221],[1646,11221],[1647,11221],[1648,11221],[1649,11221],[1650,11221],[1651,11221],[1652,11221],[1655,11221],[1656,11221],[1665,11221],[1666,11222],[1668,11152],[1669,11152],[1682,11221],[1729,11221],[1732,11221],[1741,11221],[1744,11221],[1787,11221],[1793,11221],[1830,11221],[1832,11223],[1836,11223],[1837,11223],[1838,11223],[1839,11223],[1840,11223],[1841,11223],[1842,11223],[1843,11223],[1844,11223],[1845,11223],[1846,11223],[1847,11223],[1848,11223],[1849,11223],[1850,11223],[1851,11223],[1852,11223],[1853,11223],[1854,11223],[1855,11223],[1856,11223],[1857,11223],[1858,11223],[1859,11223],[1860,11223],[1861,11223],[1862,11223],[1863,11223],[1864,11223],[1865,11223],[1866,11223],[1867,11444],[1868,11444],[1869,11445],[1870,11445],[1871,11445],[1875,11227],[1877,11227],[1897,11227],[1903,11222],[1904,11446],[1905,11446],[1906,11446],[1907,11446],[1910,11447],[1911,11448],[1912,11448],[1913,11448],[1914,11448],[1915,11448],[1916,11448],[1917,11448],[1918,11222],[1919,11152],[1920,11152],[1931,11449],[1932,11450],[1933,11450],[1934,11450],[1935,11449],[1936,11449],[1937,11451],[1938,11449],[1939,11450],[1940,11450],[1941,11450],[1943,11171],[1947,11131],[1948,11236],[1949,11236],[1950,11236],[1951,11216],[1953,11150],[1957,11131],[1959,11131],[1960,11131],[1962,11131],[1967,11131],[1968,11131],[1969,11234],[1972,11234],[1973,11235],[1974,11239],[1975,11238],[1976,11131],[1977,11150],[1978,11150],[1979,11150],[1984,11452],[1985,11131],[1988,11453],[1989,11131],[1994,11454],[1995,11131],[2000,11455],[2001,11131],[2005,11131],[2006,11179],[2007,11179],[2010,11131],[2016,11131],[2017,11131],[2021,11131],[2022,11131],[2023,11171],[2025,11239],[2029,11456],[2030,11411],[2031,11456],[2032,11456],[2033,11457],[2034,11456],[2036,11131],[2037,11131],[2041,11131],[2042,11131],[2046,11131],[2047,11131],[2051,11131],[2052,11131],[2056,11131],[2057,11131],[2059,11246],[2068,11131],[2069,11131],[2071,11172],[2072,11172],[2084,11131],[2087,11131],[2089,11131],[2090,11171],[2094,11457],[2095,11457],[2096,11456],[2097,11457],[2098,11457],[2099,11131],[2100,11131],[2101,11131],[2102,11131],[2104,11238],[2105,11171],[2108,11224],[2112,11131],[2114,11131],[2118,11233],[2124,11458],[2125,11131],[2126,11173],[2127,11150],[2130,11131],[2134,11131],[2135,11131],[2139,11131],[2140,11131],[2144,11131],[2145,11131],[2149,11131],[2150,11131],[2154,11150],[2324,11239],[2338,11172],[2485,11150],[3011,11239],[3012,11239],[3016,11150],[3381,11234],[3382,11234],[3383,11235],[3384,11239],[3385,11238],[3387,11239],[3391,11238],[3392,11239],[3394,11239],[3395,11239],[3396,11234],[3397,11234],[3398,11238],[3403,11238],[3404,11249],[3410,11249],[3413,11249],[3421,11249],[3431,11136],[3438,11136],[3439,11136],[3440,11250],[3456,11136],[3469,11136],[3485,11250],[3492,11136],[3493,11136],[3494,11136],[3495,11136],[3496,11136],[3497,11250],[3498,11136],[3517,11459],[3518,11459],[3519,11459],[3521,11248],[3526,11248],[3527,11248],[3529,11248],[3530,11248],[3603,11248],[3637,11248],[3701,11248],[3785,11268],[3815,11139],[3818,11262],[3819,11262],[3821,11139],[3822,11139],[3823,11139],[3824,11139],[3825,11139],[3826,11139],[3829,11139],[3831,11273],[3843,11139],[3852,11262],[3924,11262],[3934,11262],[4058,11278],[4059,11279],[4060,11279],[4061,11279],[4062,11279],[4063,11279],[4064,11279],[4065,11279],[4066,11279],[4067,11279],[4071,11280],[4076,11281],[4077,11281],[4097,11261],[4131,11261],[4152,11261],[4166,11261],[4167,11261],[4168,11261],[4184,11460],[4185,11460],[4188,11291],[4195,11354],[4197,11360],[4200,11293],[4201,11293],[4202,11356],[4208,11171],[4209,11177],[4210,11298],[4213,11191],[4218,11131],[4219,11236],[4221,11236],[4222,11236],[4223,11299],[4224,11142],[4225,11216],[4227,11260],[4229,11304],[4230,11307],[4232,11340],[4233,11150],[4234,11310],[4236,11340],[4237,11405],[4238,11340],[4241,11461],[4247,11313],[4248,11317],[4253,11131],[4254,11199],[4257,11364],[4259,11131],[4260,11131],[4262,11131],[4263,11295],[4270,11131],[4271,11201],[4272,11347],[4273,11131],[4274,11139],[4277,11332],[4278,11334],[4280,11341],[4285,11234],[4289,11234],[4290,11235],[4291,11348],[4292,11239],[4293,11324],[4294,11238],[4295,11131],[4299,11346],[4300,11346],[4301,11221],[4302,11409],[4303,11221],[4304,11221],[4305,11221],[4306,11221],[4307,11221],[4308,11221],[4309,11221],[4310,11221],[4311,11221],[4312,11221],[4313,11221],[4314,11221],[4315,11183],[4316,11285],[4317,11221],[4318,11221],[4319,11221],[4320,11221],[4321,11221],[4322,11221],[4323,11221],[4324,11221],[4325,11221],[4326,11221],[4327,11221],[4328,11221],[4329,11132],[4330,11196],[4331,11207],[4332,11207],[4333,11182],[4335,11343],[4336,11333],[4344,11335],[4356,11368],[4357,11335],[4358,11335],[4359,11335],[4360,11288],[4361,11314],[4362,11336],[4369,11150],[4370,11150],[4371,11248],[4372,11398],[4373,11287],[4377,11150],[4384,11452],[4385,11370],[4387,11131],[4391,11352],[4392,11453],[4394,11371],[4395,11131],[4402,11454],[4403,11131],[4405,11286],[4412,11345],[4416,11269],[4422,11352],[4423,11455],[4424,11372],[4425,11131],[4426,11359],[4427,11263],[4436,11291],[4439,11291],[4440,11369],[4441,11407],[4448,11461],[4449,11461],[4450,11131],[4451,11179],[4453,11179],[4454,11301],[4455,11407],[4456,11358],[4457,11462],[4459,11221],[4460,11221],[4470,11131],[4478,11131],[4479,11131],[4484,11131],[4485,11131],[4493,11394],[4494,11394],[4495,11394],[4499,11297],[4500,11295],[4504,11171],[4506,11295],[4508,11239],[4509,11262],[4511,11262],[4513,11139],[4514,11139],[4515,11139],[4516,11139],[4517,11139],[4518,11139],[4523,11341],[4533,11456],[4534,11461],[4539,11411],[4540,11456],[4541,11139],[4542,11183],[4543,11456],[4546,11322],[4548,11257],[4549,11265],[4550,11411],[4551,11457],[4552,11456],[4554,11285],[4557,11131],[4558,11131],[4563,11131],[4564,11131],[4569,11131],[4570,11131],[4575,11131],[4576,11131],[4581,11131],[4582,11131],[4585,11342],[4587,11273],[4588,11264],[4589,11380],[4590,11246],[4591,11258],[4592,11228],[4594,11315],[4595,11337],[4596,11337],[4597,11302],[4598,11302],[4599,11302],[4600,11315],[4601,11315],[4602,11315],[4605,11221],[4609,11221],[4621,11285],[4622,11264],[4623,11285],[4624,11284],[4625,11353],[4627,11285],[4628,11285],[4630,11338],[4631,11365],[4633,11338],[4634,11338],[4635,11338],[4639,11333],[4641,11463],[4643,11463],[4644,11463],[4650,11327],[4651,11361],[4652,11264],[4653,11264],[4654,11329],[4661,11285],[4666,11138],[4673,11197],[4674,11193],[4675,11195],[4676,11131],[4678,11399],[4679,11300],[4680,11380],[4681,11406],[4682,11194],[4683,11197],[4684,11131],[4685,11355],[4687,11355],[4689,11172],[4692,11172],[4739,11355],[4744,11397],[4745,11397],[4757,11353],[4759,11196],[4761,11228],[4762,11360],[4774,11355],[4782,11335],[4783,11183],[4784,11183],[4785,11138],[4786,11154],[4787,11131],[4790,11131],[4792,11131],[4797,11291],[4798,11354],[4806,11313],[4807,11171],[4809,11461],[4810,11339],[4811,11341],[4812,11339],[4813,11316],[4815,11341],[4816,11318],[4817,11361],[4820,11457],[4821,11457],[4822,11456],[4823,11457],[4824,11457],[4826,11399],[4827,11131],[4828,11136],[4829,11131],[4830,11131],[4831,11176],[4832,11131],[4833,11140],[4834,11136],[4835,11417],[4836,11263],[4837,11422],[4839,11425],[4841,11350],[4842,11203],[4845,11410],[4846,11180],[4848,11336],[4856,11344],[4857,11344],[4858,11221],[4860,11295],[4867,11238],[4876,11353],[4879,11263],[4880,11331],[4881,11181],[4882,11359],[4883,11464],[4884,11359],[4888,11325],[4889,11465],[4894,11171],[4897,11294],[4898,11328],[4899,11330],[4900,11257],[4903,11257],[4904,11227],[4909,11367],[4910,11367],[4911,11336],[4912,11135],[4914,11295],[4915,11400],[4916,11378],[4917,11416],[4918,11344],[4919,11309],[4920,11175],[4921,11295],[4934,11222],[4935,11139],[4943,11152],[4944,11152],[4945,11295],[4949,11412],[4951,11333],[4953,11224],[4954,11357],[4962,11249],[4964,11131],[4965,11199],[4967,11351],[4968,11305],[4969,11312],[4971,11131],[4978,11353],[4982,11266],[4983,11233],[4986,11382],[4994,11286],[4996,11349],[4997,11326],[4999,11346],[5007,11458],[5008,11401],[5010,11131],[5011,11173],[5012,11150],[5016,11421],[5030,11131],[5037,11131],[5038,11131],[5043,11131],[5044,11131],[5049,11131],[5050,11131],[5055,11131],[5056,11131],[5057,11383],[5061,11356],[5063,11248],[5066,11150],[5067,11268],[5070,11321],[5079,11419],[5080,11426],[5084,11346],[5086,11334],[5089,11353],[5090,11353],[5099,11341],[5190,11466],[5195,11466],[5205,11467],[5215,11262],[5217,11468],[5219,11469],[5230,11469],[5241,11470],[5247,11471],[5250,11472],[5263,11473],[5268,11473],[5271,11221],[5277,11474],[5301,11475],[5305,11476],[5309,11477],[5317,11471],[5319,11346],[5575,11239],[5580,11476],[5591,11471],[5600,11461],[5601,11461],[5602,11461],[5608,11478],[5611,11479],[5613,11479],[5615,11479],[5930,11480],[5938,11469],[5942,11481],[5943,11468],[5945,11482],[5957,11468],[5968,11482],[5970,11483],[5973,11482],[5974,11482],[5975,11483],[5976,11483],[5985,11399],[5986,11484],[5992,11485],[5993,11150],[6001,11486],[6003,11469],[6004,11486],[6006,11486],[6008,11486],[6010,11469],[6011,11486],[6018,11441],[6020,11472],[6021,11474],[6022,11352],[6024,11472],[6025,11472],[6026,11450],[6027,11450],[6028,11450],[6095,11399],[6096,11284],[6353,11389],[6355,11441],[6357,11487],[6499,11488],[6500,11471],[6505,11468],[6506,11468],[6508,11352],[6517,11269],[6518,11269],[6780,11262],[6806,11221],[6844,11471],[6848,11399],[6851,11221],[6856,11489],[6952,11262],[6956,11469],[6960,11483],[7176,11221],[7185,11471],[7187,11221],[7228,11461],[7230,11461],[7241,11333],[7242,11333],[7321,11490],[7332,11491],[7333,11491],[7335,11492],[7344,11468],[7350,11411],[7351,11424],[7484,11472],[7485,11472],[7487,11493],[7488,11342],[7490,11493],[7491,11494],[7635,11343],[7637,11461],[7638,11495],[7646,11496],[7651,11497],[7654,11498],[7662,11476],[7665,11476],[7671,11484],[7705,11471],[7720,11471],[7732,11355],[7779,11239],[7780,11239],[7785,11470],[7796,11471],[7799,11471],[7807,11499],[7808,11461],[7809,11476],[7819,11476],[7825,11476],[7838,11150],[7849,11476],[7870,11474],[7908,11474],[7919,11500],[7920,11501],[7968,11502],[7991,11476],[7995,11471],[7996,11399],[8048,11136],[8049,11136],[8050,11136],[8051,11136],[8058,11398],[8068,11476],[8099,11469],[8110,11503],[8111,11504],[8113,11505],[8120,11505],[8121,11505],[8123,11491],[8126,11461],[8218,11506],[8221,11221],[8234,11478],[8274,11399],[8292,11221],[8309,11412],[8311,11412],[8329,11490],[8342,11474],[8343,11507],[8345,11507],[8347,11507],[8349,11507],[8351,11507],[8363,11476],[8386,11346],[8390,11472],[8951,11471],[8973,11399],[9132,11346],[9345,11221],[9494,11278],[9495,11279],[9496,11279],[9497,11279],[9498,11279],[9499,11279],[9500,11279],[9501,11279],[9502,11279],[9503,11279],[9507,11223],[9511,11223],[9512,11223],[9513,11223],[9514,11223],[9515,11223],[9516,11223],[9517,11223],[9518,11223],[9519,11223],[9520,11223],[9521,11223],[9522,11223],[9523,11223],[9524,11223],[9525,11223],[9526,11223],[9527,11223],[9528,11223],[9529,11223],[9530,11223],[9531,11223],[9532,11223],[9533,11223],[9534,11223],[9535,11223],[9536,11223],[9537,11223],[9538,11223],[9539,11223],[9540,11223],[9541,11223],[9542,11428],[9543,11429],[9561,11320],[9577,11324],[9578,11370],[9579,11371],[9580,11372],[9581,11331],[9582,11416],[9583,11305],[9584,11401],[9637,11508],[9645,11305],[9651,11430],[9652,11305],[9676,11305],[9685,11431],[9687,11431],[9688,11431],[9699,11431],[9718,11362],[9719,11362],[9754,11509],[9766,11362],[9767,11362],[9773,11171],[9777,11131],[9778,11236],[9779,11236],[9780,11236],[9781,11216],[9783,11150],[9787,11131],[9789,11131],[9790,11131],[9792,11131],[9797,11131],[9798,11131],[9799,11234],[9802,11234],[9803,11235],[9804,11239],[9805,11238],[9806,11131],[9807,11150],[9808,11150],[9809,11150],[9814,11452],[9815,11131],[9818,11453],[9819,11131],[9824,11454],[9825,11131],[9830,11455],[9831,11131],[9835,11131],[9836,11179],[9837,11179],[9840,11131],[9846,11131],[9847,11131],[9851,11131],[9852,11131],[9853,11171],[9855,11239],[9859,11456],[9860,11411],[9861,11456],[9862,11456],[9863,11457],[9864,11456],[9866,11131],[9867,11131],[9871,11131],[9872,11131],[9876,11131],[9877,11131],[9881,11131],[9882,11131],[9886,11131],[9887,11131],[9889,11246],[9898,11131],[9899,11131],[9901,11172],[9902,11172],[9914,11131],[9917,11131],[9919,11131],[9920,11171],[9924,11457],[9925,11457],[9926,11456],[9927,11457],[9928,11457],[9929,11131],[9930,11131],[9931,11131],[9932,11131],[9934,11238],[9935,11171],[9938,11224],[9942,11131],[9944,11131],[9948,11233],[9954,11458],[9955,11131],[9956,11173],[9957,11150],[9960,11131],[9964,11131],[9965,11131],[9969,11131],[9970,11131],[9974,11131],[9975,11131],[9979,11131],[9980,11131],[9984,11150],[9997,11239],[10000,11172],[10005,11150],[10022,11239],[10023,11239],[10024,11150],[10042,11234],[10043,11234],[10044,11235],[10045,11239],[10046,11238],[10048,11239],[10052,11238],[10053,11239],[10055,11239],[10056,11239],[10057,11234],[10058,11234],[10059,11238],[10064,11238],[10065,11249],[10066,11249],[10067,11249],[10068,11249],[10069,11491],[10070,11491],[10071,11491],[10072,11394],[10073,11394],[10074,11394],[10078,11377],[10130,11280],[10133,11432],[10153,11444],[10154,11444],[10169,11347],[10172,11348],[10209,11297],[10250,11350],[10280,11351],[10291,11349],[10315,11297],[10316,11297],[10317,11297],[10318,11297],[10360,11348],[10364,11350],[10370,11433],[10400,11434],[10426,11445],[10427,11445],[10428,11445],[10429,11342],[10432,11342],[10433,11494],[10434,11510],[10435,11511],[10436,11511],[10437,11511],[10438,11511],[10439,11435],[10470,11424],[10481,11424],[10486,11424],[10487,11424],[10500,11227],[10501,11227],[10502,11227],[10503,11326],[10504,11326],[10525,11222],[10528,11222],[10529,11446],[10530,11446],[10531,11446],[10532,11446],[10535,11447],[10536,11448],[10537,11448],[10538,11448],[10539,11448],[10540,11448],[10541,11448],[10542,11448],[10543,11222],[10544,11152],[10545,11152],[10556,11310],[10557,11412],[10558,11312],[10577,11490],[10585,11412],[10587,11412],[10590,11490],[10596,11507],[10598,11507],[10600,11507],[10602,11507],[10604,11507],[10610,11321],[10616,11512],[10617,11512],[10621,11175],[10622,11221],[10624,11258],[10625,11175],[10629,11135],[10630,11439],[10631,11439],[10632,11175],[10642,11135],[10648,11135],[10836,11135],[10956,11135],[11051,11149],[11052,11149],[11075,11138],[11076,11138],[11077,11138],[11079,11138],[11083,11138],[11096,11154],[11097,11154],[11104,11376]],"b":[[26,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[27,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[28,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[29,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[30,"impl-Add-for-ChunkedArray%3CT%3E"],[31,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[32,"impl-Add-for-ChunkedArray%3CStringType%3E"],[33,"impl-Add-for-%26ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[37,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[39,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[40,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[41,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[42,"impl-AggList-for-ChunkedArray%3CT%3E"],[43,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CListType%3E"],[48,"impl-ChunkedArray%3CListType%3E"],[49,"impl-ChunkedArray%3CFixedSizeListType%3E"],[50,"impl-ChunkedArray%3CListType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[56,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[57,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[58,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[59,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[60,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[62,"impl-ChunkedArray%3CFixedSizeListType%3E"],[63,"impl-ChunkedArray%3CListType%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[69,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[70,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[71,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[72,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[73,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[76,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[77,"impl-ChunkedArray%3CT%3E"],[78,"impl-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CFixedSizeListType%3E"],[83,"impl-ChunkedArray%3CListType%3E"],[84,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[85,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[86,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[87,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[88,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[89,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[90,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[94,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[95,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[97,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[98,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[99,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[100,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[102,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[114,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[115,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[123,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[124,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[125,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[126,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-ChunkedArray%3CT%3E"],[155,"impl-Container-for-ChunkedArray%3CT%3E"],[174,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[175,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[176,"impl-Div-for-%26ChunkedArray%3CT%3E"],[177,"impl-Div-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[189,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[192,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[196,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[199,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[200,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[203,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[204,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[206,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[207,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[208,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[209,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[210,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[211,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[212,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[213,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[214,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[215,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[216,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[219,"impl-Debug-for-ChunkedArray%3CT%3E"],[220,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[221,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[222,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[223,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[224,"impl-Debug-for-ChunkedArray%3CListType%3E"],[225,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[227,"impl-ChunkedArray%3CFixedSizeListType%3E"],[228,"impl-ChunkedArray%3CListType%3E"],[237,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[238,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[239,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[240,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[241,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[242,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[243,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[244,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[246,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[247,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[248,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[249,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[250,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[253,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[254,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[255,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[256,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[257,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[258,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[259,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[261,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[266,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[268,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[273,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[275,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[276,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[277,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[278,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[279,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[283,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[286,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[287,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[289,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[290,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[291,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[292,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[295,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[296,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[297,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[301,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[302,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[306,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[307,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[312,"impl-ChunkedArray%3CListType%3E"],[313,"impl-ChunkedArray%3CFixedSizeListType%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[331,"impl-ChunkedArray%3CListType%3E"],[332,"impl-ChunkedArray%3CFixedSizeListType%3E"],[336,"impl-ChunkedArray%3CFixedSizeListType%3E"],[337,"impl-ChunkedArray%3CListType%3E"],[343,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[344,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[345,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[346,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[347,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[348,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[349,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[350,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[351,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[352,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[353,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[354,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[356,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[357,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[358,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[359,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[360,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[362,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[363,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[364,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[366,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[368,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[369,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[370,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[373,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[379,"impl-ChunkedArray%3CFixedSizeListType%3E"],[380,"impl-ChunkedArray%3CListType%3E"],[388,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[389,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[390,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[391,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[392,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[393,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[394,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[395,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[397,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[398,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ChunkedArray%3CT%3E"],[424,"impl-Container-for-ChunkedArray%3CT%3E"],[429,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[430,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[431,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[432,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[433,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[434,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[435,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[436,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[437,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[438,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[439,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[440,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[444,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[445,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[446,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[447,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkedArray%3CBooleanType%3E"],[449,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[450,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[452,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[453,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[454,"impl-ChunkedArray%3CBooleanType%3E"],[455,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[456,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[457,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[458,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[459,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[460,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[467,"impl-ChunkedArray%3CBooleanType%3E"],[468,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[470,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[471,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[472,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[473,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[474,"impl-ChunkedArray%3CT%3E"],[475,"impl-ChunkedArray%3CBooleanType%3E"],[476,"impl-Mul-for-ChunkedArray%3CT%3E"],[477,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[478,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[479,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[482,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[486,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[487,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[488,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[489,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[490,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[491,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[492,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[493,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[494,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[495,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[496,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[497,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[498,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[501,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[502,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[503,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[506,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[507,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[508,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[511,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[512,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[513,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[517,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[522,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[523,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[524,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[527,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[528,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[529,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[530,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[531,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[532,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[533,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[534,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[541,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[542,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[543,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[544,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[545,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[547,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[548,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[549,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[550,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[551,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[552,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[553,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[554,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[555,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[556,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[557,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[558,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[559,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[560,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[564,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[566,"impl-ChunkedArray%3CStringType%3E"],[567,"impl-ChunkedArray%3CListType%3E"],[568,"impl-ChunkedArray%3CStringType%3E"],[569,"impl-ChunkedArray%3CListType%3E"],[572,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[573,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[574,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[575,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[576,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[577,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[584,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[585,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[586,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[594,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[595,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[596,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[597,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[598,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[606,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[607,"impl-Rem-for-ChunkedArray%3CT%3E"],[608,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[609,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[612,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[613,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[614,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[615,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[616,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[617,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[618,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[619,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[624,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[625,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[626,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[627,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[628,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[629,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[630,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[631,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[632,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[633,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[635,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[636,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[637,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[638,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[644,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[645,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[647,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[648,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[649,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[650,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[651,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[654,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[655,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[656,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[657,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[658,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[659,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[661,"impl-Container-for-ChunkedArray%3CT%3E"],[662,"impl-ChunkedArray%3CT%3E"],[663,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[664,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[666,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[667,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[668,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[669,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[670,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[671,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[672,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[673,"impl-Container-for-ChunkedArray%3CT%3E"],[674,"impl-ChunkedArray%3CT%3E"],[676,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[677,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[678,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[679,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[680,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[681,"impl-Sub-for-ChunkedArray%3CT%3E"],[682,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[684,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkedArray%3CBooleanType%3E"],[686,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[687,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[690,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[691,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[694,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[695,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[696,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[697,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[698,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[699,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[704,"impl-ChunkedArray%3CFixedSizeListType%3E"],[705,"impl-ChunkedArray%3CListType%3E"],[706,"impl-ChunkedArray%3CListType%3E"],[707,"impl-ChunkedArray%3CT%3E"],[712,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[713,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[714,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[715,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[716,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[717,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkedArray%3CListType%3E"],[720,"impl-ChunkedArray%3CFixedSizeListType%3E"],[733,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[734,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[735,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[736,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[737,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[742,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[743,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[744,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[745,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[746,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[747,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[748,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[749,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[750,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[751,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[752,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[753,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[754,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[755,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[756,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[757,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[758,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[759,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[760,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[761,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[762,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[763,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[764,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[765,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[766,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[767,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[768,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[770,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[771,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[773,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[775,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[786,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[787,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[788,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[789,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[805,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[806,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[807,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[808,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[809,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[810,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1000,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1001,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1286,"impl-Flags-for-MetadataProperties"],[1287,"impl-MetadataProperties"],[1288,"impl-Flags-for-MetadataFlags"],[1289,"impl-MetadataFlags"],[1341,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1342,"impl-Metadata%3CT%3E"],[1365,"impl-Binary-for-MetadataProperties"],[1366,"impl-Octal-for-MetadataProperties"],[1367,"impl-UpperHex-for-MetadataProperties"],[1368,"impl-Debug-for-MetadataProperties"],[1369,"impl-LowerHex-for-MetadataProperties"],[1370,"impl-Debug-for-MetadataFlags"],[1371,"impl-UpperHex-for-MetadataFlags"],[1372,"impl-Octal-for-MetadataFlags"],[1373,"impl-LowerHex-for-MetadataFlags"],[1374,"impl-Binary-for-MetadataFlags"],[1382,"impl-MetadataProperties"],[1383,"impl-Flags-for-MetadataProperties"],[1384,"impl-Flags-for-MetadataFlags"],[1385,"impl-MetadataFlags"],[1398,"impl-Metadata%3CT%3E"],[1399,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1436,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1437,"impl-Metadata%3CT%3E"],[1441,"impl-Metadata%3CT%3E"],[1442,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1503,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1504,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1538,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1539,"impl-ObjectArray%3CT%3E"],[1554,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1555,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1565,"impl-ObjectArray%3CT%3E"],[1566,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1568,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1569,"impl-ObjectArray%3CT%3E"],[1571,"impl-Array-for-ObjectArray%3CT%3E"],[1572,"impl-ObjectArray%3CT%3E"],[1575,"impl-ObjectChunkedBuilder%3CT%3E"],[1576,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1578,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1579,"impl-ObjectChunkedBuilder%3CT%3E"],[2328,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2329,"impl-Logical%3CDurationType,+Int64Type%3E"],[2331,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2332,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2333,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2334,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2335,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2642,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2643,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2644,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2645,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2646,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2655,"impl-PartialEq-for-DataType"],[2656,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2662,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2663,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2664,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2666,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2667,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2668,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2702,"impl-Debug-for-AnyValue%3C\'a%3E"],[2703,"impl-Display-for-AnyValue%3C\'_%3E"],[2705,"impl-Display-for-DataType"],[2706,"impl-Debug-for-DataType"],[2708,"impl-Display-for-TimeUnit"],[2709,"impl-Debug-for-TimeUnit"],[2715,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2716,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2730,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2731,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2733,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2734,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2735,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2737,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2738,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2740,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2741,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2743,"impl-From%3C%26ArrowField%3E-for-Field"],[2767,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2768,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2791,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2792,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2793,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2794,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2795,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2799,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2800,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2801,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2802,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2803,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2839,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2840,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2841,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2843,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2844,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2845,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2949,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2950,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2951,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2952,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2953,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3003,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3004,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3005,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3007,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3008,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3009,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3046,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3047,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3048,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3049,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3050,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3051,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3052,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3053,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3060,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3061,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3062,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3064,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3065,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3066,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3070,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3071,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3092,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3093,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3100,"impl-Logical%3CDurationType,+Int64Type%3E"],[3101,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3107,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3108,"impl-Logical%3CTimeType,+Int64Type%3E"],[3109,"impl-Logical%3CDateType,+Int32Type%3E"],[3124,"impl-Logical%3CDurationType,+Int64Type%3E"],[3125,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3173,"impl-Logical%3CTimeType,+Int64Type%3E"],[3174,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3175,"impl-Logical%3CDateType,+Int32Type%3E"],[3181,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3182,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3471,"impl-Debug-for-ErrString"],[3472,"impl-Display-for-ErrString"],[3473,"impl-Debug-for-PolarsError"],[3474,"impl-Display-for-PolarsError"],[3478,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3479,"impl-From%3CError%3E-for-PolarsError"],[3480,"impl-From%3CError%3E-for-PolarsError"],[3482,"impl-From%3CParquetError%3E-for-PolarsError"],[3483,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3484,"impl-From%3CError%3E-for-PolarsError"],[3612,"impl-Debug-for-DataFrame"],[3613,"impl-Display-for-DataFrame"],[3618,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3619,"impl-From%3C%26Schema%3E-for-DataFrame"],[3620,"impl-From%3CStructChunked%3E-for-DataFrame"],[3648,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3649,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3650,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3651,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3652,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3653,"impl-Index%3C%26str%3E-for-DataFrame"],[3654,"impl-Index%3Cusize%3E-for-DataFrame"],[3655,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3674,"impl-Container-for-DataFrame"],[3675,"impl-DataFrame"],[3682,"impl-Container-for-DataFrame"],[3683,"impl-DataFrame"],[3721,"impl-DataFrame"],[3722,"impl-Container-for-DataFrame"],[3726,"impl-Container-for-DataFrame"],[3727,"impl-DataFrame"],[3750,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3751,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3932,"impl-Display-for-GroupByMethod"],[3933,"impl-Debug-for-GroupByMethod"],[3939,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3940,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3941,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3976,"impl-IntoIterator-for-GroupsIdx"],[3977,"impl-IntoIterator-for-%26GroupsIdx"],[3979,"impl-IntoParallelIterator-for-GroupsIdx"],[3980,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5303,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5304,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[6072,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6073,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6074,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6085,"impl-Default-for-Arc%3CT%3E"],[6086,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6087,"impl-Default-for-Arc%3CCStr%3E"],[6088,"impl-Default-for-Arc%3Cstr%3E"],[6559,"impl-Expr"],[6560,"impl-PartialEq-for-Expr"],[6563,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6564,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6582,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6583,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6584,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6587,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6588,"impl-PartialEq-for-StructArray"],[6865,"impl-Debug-for-Duration"],[6866,"impl-Display-for-Duration"],[6888,"impl-Display-for-JoinType"],[6889,"impl-Debug-for-JoinType"],[6891,"impl-Debug-for-JoinValidation"],[6892,"impl-Display-for-JoinValidation"],[6905,"impl-Display-for-Expr"],[6906,"impl-Debug-for-Expr"],[6908,"impl-Debug-for-Operator"],[6909,"impl-Display-for-Operator"],[6911,"impl-Display-for-BooleanFunction"],[6912,"impl-Debug-for-BooleanFunction"],[6913,"impl-Debug-for-CategoricalFunction"],[6914,"impl-Display-for-CategoricalFunction"],[6915,"impl-Debug-for-TemporalFunction"],[6916,"impl-Display-for-TemporalFunction"],[6917,"impl-Display-for-PowFunction"],[6918,"impl-Debug-for-PowFunction"],[6919,"impl-Display-for-StringFunction"],[6920,"impl-Debug-for-StringFunction"],[6921,"impl-Debug-for-FunctionExpr"],[6922,"impl-Display-for-FunctionExpr"],[6938,"impl-Display-for-Arc%3CT,+A%3E"],[6939,"impl-Debug-for-Arc%3CT,+A%3E"],[6940,"impl-Pointer-for-Arc%3CT,+A%3E"],[6970,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6971,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7050,"impl-From%3Cbool%3E-for-Expr"],[7051,"impl-From%3Cf64%3E-for-Expr"],[7052,"impl-From%3Ci64%3E-for-Expr"],[7054,"impl-From%3C%26str%3E-for-Expr"],[7055,"impl-From%3Ci16%3E-for-Expr"],[7056,"impl-From%3Cu32%3E-for-Expr"],[7057,"impl-From%3Cu64%3E-for-Expr"],[7058,"impl-From%3CAggExpr%3E-for-Expr"],[7059,"impl-From%3Ci32%3E-for-Expr"],[7060,"impl-From%3Cu8%3E-for-Expr"],[7061,"impl-From%3Cu16%3E-for-Expr"],[7062,"impl-From%3Ci8%3E-for-Expr"],[7063,"impl-From%3Cf32%3E-for-Expr"],[7066,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7067,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7068,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7069,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7070,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7071,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7073,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7074,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7075,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7076,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7082,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7083,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7084,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7085,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7104,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7105,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7106,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7107,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7108,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7109,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7110,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7112,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7113,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7115,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7116,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7117,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7118,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7119,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7120,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7125,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7126,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7128,"impl-From%3CArrowSchema%3E-for-Schema"],[7129,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7130,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7131,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7132,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7133,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7148,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7149,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7157,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7158,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7170,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7171,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8279,"impl-StructArray"],[8280,"impl-Array-for-StructArray"],[8288,"impl-StructArray"],[8289,"impl-Array-for-StructArray"],[8976,"impl-StructArray"],[8977,"impl-Array-for-StructArray"],[9220,"impl-LazyCsvReader"],[9221,"impl-LazyFileListReader-for-LazyCsvReader"],[9222,"impl-LazyJsonLineReader"],[9223,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9270,"impl-LazyCsvReader"],[9271,"impl-LazyFileListReader-for-LazyCsvReader"],[9272,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9273,"impl-LazyJsonLineReader"],[9313,"impl-StructArray"],[9314,"impl-Array-for-StructArray"],[9705,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9706,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9711,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9712,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10384,"impl-Debug-for-RollingFunction"],[10385,"impl-Display-for-RollingFunction"],[10414,"impl-Debug-for-RollingFunctionBy"],[10415,"impl-Display-for-RollingFunctionBy"],[10638,"impl-Add-for-%26Series"],[10639,"impl-Add%3CT%3E-for-Series"],[10640,"impl-Add%3CT%3E-for-%26Series"],[10641,"impl-Add-for-Series"],[10657,"impl-AsSeries-for-Series"],[10658,"impl-SeriesSealed-for-Series"],[10711,"impl-Div%3CT%3E-for-%26Series"],[10712,"impl-Div-for-Series"],[10713,"impl-Div%3CT%3E-for-Series"],[10714,"impl-Div-for-%26Series"],[10725,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10726,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10727,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10729,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10730,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10731,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10747,"impl-Debug-for-Series"],[10748,"impl-Display-for-Series"],[10753,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10755,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10756,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10757,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10758,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10765,"impl-FromIterator%3CString%3E-for-Series"],[10766,"impl-FromIterator%3Cf64%3E-for-Series"],[10767,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10768,"impl-FromIterator%3C%26i8%3E-for-Series"],[10769,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10770,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10771,"impl-FromIterator%3C%26str%3E-for-Series"],[10772,"impl-FromIterator%3Ci8%3E-for-Series"],[10773,"impl-FromIterator%3C%26u8%3E-for-Series"],[10774,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10775,"impl-FromIterator%3Ci64%3E-for-Series"],[10776,"impl-FromIterator%3Ci16%3E-for-Series"],[10777,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10778,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10779,"impl-FromIterator%3C%26u32%3E-for-Series"],[10780,"impl-FromIterator%3Cbool%3E-for-Series"],[10781,"impl-FromIterator%3C%26i64%3E-for-Series"],[10782,"impl-FromIterator%3Cu32%3E-for-Series"],[10783,"impl-FromIterator%3Ci32%3E-for-Series"],[10784,"impl-FromIterator%3Cu16%3E-for-Series"],[10785,"impl-FromIterator%3C%26u16%3E-for-Series"],[10786,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10787,"impl-FromIterator%3C%26f64%3E-for-Series"],[10788,"impl-FromIterator%3Cu8%3E-for-Series"],[10789,"impl-FromIterator%3Cf32%3E-for-Series"],[10790,"impl-FromIterator%3C%26f32%3E-for-Series"],[10791,"impl-FromIterator%3Cu64%3E-for-Series"],[10792,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10793,"impl-FromIterator%3C%26i32%3E-for-Series"],[10794,"impl-FromIterator%3C%26bool%3E-for-Series"],[10795,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10796,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10797,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10798,"impl-FromIterator%3C%26u64%3E-for-Series"],[10799,"impl-FromIterator%3C%26i16%3E-for-Series"],[10800,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10801,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10802,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10803,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10804,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10805,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10806,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10807,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10808,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10809,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10821,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10822,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10823,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10825,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10826,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10827,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10868,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10869,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10870,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10872,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10873,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10874,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10883,"impl-Mul-for-%26Series"],[10884,"impl-Mul%3CT%3E-for-%26Series"],[10885,"impl-Mul%3CT%3E-for-Series"],[10886,"impl-Mul-for-Series"],[10891,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10892,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10893,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10894,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10895,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10896,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10897,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10898,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10899,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10900,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10901,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10902,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10903,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10904,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10905,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10906,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10907,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10908,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10909,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10910,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10911,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10912,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10913,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10914,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10915,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10916,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10917,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10918,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10919,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10920,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10921,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10922,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10923,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10924,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10925,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10926,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10927,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10928,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10929,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10930,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10931,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10932,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10933,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10934,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10935,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10936,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10937,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10938,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10939,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10940,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10941,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10947,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10948,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10949,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10951,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10952,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10953,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10961,"impl-Rem-for-%26Series"],[10962,"impl-Rem%3CT%3E-for-%26Series"],[10963,"impl-Rem%3CT%3E-for-Series"],[10992,"impl-Sub-for-%26Series"],[10993,"impl-Sub%3CT%3E-for-%26Series"],[10994,"impl-Sub%3CT%3E-for-Series"],[10995,"impl-Sub-for-Series"],[11019,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11020,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11021,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11022,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAAwPWA+VD5gPmQ+aD5sPnA+hD6QPqQ+qD88P","e":"OzAAAAEAAOMfLAQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoAOAAFAEIAAgBGAAoAVQAHAF4ACABoAAAAawAFAHIAFgCLAA8AnAAAAJ8AAwCkAAEAqgANALoAEwDPAAoA2wAKAOcAAADpAAEA7QAdABEBFAAoARIAPAEUAFMBAQBYAR4AeQECAIABEACSAQMAmQECAJ4BAQChAQYAqQEAAK4BIQDUAQYA3QEIAOcBMgAeAhMAMwICADcCBAA9AgUARwIAAEkCGgBlAgcAcQIRAIUCDwCWAgAAmAIKAKQCDQC1AgEAvAIAAL4CAQDFAgAAyQIHANMCAQDWAgwA5AIAAOYCKAARAwAAEwMjADkDNABwAwgAfQMRAJIDXAD8AxIAGgQHACMESQBwBA8AgQQBAIQEGQCfBAAAogQUALsEAwDDBAMAyQQzAAcFAAAJBQAADwUZAC0FDAA8BQAAPgUHAEgFAwBOBQEAUgUNAGgFAQBtBQEAcwUNAIwFAQCQBQAAkwUCAJoFBQChBQMAqwULAL0FAwDDBQ4A1AUHAN4FFgD2BQcA/wUAAAEGAAADBgAABQYBAAoGEAAcBgAAHwYAACEGAwAmBgEAKQYCAC0GBwA2BgAAOAYFAEAGAQBDBgAARQYBAEgGAwBNBgMAUgYCAFYGAwBcBgAAXwYAAGcGAABsBgAAbwYBAHQGAQB3BgAAegYAAIIGAACIBgIAkwYGAJ0GEgCyBgUAugYIAMUGAwDKBgEAzgYAANAGAQDWBgUA3wYBAOgGAQD0BgAA9gYBAPkGAAD8BgAA/gYAAAIHAAAEBwAACQcMABgHAgAnBwAAKQcHADIHAgA4BwAAOgcDAD8HAQBCBwUATgcXAGcHAQBrBwQAcQcDAHgHBgCMBwMAkQcIAJsHBACiBwIApgcFAK4HAACwBwwAwQcBAMUHAQDLBwEAzgcBANEHAwDWBwAA2AcAANsHAQDfBwAA4QcBAOQHAADmBwIA6gcMAPgHAAD6BwEA/QcAAP8HAQACCAAABAgBAAcIAAAJCAEADAgBABEIAAAVCAEAGQgAABwIAAAeCAAAIAgDACUIAAAoCAgAMggBADUIBQA9CAEAQQgAAEMIAgBICAAATQgDAFIIAQBVCAAAVwgBAFoIAABcCAEAXwgAAGEIAQBkCAAAZggBAGkIAABrCAAAbggmAJYIGACwCGcAGwmSAK8JBwC5CZgAUwoHAFwKKACGCgEAiQoPAJwKAQCrCgEArgoCALIKAQC1CgEAuAoAALoKAADQCgEA0woAANsKAADeCgAA4AoGAOgKBADuCgAA8AoEAPYKAQD5ChkAGAsPACoLKwBXCwAAgwsKAJALAACSCwEAlQsEAJsLAQCgCwAAogsFAKkLAACsCwIAsQsEALcLAAC6CxAAzQsAANALDwDhCwAA5AsNAPMLDQACDAAABAwBAAgMDwAZDAAAIQwAACMMAAAoDBAAOwwAAD0MAgBCDCEAaQxlANAMLwABDQIABQ01ADwNAQA/DQgASQ0AAEsNAQBODQQAVA0BAFkNAABbDQIAXw0AAGINBABoDQQAbg0SAIINEQCVDQAAlw0CAJsNBgClDQQAqw0VAMQNAADHDQoA0w0CANsNFgD0DRAADA4BABAOAgAUDgAAFg4AABsOAwAjDgIAJw4AADYOAAA4DgAAOg4BAEEODABUDgIAWw4AAF8OAABjDgAAaA4BAHUOAQB5DgAAfw4AAIgOAQCLDgEAjw4AAJEOAQCYDgAAmg4EAKIOBgCrDgkAtg4AALsOAQC/DgQAyw4OANsOAgDfDgAA4Q4JAOwOAQDvDgMA9A4DAPkOCQAEDwcADQ8BABAPHQAvDygAWQ8GAGQPAgBpDwAAaw8AAG0PAwBzDwAAdw8HAIcPDQCWDwEAnQ8DAKIPAQCmDwIAqw8AAK0PHwDQDwwA3w8FAOYPBwDvDyMAFRAOACUQDwA3EAAAORADAEAQBgBKEA4AWxAFAGMQAABmEAgAcBABAHQQBAB6EAUAgRAAAIYQCQCREAEAlRAEAJsQAQCeEAoAqhAAAK0QAACvEAkAuhAAALwQCQDHEAQA0BAAANMQAADbEAIA4hAAAOUQAQDrEAoA9xARAAwRBwAVEQEAGBEEACERBAApEQQAMxEDADgRAAA6EQsASBEKAFURAQBZEQAAXBEAAF4RBQBlEQMAahEEAHARAwB3EQIAfREAAH8RAQCDEQAAhREEAIwRDwCdEQAAoBEBAKMRAwCpEQIArxEVAMYRCQDSEQAA1BEBANgRAADaEQEA3hEAAOARAQDkEQAA5hEEAO0RAgDxEQEA9REAAPgRAAD6EQMA/xECAAMSCAAOEgcAGBIAABwSAQAgEgAAIhIAACQSAQAnEgEAKhIBAC8SAAAxEg0AQhIFAEkSBwBTEgIAVxIGAGISAQBlEgAAZxIBAGoSBABwEgMAdRICAHkSAAB7EgQAgRIAAIMSBACJEgQAjxIBAJISAQCVEgEAmBIBAJsSAACdEgAAoBIAAKMSAgCoEgMArRIHALcSAgC+EgAAwBIFAMcSBADNEgAA0BIAANISBADYEgMA3RICAOESAADjEg0A8hIUAAgTEgAcEwgAJhMEAC4TAQAyEwAANBMFADsTBABBEwAAQxMCAEgTAABKEwAAThMBAFMTBwBcEwMAZBMGAGwTCQB5EwEAfBMGAIQTAgCJEwIAkBMFAJcTEgCsEwAArhMBALITAAC0EwEAuBMAALoTAQC+EwAAwBMDAMYTAwDLEwAAzRMBANMTCQDeEwAA4RMFAOkTAgDtE1sAShQEAFMUAABVFAAAWBQFAGAUAABnFAAAaxQAAG0UAABxFAUAexQAAH8UAACGFAAAihQAAJYUAgCaFAQAoBQAAKIUAQClFAEAqxQBAK4UBAC0FAEAvBQKAMkU9gDBFQAAwxUBAMYVAADIFQIAzhUAANIVAADWFQAA2BUAANoVAADgFQAA4xUAAOUVAQDoFQAA8hVNAEEWCgBNFtoAKRcBAC0XAQAxFwAANRcCADsXCgBJFwQAUxcAAFUXAABfFwEAYxcAAGUXAABqFwAAbBcBAHEXAQCAFwAAhhcAAIsXAgCRFwAAkxcFAJsXKgDKF/4AyxgAANAYAQDTGAMA2RgAANsYAwDjGAgA7RhjAFIZDABkGQEAaRkAAGwZAABwGQMAdRkqAKEZFQC4GQoAxhmqAHUaAAB6GgAAfBoEAIIaAACGGgAAjBoAAI4aAACXGgAAmhoAAKIaAAClGgIArBoGALQaAQC3GgAAuRoDAMEaAADEGgEAyRphACwbAAAvGwAAOxsBAF8bAABoGwAAchsAAIsbAgCPGwkAmxsFAKIbAwCrGwMAthsAALwbAADLGwAA1hsBANkbBQDiGwAA5xsAAOobBADwGwAA9hsBAPobAgAAHAUABxwCAAscAQAPHAEAEhwAABQcAAAWHAAAGxwAACQcAAAnHAEAKhwCAC8cAAAxHAEANhwBADocBABDHAEARxwAAFIcAABUHD8AlxwCAJ4cAACgHAAAohwDAKgcAACqHAAArRwAALAcAAC1HAIAuhx9ADodAAA/HQIAQx0BAMAdAADCHQYAzB0CANAdBQDYHQEA2x0CAN8dAQDiHQAA5B0AAOcdAQD0HQAA9h0AAPkdAQD8HQMAAh4CABEeAQAUHgEAHR4AAB8eAQAiHgAAJh4CACweAQAvHgAAMh4AADceAgA8HgEAQB4CAEQeAwBKHg4AXh4AAGQeAQBrHgAAbh4FAHceAAB/HgIAix4AAJUeAACbHgEAnx4AAKMeAQCmHgAAqR4AAK4eAACwHgAAsh4AALceAAC7HgAAvR4CAMQeBgDRHggA3x4AAOEeAADlHgAA6x4AAO0eBAD2HgEA+R4BAPweAAD/HgkACx8BAA4fAAARHwEAIR8AACQfAQAnHwEAMR8GAD0fAgBFHwEATB8CAFAfAQBaHwAAXB8DAGEfBQBoHwMAcR8DAHYfAAB6HwIAgB8AAIMfAACPHwAAkh8BAJUfAQCYHwMAnh8FAKUfBACwHwAAth8AALwfAAC+HwEAwx8AAMcfAADJHwAAyx8BAO4fAADzHwAA/R8DAAIgBQAKIAAAEyAAABcgAgAbIAMAIiAAACQgAQAnIAEAKiABAC0gAAAyIAMAOSAAAEQgAABGIAAASCAAAE8gBABZIAEAXiAAAGAgAABiIAAAZSAAAGcgAABtIAMAciAHAHsgAAB9IAAAgSAAAIcgAACKIAAAkCAAAJcgCgCkIAIAqSACALQgAADDIAAAxSAAAMggAgDMIAMA0iABANUgAADYIAAA3CBbADohCwBHIQAATSEKAFkhAABbIQEAXiGIAOkhAADtIXkAaiIAAGwiAwB3IgAAeiIAAH4ieAD4IgAABSMAAAwjBAASIwEAFiMAABkjAAAdIwAAIyMAACUjAAAnI3kAqCMDALEjAAC0IwEAuSMBAL4jAADAIwAAyCMAANEjAADXIwAA4iMAAOgjAAD1IwEABiQAAAgkAAALJAAADiQAABEkAAAXJAEAGiQFACQkAAAxJAAAOCQBAD0kAABFJAAASiQAAFkkAABbJAEAYyQBAGgkFACBJAEAhCRIAM8kAADRJAAA0yQBANYkAQDZJAYA4SQ3ABslBQAiJQkALSUCADMlAAA1JQMAOiUBAD0lBQBHJRIAWyUBAF4lAgBjJQAAZiUDAGslBgCCJQAAkCUCAKYlAACuJQgAuyUAAL0lDQDMJQIA0CUSAOQlAQDnJQ8A+CUYABMmAAAVJgIAGiYMACgmBwAxJgQAOCYCADwmBQBEJgAARiYMAFcmAQBbJgEAYSYBAGQmAQBnJgMAbCYAAG4mAABxJgEAdSYAAHcmAQB6JgAAfCYCAIAmDACOJgAAkCYBAJMmAACVJgEAmCYAAJomAQCdJgAAnyYBAKImAQCnJgAAqyYBAK8mAACyJgAAtCYAALYmAwC7JgAAviYIAMgmAQDLJgUA0yYBANcmAADZJgIA3iYAAOMmAwDoJgEA6yYAAO0mAQDwJgAA8iYBAPUmAAD3JgEA+iYAAPwmAQD/JgAAAScAAAQnEgAYJwYAIScAACQnEQA3JwgAQScBAEQnCABOJwAAUCcBAFYnAABYJwQAYScBAGonAgBwJwAAcicAAHwnAACLJwMAkycKAJ8nAAChJwgArCfmAJQoAQCXKBkAsigBALUoDgDGKBIA2igAANwoFwD1KAEA+SgAAPsoCwAIKQIADykAACIpAwApKQYAPSkFAEUpAABOKQAAUCkBAFcpBgBfKQAAZSkKAHkpBQCAKQAAgikDAIcpBQCPKQQAlSkBAJkpAACfKQQAqCkCAKwpCQC5KQIAvSkAAMEpAgDFKQQAzikRAOMpAQDmKQEA6ikAAOwpAADvKQIA+ykDAAIqAAAEKgMACioBAA0qLgA/KgAAQSoAAEYqAQBLKgEATioAAFQqAQBXKgMAXyoDAGoqAgBuKgAAcCoAAHMqAAB1KgEAeSoAAHsqAAB/KgAAhCoDAIkqAACMKiIAsCoOAMEqAQDFKgEAyCoBAM0qAQDSKgIA1yoBANoqAADdKgIA4yoBAOYqAADoKgAA6ioAAO4qAADxKgMA+ioAAAIrAAAEKwEABysOABcrBAAiKwAAJSsDACorAAAtKwsAOisAADwrAAA+KwQARCsWAF0rAQBhKxAAcysBAHYrBAA="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTPTTFKFFGFKPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNOONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFNHHHHHHHNHHEHNNNNNNMNNNHHNNHHNNNNNNNNNNNNNHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unpivot","unpivot2","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgs","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","BitRepr","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Large","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone_into","clone_to_uninit","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[438,"polars_core::chunked_array::arithmetic"],[466,"polars_core::chunked_array::builder"],[574,"polars_core::chunked_array::builder::list"],[728,"polars_core::chunked_array::cast"],[758,"polars_core::chunked_array::collect"],[772,"polars_core::chunked_array::float"],[774,"polars_core::chunked_array::from_iterator_par"],[778,"polars_core::chunked_array::iterator"],[815,"polars_core::chunked_array::iterator::par"],[817,"polars_core::chunked_array::metadata"],[1061,"polars_core::chunked_array::object"],[1138,"polars_core::chunked_array::object::builder"],[1161,"polars_core::chunked_array::object::registry"],[1189,"polars_core::chunked_array::ops"],[1315,"polars_core::chunked_array::ops::arity"],[1350,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1352,"polars_core::chunked_array::ops::gather"],[1355,"polars_core::chunked_array::ops::search_sorted"],[1386,"polars_core::chunked_array::ops::sort"],[1393,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1394,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1401,"polars_core::chunked_array::ops::sort::options"],[1479,"polars_core::chunked_array::temporal"],[1480,"polars_core::chunked_array::temporal::conversion"],[1483,"polars_core::config"],[1487,"polars_core::datatypes"],[2951,"polars_core::datatypes::categorical"],[3092,"polars_core::datatypes::categorical::revmap"],[3147,"polars_core::datatypes::categorical::string_cache"],[3166,"polars_core::datatypes::revmap"],[3172,"polars_core::datatypes::string_cache"],[3176,"polars_core::error"],[3241,"polars_core::error::PolarsError"],[3245,"polars_core::error::constants"],[3248,"polars_core::export"],[3256,"polars_core::fmt"],[3288,"polars_core::frame"],[3562,"polars_core::frame::explode"],[3592,"polars_core::frame::group_by"],[3832,"polars_core::frame::group_by::GroupByMethod"],[3833,"polars_core::frame::group_by::GroupsProxy"],[3835,"polars_core::frame::group_by::aggregations"],[3848,"polars_core::frame::group_by::expr"],[3851,"polars_core::frame::row"],[3948,"polars_core::functions"],[3950,"polars_core::hashing"],[3998,"polars_core::prelude"],[4580,"polars_core::prelude::PolarsError"],[4584,"polars_core::prelude::default_arrays"],[4590,"polars_core::prelude::list"],[4613,"polars_core::prelude::null"],[4644,"polars_core::prelude::revmap"],[4650,"polars_core::prelude::slice"],[4653,"polars_core::prelude::string_cache"],[4657,"polars_core::prelude::utf8"],[4661,"polars_core::random"],[4662,"polars_core::schema"],[4737,"polars_core::series"],[5148,"polars_core::series::amortized_iter"],[5172,"polars_core::series::arithmetic"],[5197,"polars_core::series::arithmetic::checked"],[5205,"polars_core::series::ops"],[5233,"polars_core::utils"],[5351,"polars_core::utils::flatten"],[5356,"dyn_clone::sealed"],[5357,"num_traits"],[5358,"num_traits::cast"],[5359,"polars_error"],[5360,"polars_core::series::arithmetic::borrowed"],[5361,"polars_core::frame::group_by::proxy"],[5362,"core::option"],[5363,"core::iter::traits::iterator"],[5364,"core::ops::function"],[5365,"core::marker"],[5366,"polars_core::datatypes::dtype"],[5367,"alloc::string"],[5368,"polars_core::datatypes::aliases"],[5369,"polars_core::series::arithmetic::borrowed::checked"],[5370,"polars_arrow::array"],[5371,"alloc::vec"],[5372,"core::iter::traits::double_ended"],[5373,"core::fmt"],[5374,"core::iter::traits::collect"],[5375,"core::result"],[5376,"polars_utils::iter::fallible"],[5377,"polars_arrow::bitmap::immutable"],[5378,"rayon::iter"],[5379,"polars_arrow::trusted_len"],[5380,"polars_core::datatypes::any_value"],[5381,"polars_utils::index"],[5382,"polars_core::chunked_array::logical::decimal"],[5383,"core::iter::traits::exact_size"],[5384,"polars_core::series::series_trait"],[5385,"core::slice::iter"],[5386,"core::iter::adapters::map"],[5387,"alloc::sync"],[5388,"core::convert"],[5389,"core::ops::range"],[5390,"polars_core::datatypes::field"],[5391,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5392,"polars_core::chunked_array::ops::rolling_window"],[5393,"ahash::random_state"],[5394,"polars_utils::hashing"],[5395,"ndarray::aliases"],[5396,"either"],[5397,"core::any"],[5398,"polars_core::chunked_array::arithmetic::numeric"],[5399,"polars_core::chunked_array::builder::string"],[5400,"polars_arrow::array::binview"],[5401,"polars_core::chunked_array::builder::boolean"],[5402,"polars_core::chunked_array::builder::null"],[5403,"polars_core::chunked_array::builder::primitive"],[5404,"core::clone"],[5405,"polars_core::chunked_array::builder::list::anonymous"],[5406,"polars_core::chunked_array::builder::list::boolean"],[5407,"polars_core::chunked_array::builder::list::primitive"],[5408,"polars_core::chunked_array::builder::list::binary"],[5409,"polars_core::chunked_array::builder::list::null"],[5410,"alloc::boxed"],[5411,"core::hash"],[5412,"polars_arrow::array::boolean"],[5413,"polars_core::chunked_array::metadata::env"],[5414,"bitflags::iter"],[5415,"std::fs"],[5416,"std::sync::mutex"],[5417,"polars_arrow::datatypes"],[5418,"polars_arrow::bitmap::utils::iterator"],[5419,"polars_arrow::bitmap::utils::zip_validity"],[5420,"polars_arrow::offset"],[5421,"polars_arrow::array::static_array"],[5422,"core::error"],[5423,"polars_arrow::array::primitive"],[5424,"polars_arrow::legacy::array::slice"],[5425,"polars_row::row"],[5426,"chrono::naive::datetime"],[5427,"alloc::borrow"],[5428,"polars_arrow::array::static_array_collect"],[5429,"bytemuck::zeroable"],[5430,"polars_core::chunked_array::logical::categorical"],[5431,"polars_core::chunked_array::logical::categorical::merge"],[5432,"polars_core::chunked_array::logical"],[5433,"polars_core::datatypes::time_unit"],[5434,"polars_arrow::types"],[5435,"polars_arrow::datatypes::physical_type"],[5436,"core::borrow"],[5437,"polars_arrow::pushable"],[5438,"polars_core::datatypes::into_scalar"],[5439,"core::cmp"],[5440,"polars_core::chunked_array::logical::categorical::builder"],[5441,"polars_core::chunked_array::logical::categorical::revmap"],[5442,"polars_core::chunked_array::logical::categorical::string_cache"],[5443,"polars_error::warning"],[5444,"polars_core::series::from"],[5445,"polars_utils::aliases"],[5446,"polars_arrow::datatypes::schema"],[5447,"polars_core::chunked_array::ndarray"],[5448,"polars_arrow::array::struct_"],[5449,"polars_arrow::record_batch"],[5450,"polars_utils::idx_vec"],[5451,"rayon::iter::plumbing"],[5452,"polars_core::frame::group_by::into_groups"],[5453,"core::iter::adapters::copied"],[5454,"core::iter::adapters::zip"],[5455,"polars_arrow::legacy::kernels::rolling"],[5456,"polars_utils::float"],[5457,"polars_arrow::types::native"],[5458,"polars_core::frame::group_by::aggregations::agg_list"],[5459,"polars_core::frame::row::av_buffer"],[5460,"polars_arrow::array::binary"],[5461,"polars_core::hashing::identity"],[5462,"hashbrown::map"],[5463,"polars_core::hashing::vector_hasher"],[5464,"core::alloc"],[5465,"std::os::fd::owned"],[5466,"std::os::fd::raw"],[5467,"core::mem::maybe_uninit"],[5468,"polars_arrow::legacy::kernels::time"],[5469,"core::ffi::c_str"],[5470,"core::default"],[5471,"polars_arrow::scalar"],[5472,"std::io::error"],[5473,"alloc::collections"],[5474,"simdutf8::basic"],[5475,"regex::error"],[5476,"std::path"],[5477,"alloc::ffi::c_str"],[5478,"std::ffi::os_str"],[5479,"polars_arrow::legacy::array::default_arrays"],[5480,"polars_arrow::buffer::immutable"],[5481,"polars_arrow::array::list"],[5482,"polars_core::named_from"],[5483,"polars_arrow::legacy::array"],[5484,"polars_core::chunked_array::ops::aggregate"],[5485,"polars_core::chunked_array::ops::aggregate::quantile"],[5486,"polars_arrow::legacy::index"],[5487,"core::pin"],[5488,"core::io::borrowed_buf"],[5489,"std::io"],[5490,"polars_core::chunked_array::ops::aggregate::var"],[5491,"alloc::collections::btree::map"],[5492,"polars_arrow::legacy::array::list"],[5493,"polars_arrow::legacy::array::null"],[5494,"polars_arrow::bitmap::mutable"],[5495,"polars_arrow::array::utf8"],[5496,"polars_core::series::iterator"],[5497,"alloc::rc"],[5498,"polars_arrow::legacy::utils"],[5499,"polars_arrow::legacy::trusted_len::rev"],[5500,"smartstring::config"],[5501,"smartstring"],[5502,"polars_core::chunked_array::object::extension"],[5503,"polars_error::constants"],[5504,"polars_arrow::legacy::prelude"],[5505,"polars_arrow::legacy::array::utf8"],[5506,"polars_core::utils::any_value"],[5507,"polars_core::utils::schema"],[5508,"polars_core::utils::supertype"],[5509,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Db{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Dd}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Df}}Ef}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{Ej}}}}}}}Bn}{{{f{{l{c}}}}}ElBn}{{{f{{l{c}}}}}{{f{{F`{En}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{F`{En}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Db}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fb}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fb}bBnBn}{{{f{{l{c}}}}}{{`{{Fd{}{{B`{{f{Db}}}}}}}}}n}{{}{{l{c}}}Bn}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{Ejb}{{{f{Bh{l{c}}}}}bBn}1{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}}{{f{{Ff{c}}}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fh}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{Ej}}}Bn}`{{{f{{l{c}}}}{f{BhFj}}}Fln}{{{f{{l{Al}}}}{f{BhFj}}}Fl}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Fn{{Bn{}{{G`{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}Gb{{Bn{}{{G`{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{G`{}}}}Bn}Gb}{{{f{Bf}}{F`{En}}}{{l{c}}}Bn}{{{f{Bf}}{F`{En}}Df}{{l{c}}}Bn}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{l{e}}}{{Gb{}{{B`{An}}}}}n}{c{{l{e}}}{{Gb{}{{B`{{Gj{F`{An{Gh}}}}}}}}}n}{c{{l{Al}}}{{Gb{}{{B`{{An{d}}}}}}}}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}31{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gn{}{{B`{An}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`{An{Gh}}}{{l{c}}}n}{{{f{Bf}}Ej}{{l{c}}}n}0{{{f{{l{c}}}}Ej}{{l{c}}}Bn}{{{f{Bf}}Ej{f{Df}}}Dj}{{{f{{l{c}}}}Ej}AnBn}{{{f{{l{c}}}}Ej}{{Af{H`}}}n}{{{f{{l{c}}}}Ej}H`n}{{{f{{l{j}}}}Ej}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hb}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HdBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}{{An{f}}}Bn}0{{{f{{l{{Hf{c}}}}}}Ej}{{An{{f{Hh}}}}}Hj}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EjdEj}AjEd}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}018{{{f{{l{c}}}}{An{Ej}}}{{l{c}}}Bn}{{}Ej}0{{EjHl{An{Hn}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{ce{}{}}0{{{l{I`}}{An{Ej}}Ej}{{Af{Ib}}}}{{{l{I`}}{An{Ej}}Ej}Ib}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IdIf{Ih{}{{B`{}}}}FdGn}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FhIj}000{{{f{{l{c}}}}}FhBn}02{{{f{{l{c}}}}}IlBn}{{{f{{l{c}}}}}{{`{{In{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{l{c}}}}}{{Jf{{Jb{En}}{Jd{{f{En}}}{{C`{{An{{f{Gh}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{Ej}}}Bn}{{{f{{l{c}}}}}{{Jh{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{c}}}}}EjBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`Jj}}00{{{f{{l{c}}}}Ej}{{l{c}}}Bn}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}01{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jln}{{{f{{l{Al}}}}}{{An{Jn}}}}{{{f{{l{c}}}}}{{An{Jn}}}n}{{{f{{l{c}}}}}{{An{Jn}}}Ed}{{{f{{l{c}}}}}JlEd}{{{f{Bh{l{c}}}}{Ff{c}}}bBn}`{{{f{{l{c}}}}}{{An{{f{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{f{{K`{{Ff{c}}}}}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{K`{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{K`{{Ff{c}}}}}Bn};:{{{f{{l{c}}}}}{{An{Gj}}}n}:{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{D`}}}}EjEj}{{l{Al}}}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}EjBn}{{{f{{l{c}}}}}{{Af{Ej}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Kb}}}{{Kd{{Db{{An{J`}}}}}}}}{{{f{Bf}}c}{{l{Kf}}}{{Kd{{Db{{An{Kh}}}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kd{{Db{{An{Hl}}}}}}}}{{{f{Bf}}{Kj{Kh}}}{{l{Kf}}}}{{{f{Bf}}c}{{l{Kl}}}{{Kd{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}{{l{Kl}}}{{Kd{{Db{Hn}}}}}}{{{f{Bf}}c}{{l{Kb}}}{{Kd{{Db{J`}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kd{{Db{{An{Jn}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kd{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}{Kj{J`}}}{{l{Kb}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kd{{Db{L`}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kd{{Db{Jn}}}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kd{{Db{{An{L`}}}}}}}}{{{f{Bf}}{Kj{L`}}}{{l{Kn}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kd{{Db{Hl}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kd{{Db{{F`{D`}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kd{{Db{d}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kd{{Db{{An{Dh}}}}}}}}{{{f{Bf}}{Kj{Hn}}}{{l{Kl}}}}{{{f{Bf}}c}{{l{Kf}}}{{Kd{{Db{Kh}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kd{{Db{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kd{{Db{Dh}}}}}}{{{f{Bf}}}{{l{{Hf{c}}}}}Hj}{{{f{{l{c}}}}EjEj}{{l{c}}}n}{{{f{Bf}}{F`{c}}}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}{F`{c}}Gh}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}F`}{{l{c}}}n}{{{K`{Lb}}{F`{En}}}{{l{c}}}Bn}{{{K`{Lb}}{F`{En}}HbHb}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}01{{{f{{l{c}}}}}EjBn}``{{{f{{l{Dd}}}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{c}}}}}Jln}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JnLh}{{Af{{An{Jn}}}}}Ed}{{{f{{l{c}}}}JnLh}{{Af{Jl}}}Ed}{{{f{Bf}}EjJn}{{Af{{l{Al}}}}}}{{{f{Bf}}EjJnJn}{{Af{{l{c}}}}}n}{{{f{Bf}}Ej}{{l{c}}}n}{{{f{Bf}}EjJnJn}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Lb}}}Bn}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Lj}{{Af{Ad}}}n}{{{f{{l{c}}}}Eje}{{Af{{l{c}}}}}Ij{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Jndd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Ejdd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fh}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}Hb}bBn}{{{f{Bh{l{c}}}}Il}bBn}{{{f{{l{c}}}}J`}{{l{c}}}n}{{{f{{l{c}}}}J`An}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}J`Ej}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}J`}{{Gj{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}D`}{{An{Jn}}}n}{{{f{{l{c}}}}D`}JlEd}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{Hb}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jln}{{{f{{l{c}}}}{An{Ej}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Kd{{Db{Hb}}}}Ll}}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}{{Kd{{Db{Hb}}}}Ll}}`{{{f{{l{c}}}}dM`}{{F`{{F`{Mb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{Dd}}}}Ej}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{c}}}}}{{Af{Md}}}n}{{{f{{l{j}}}}}{{Af{Mf}}}}{{{f{c}}}e{}{}}{{{f{{l{Cn}}}}}Mh}{{{f{{l{c}}}}}{{F`{An}}}n}{{{f{{l{c}}}}}{{Mj{F`{F`{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{c{{Gd{e}}}{}{}}0{{{f{Bf}}g}{{Gd{{l{i}}e}}}Fn{}{{Gb{}{{B`{{Gd{ce}}}}}}}{{Bn{}{{G`{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}Ej}{}Bn}{{{f{{l{c}}}}D`}{{An{Jn}}}n}{{{f{{l{c}}}}D`}JlEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{c}}}}{F`{En}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Db{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Il}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}3201{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}453210453276542310543210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}e{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}g{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhNj}}}b}{{{f{Bh{Nl{c}}}}}b{NnLl}}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{Bh{Nl{c}}}}{An{e}}}b{NnLl}{{Kd{c}}}}{{{f{BhNj}}{An{c}}}b{}}{{{f{BhNj}}c}b{}}{{{f{Bh{Nl{c}}}}e}b{NnLl}{{Kd{c}}}}{{{f{BhO`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Nl{c}}}}}{{Nl{c}}}{NnLl}}{{{f{O`}}}O`}{{{f{Ob}}}Ob}{{{f{{Od{c}}}}}{{Od{c}}}{nOf}}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000{Ej{{f{c}}}{}}000{Ej{{f{Bhc}}}{}}000{Ejb}000{Nj{{l{c}}}Bn}{{{Nl{Bf}}}Mh}{{{Nl{{Db{D`}}}}}Eb}{OhMh}{OjEb}{O`Fh}`{{{Od{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}Ol{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Ol{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Db{c}}}}}Ol{}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Ol{}}{{}Ej}000{ce{}{}}000`{{{f{Bf}}Ej}{{Nl{c}}}{NnLl}}{{{f{Bf}}Ej}O`}{{{f{Bf}}Ej}Ob}{{{f{Bf}}Ej}{{Od{c}}}n}{{{f{BhNj}}}b}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}000;;;;````````{{{f{BhOn}}{f{Fn}}}b}{{{f{BhOn}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}c}b{{Bd{}{{B`{{An{d}}}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{An}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{}}}}Gn}}{{{f{BhA@f}}}b}54{{{f{BhA@h}}}b}{{{f{BhA@j}}}b}{{{f{BhA@b}}}b}{{{f{BhA@l}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{BhOn}}{An{{f{Fn}}}}}b}{{{f{BhOn}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhA@f}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{An{{f{Db}}}}}bn}{{{f{BhA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BhOn}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@`}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@h}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@j}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@l}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{A@d{c}}}}{f{Db}}}bn}{{{f{BhA@h}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gn}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{An{{f{{Db{D`}}}}}}}}}}Gn}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{f{{Db{D`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}On}{{}A@`}{Ej{{f{c}}}{}}000000{Ej{{f{Bhc}}}{}}000000{Ejb}000000{{{f{A@h}}}d}{{{f{A@j}}}d}{{{f{A@b}}}d}{{{f{{A@d{c}}}}}dn}{{{f{A@f}}}d}{{{f{A@h}}}{{f{Lb}}}}{{{f{A@j}}}{{f{Lb}}}}{{{f{A@b}}}{{f{Lb}}}}{{{f{{A@d{c}}}}}{{f{Lb}}}n}{{{f{A@f}}}{{f{Lb}}}}{{{f{BhOn}}}Dj}{{{f{BhA@`}}}Dj}{{{f{BhA@l}}}Dj}{{{f{BhA@f}}}Dj}{cc{}}000000{{{f{Df}}EjEj{f{Bf}}}{{Af{{A@n{A@f}}}}}}{{}Ej}000000{{{f{BhA@h}}}En}{{{f{BhA@j}}}En}{{{f{BhA@b}}}En}{{{f{Bh{A@d{c}}}}}Enn}{{{f{BhA@f}}}En}{ce{}{}}000000{{{f{Bf}}Ej{An{Df}}}On}{{{f{Bf}}Ej{An{Df}}}A@`}{{{f{Bf}}EjEj}A@h}{{{f{Bf}}EjEj}A@j}{{{f{Bf}}EjEj}A@b}{{{f{Bf}}Ej}A@l}{{{f{Bf}}EjEjDf}{{A@d{c}}}n}{{{f{Bf}}EjEjDfDf}{{A@d{c}}}n}{c{{Gd{e}}}{}{}}0000000000000{{{f{c}}}Ml{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ef}}}Ef}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}Ef}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{Ef}}{f{Ef}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ef}}{f{BhFj}}}Fl}{cc{}}{{{f{Ef}}{f{Bhc}}}bAA`}{{}Ej}{ce{}{}}{{{f{Ef}}}d}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4``{{AAb{f{Bf}}}{{l{c}}}Bn}{{AAd{f{{l{c}}}}}{{l{c}}}Bn}10{{AAd{f{Bf}}Df}{{l{c}}}Bn}0{{AAb{f{Bf}}}{{Gd{{l{c}}e}}}Bn{}}{{AAd{f{{l{c}}}}}{{Gd{{l{c}}e}}}Bn{}}10{{AAd{f{Bf}}Df}{{Gd{{l{c}}e}}}Bn{}}0`{AAfAAf}``{{AAh{f{Bf}}Df}e{}{{AAj{c}}}}{{e{f{Bf}}Df}AAj{}{{Gl{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{Ejb}0{cc{}}0{{}Ej}0{ce{}{}}000{{{f{AAl}}}AAn}{{{f{BhAAn}}}{{An{c}}}{}}{{{f{Bh{AB`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AB`{c}}}}}{{An{e}}}Fd{}}`{{{f{AAn}}}{{Gj{Ej{An{Ej}}}}}}{{{f{{AB`{c}}}}}{{Gj{Ej{An{Ej}}}}}Bd}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}088`````````````````````{{{f{c}}h}b{}}000{{}Fb}{{}Hd}{{FbFb}Fb}{{HdHd}Hd}{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}3210{{{f{Fb}}}L`}0{{{f{Hd}}}D`}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{{Ff{c}}}}}{{Ff{c}}}Bn}{{{f{ABb}}}ABb}{{{f{Fb}}}Fb}{{{f{Hd}}}Hd}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000000{{{f{BhABd}}}b}{FbFb}{HdHd}{{{f{Fb}}Fb}d}{{{f{Hd}}Hd}d}{{}{{Ff{c}}}Bn}{{}Fb}{{}Hd}{Ej{{f{c}}}{}}0000{Ej{{f{Bhc}}}{}}0000{{FbFb}Fb}{{HdHd}Hd}{{}d}{{{f{ABf}}}{{An{Hb}}}}{{{f{{Ff{c}}}}}{{An{Hb}}}Bn}{{{Ff{c}}Hb}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hb}}}{{Ff{c}}}Bn}{Ejb}0000;:5{{{f{Fb}}{f{Fb}}}d}{{{f{Hd}}{f{Hd}}}d}7{{{f{BhFb}}c}b{{Gb{}{{B`{Fb}}}}}}{{{f{BhHd}}c}b{{Gb{}{{B`{Hd}}}}}}{{{Ff{c}}d}{{Ff{c}}}Bn}{{{Ff{c}}{An{d}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}Fb}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}Fb}{{Ff{e}}}BnBn}{{{Ff{c}}Hd}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hd}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{f{BhFj}}}FlBn}{{{f{ABb}}{f{BhFj}}}Fl}{{{f{Fb}}{f{BhFj}}}Fl}0000{{{f{Hd}}{f{BhFj}}}Fl}0000{cc{}}0000{L`{{An{Fb}}}}{D`{{An{Hd}}}}{L`Fb}0{D`Hd}010{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}0{cFb{{Gb{}{{B`{Fb}}}}}}{cHd{{Gb{}{{B`{Hd}}}}}}{{{f{Bf}}}{{An{Fb}}}}{{{f{Bf}}}{{An{Hd}}}}{{{f{{Ff{c}}}}}{{An{Hb}}}Bn}{{{f{{Ff{c}}}}}dBn}{{{f{Hd}}}d}{{{f{ABf}}}Hd}{{{f{{Ff{c}}}}}HdBn}0{{{f{{Ff{c}}}}}{{An{f}}}Bn}0{{{f{Hd}}}Il}{{}Ej}0000{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}{{FbFb}Fb}{{HdHd}Hd}{{{f{Fb}}Fb}d}{{{f{Hd}}Hd}d}{ce{}{}}0000{Fbc{}}{Hdc{}}{{{f{Fb}}}d}?{{{f{{Ff{c}}}}}dBn}1{{{f{Hd}}}d}{{{f{{Ff{c}}}}}IlBn}22{{{f{Fb}}}{{ABh{Fb}}}}{{{f{Hd}}}{{ABh{Hd}}}}{{{f{Fb}}}{{ABj{Fb}}}}{{{f{Hd}}}{{ABj{Hd}}}}{{}d}{{}{{f{{ABn{ABl}}}}}}{{{f{ABf}}}{{An{Jl}}}}{{{Ff{c}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}}{{An{Jl}}}Bn}{{{Ff{c}}An}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{Ff{c}}}{{AC`{c}}}Bn}4321{FbFb}{HdHd}{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}{{{f{BhFb}}Fbd}b}{{{f{BhHd}}Hdd}b}{{{f{Bh{Ff{c}}}}{An{Hb}}}bBn}{{{f{Bh{Ff{c}}}}d}bBn}{{{f{BhHd}}d}b}{{{f{Bh{Ff{c}}}}Hd}bBn}{{{f{Bh{Ff{c}}}}An}bBn}033{{{f{Bh{Ff{c}}}}Il}bBn}{{{f{BhHd}}Il}b}{{{Ff{c}}Il}{{Ff{c}}}Bn}{{{Ff{c}}{An{Il}}}{{Ff{c}}}Bn}{{FbFb}Fb}{{HdHd}Hd}>=10{{{f{c}}}e{}{}}000?>{c{{Gd{e}}}{}{}}000000000{{{f{c}}}Ml{}}000043{ce{}{}}0000{ABdABd}````{{{f{c}}h}b{}}{{{f{{ACb{c}}}}Ej}{{Gj{{ACb{c}}{ACb{c}}}}}Hj}{e{{ACb{c}}}Hj{{Gb{}{{B`{{An{{f{c}}}}}}}}}}{e{{ACb{c}}}Hj{{Gb{}{{B`{{f{c}}}}}}}}{{ACde}g{}{{Gb{}{{B`{c}}}}}{}}0{{{f{Hh}}}{{f{ACf}}}}{{{f{{ACb{c}}}}}{{f{ACf}}}Hj}{{{f{Bh{ACb{c}}}}}{{f{BhACf}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ACb{c}}}}Ej}dHj}{{{f{{ACb{c}}}}}{{ACb{c}}}{HjOf}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{ACb{c}}}}}{{f{ACd}}}Hj}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{{f{Hh}}}}{f{{f{Hh}}}}}d}{{{f{Hh}}{f{Hh}}}d}{{{f{{ACb{c}}}}{f{BhFj}}}Fl{HjACh}}{cc{}}{{EjACd}{{ACb{c}}}Hj}{{{f{{ACb{c}}}}Ej}{{An{{f{c}}}}}Hj}{{}ACd}{{{f{Gh}}{f{{ACb{c}}}}{f{{ACb{c}}}}}{{ACb{c}}}Hj}{{ACd{f{Gh}}cc}{{ACb{e}}}{}Hj}{{{f{Gh}}{f{{ACb{c}}}}e}{{ACb{c}}}Hj{}}{{{f{Gh}}c{f{{ACb{e}}}}}{{ACb{e}}}{}Hj}{{}Ej}{ce{}{}}{{{f{{ACb{c}}}}}eHj{}}{{{f{{ACb{c}}}}Ej}dHj}0{{{f{c}}Ej}d{}}{{{f{{ACb{c}}}}}{{ACl{egACj}}}Hj{}{}}{{{f{{ACb{c}}}}}{{ACl{{f{c}}{ACn{c}}ACj}}}Hj}{{{f{{ACb{c}}}}}EjHj}0`{db}{{{f{Bh{ACb{c}}}}{An{Gh}}}bHj}{{{f{Bh{ACb{c}}}}EjEj}bHj}{{{f{c}}EjEj}e{}{}}01{{{f{{ACb{c}}}}Ej}{{Gj{{A@n{Fn}}{A@n{Fn}}}}}Hj}0{{{f{Hh}}}{{A@n{Hh}}}}{{{f{{ACb{c}}}}}{{A@n{Fn}}}Hj}{{{f{c}}}e{}{}}{g{{Gd{{ACb{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{An{{f{c}}}}e}}}}}}}}{g{{Gd{{ACb{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{f{c}}e}}}}}}}}{{ACdg}{{Gd{ie}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}{}}0{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{Hh}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ACb{c}}}}}{{An{{f{Gh}}}}}Hj}{{{f{{ACb{c}}}}Ej}{{f{c}}}Hj}{{{f{{ACb{c}}}}Ej}eHj{}}1{{{f{{ACb{c}}}}}{{f{{K`{{F`{c}}}}}}}Hj}{{{f{{ACb{c}}}}}{{ACn{c}}}Hj}{{{f{{ACb{c}}}}}eHj{}}{ce{}{}}{{{ACb{c}}{An{Gh}}}{{ACb{c}}}Hj}{{{f{{ACb{c}}}}{An{Gh}}}{{A@n{Fn}}}Hj}1`{{{f{Bh{AD`{c}}}}}bHj}0{{{f{Bh{AD`{c}}}}{An{c}}}bHj}{{{f{Bh{AD`{c}}}}{f{ACf}}}bHj}{{{f{Bh{AD`{c}}}}c}bHj}{{{f{Bh{AD`{c}}}}{f{ACf}}}{{Af{b}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AD`{c}}}Hj}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{AD`{c}}}{{ADb{c}}}Hj}{cc{}}{{}Ej}{ce{}{}}{{{f{Bf}}Ej}{{AD`{c}}}Hj}{{{f{Bh{AD`{c}}}}}AdHj}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4````{{{f{BhADd}}}b}{{{f{BhADd}}{An{{f{ACf}}}}}b}{{{f{BhADd}}{f{ACf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{ADf}}{f{BhFj}}}Fl}<{{{f{Bf}}Ej}{{A@n{ADd}}}}{{}ADh}{{}ACd}>={{}d}`{{ADjADhACd}b}{{{f{BhADd}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ADn{}{{ADl{c}}}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AE`}}{f{Cb}}}AE`}{{{f{AE`}}{f{Cb}}}{{l{c}}}Bn}{{{f{{ADn{}{{ADl{c}}}}}}i{f{Bh{Db{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{ADn{}{{ADl{c}}}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AEb}}Dl}Dn}{{{f{AEb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AEd}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AEf}}{f{Df}}}{{Af{Ad}}}}0{{{f{AEf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AEh}}}AEh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{AEh}}{f{AEh}}}d}{{{f{{AEj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEl}}}{{Af{Ad}}}}{{{f{AEl}}}{{Af{{Gj{Ad{AEn{J`}}}}}}}}`{{{f{AF`}}c}{{Af{AF`}}}{}}{{{f{AFb}}{f{Fh}}}{{Af{{l{c}}}}}Bn}`{{{f{AEh}}{f{BhFj}}}Fl}{cc{}}`{{{f{Bf}}cEj}AFd{}}{{{f{Bf}}Ej}AFf}`{{{f{AFh}}Ej}{{Af{H`}}}}{{{f{AFh}}Ej}H`}::{{{f{AEh}}{f{Bhc}}}bAA`}{{}Ej}{ce{}{}}{{{f{AFj}}}{{Af{Fh}}}}{{{f{AFl}}}{{Af{Fh}}}}??{{{f{AFn}}}{{An{c}}}{}}{{{f{AFn}}}{{An{Jn}}}}{{{f{AG`}}}{{An{c}}}{}}2{{{f{AFn}}}{{An{{Gj{cc}}}}}{}}{{{f{AEd}}}{{Af{Ej}}}}{{{f{AGb}}EjEj}{{l{c}}}Bn}{{{f{{AEj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEl}}}{{Af{{AEn{J`}}}}}}{{{f{AG`}}JnLh}{{Af{{An{c}}}}}{}}{{{f{AGd}}}AGd}{{{f{AGf}}{f{Cb}}Lj}{{Af{Ad}}}}{{{f{AGh}}c{An{e}}}{{Af{AGh}}}{{Gb{}{{B`{Hb}}}}}{}}{{{f{AGh}}ci}{{Af{AGh}}}{{Gb{}{{B`{Hb}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AGh}}{f{Fh}}{An{c}}}{{Af{AGh}}}{}}{{{f{AGj}}J`}{{l{c}}}Bn}{{{f{AGl}}J`c}{{l{e}}}{}Bn}`{{{f{AEb}}d}{{l{c}}}Bn}{{{f{AEb}}Dl}{{l{c}}}Bn}{{{f{AGn}}D`}{{An{Jn}}}}{{{f{AFn}}}{{An{c}}}{}}{{{f{AH`}}{f{c}}}{{Af{AH`}}}Ll}{{{f{AHb}}{f{c}}}AHbLl}{{{f{AHd}}}{{F`{{f{{Db{D`}}}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{AEd}}}{{Af{AEd}}}}8{ce{}{}}`{{{f{AHf}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AHh{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FnAHj}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFn{{Ch{}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gd{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AHl{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBnFnAHn{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gd{{l{m}}i}}}BnBnFnAHn{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gd{{l{c}}g}}}BnBnAHn{{Ch{ff}{{C`{{Gd{{A@n{Fn}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gd{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gd{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{FnAHj}AHn{{Ch{f}{{C`{{Gd{eg}}}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AI`{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAI`Bn}{{{f{{l{c}}}}g}{{l{i}}}BnFn{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{l{c}}g}{{l{i}}}BnFn{{Ch{}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FnAHj}{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}0{{{f{{l{c}}}}}Ejn}0{{IlIl}Il}{{{f{Dn}}Hb}{{Af{b}}}}{{{f{{AIb{Hb}}}}Hb}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAIdd}{{F`{Hb}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AId}}}AId}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}AId}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{AId}}{f{AId}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AId}}{f{BhFj}}}Fl}{cc{}}{{{f{AId}}{f{Bhc}}}bAA`}{{}Ej}{ce{}{}}{{{f{{Db{f}}}}cHbe}{{F`{Hb}}}{{Bd{}{{B`{An}}}}}{{Cb{fEjf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4`{{Ej{f{Bh{F`{d}}}}}b}```{{{f{AIf}}EjEj}AIf}0{{Ej{f{{Db{Ad}}}}{f{BhE`}}}{{Af{{AIh{Dn}}}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIj}}}}{{{f{Bf}}{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIl}}}}{{{f{Bf}}{f{{Db{Ad}}}}}{{Af{AIl}}}}{{{f{Ad}}}{{Af{En}}}}{{{f{{Db{Ad}}}}}{{Af{AIj}}}}{{{f{{Db{Ad}}}}}{{Af{AIl}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}Dl}{{}E`}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0``{Ejb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFj}}}Fl}{{{f{E`}}{f{BhFj}}}Fl}{cc{}}{{{f{E`}}}Dl}{{{f{Dl}}}E`}2{{{f{Dl}}{f{Bhc}}}bAA`}{{{f{E`}}{f{Bhc}}}bAA`}{{}Ej}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AIf}}EjEj}AIf}0{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{Gb{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AInJ`}00{{}d}>>0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{Ib}}{f{Ib}}}c{}}{{{f{Fh}}{f{Fh}}}c{}}{{FhFh}c{}}{{{f{Mh}}{f{Bf}}}c{}}{{MhMh}c{}}{{{f{Mh}}{f{Mh}}}c{}}{{{f{Eb}}{f{{Db{D`}}}}}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{EbEb}c{}}{{{f{H`}}{f{H`}}}H`}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Mh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Fh}}{f{Aj}}}Ad}{{{f{Mh}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{ADb{c}}}}{f{Aj}}}AdHj}{{{f{Fh}}}d}{{{f{Fh}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AJb{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{AJb{{Db{D`}}}}}}}}}}Cd}}{{{f{{ADb{c}}}}e}{{ADb{c}}}Hj{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AJd}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AJf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fh}}{f{Cb}}}Fh}{{{f{Mh}}{f{Cb}}}Mh}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Fh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Mh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{{Db{D`}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{ADb{c}}}}g{f{Bh{Db{e}}}}}bHj{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{d}{{C`{d}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{f{Bf}}}{{C`{{AJb{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Db{D`}}}}}{{C`{{AJb{{Db{D`}}}}}}}}Cd}}{{{f{{ADb{c}}}}e}{{ADb{c}}}Hj{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Fh}}Dl}Dn}{{{f{Mh}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AIl}}Dl}Dn}{{{f{Fh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Mh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AIl}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Fh}}}{{Af{Dn}}}}{{{f{Mh}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{ADb{c}}}}}{{Af{Dn}}}Hj}{eAJh{}{{Gb{}{{B`{c}}}}}}0{{ACde}AJj{}{{Gb{}{{B`{c}}}}}}0{{{f{Jl}}}H`}{{{f{Mh}}}Eb}{{{f{H`}}}H`}{{{f{Df}}}{{f{Df}}}}{{{f{Lb}}}{{f{Df}}}}{{{f{AJl}}}{{f{Df}}}}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}{{An{{f{{Db{c}}}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{Fh}}{f{Fh}}}c{}}{{FhFh}c{}}0101{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{A@n{Df}}}}{{{f{AKh}}{f{AKh}}c}{{Af{AKh}}}AKj}{{{f{AKl}}{f{Df}}}{{Af{Ad}}}}0{{{f{H`}}{f{Df}}}H`}{{{f{Df}}Df}Df}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AIl}}{f{Df}}}{{Af{Ad}}}}{{{f{AKl}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ib}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AIl}}{f{Df}}Ef}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}0000{{{f{AJd}}{f{Ad}}}{{Af{Ad}}}}{{{f{AJf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AKn{ce}}}}}{{AKn{ce}}}BnBn}{{{f{Jl}}}Jl}{{{f{AL`}}}AL`}{{{f{H`}}}H`}{{{f{ALb}}}ALb}{{{f{Df}}}Df}{{{f{Lb}}}Lb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{Kn}}}Kn}{{{f{Kl}}}Kl}{{{f{ALj}}}ALj}{{{f{ALl}}}ALl}{{{f{Kf}}}Kf}{{{f{Kb}}}Kb}{{{f{Cl}}}Cl}{{{f{Cj}}}Cj}{{{f{ALn}}}ALn}{{{f{AM`}}}AM`}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{AMb}}}AMb}{{{f{Al}}}Al}{{{f{AMd}}}AMd}{{{f{AMf}}}AMf}{{{f{AMh}}}AMh}{{{f{AMj}}}AMj}{{{f{ACd}}}ACd}{{{f{AMl}}}AMl}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{c}}}b{}}0000000000000000000000000000000000000000000000000000{{{f{BhLb}}Df}b}{AMne{}{{AJh{c}}AHj}}0{{AMnACd}e{}{{AJj{c}}AHj}}0{{{f{Df}}}d}00{AN`Df}{{{f{Lb}}}{{f{Df}}}}{{}H`}{{}ALb}{{}Df}{{}ACd}{{{f{{AKn{ce}}}}}{{f{g}}}BnBn{}}{Ej{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bh{AKn{ce}}}}}{{f{Bhg}}}BnBn{}}{Ej{{f{Bhc}}}{}}0000000000000000000000000000000000{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{Ejb}0000000000000000000000000000000000{{{f{AKl}}}{{f{Df}}}}{{{f{Ib}}}{{f{Df}}}}{{{f{Jl}}}{{f{Df}}}}{{{f{H`}}}Df}`{{{f{H`}}{f{H`}}}d}{{{f{ALb}}{f{ALb}}}d}{{{f{Df}}{f{Df}}}d}{{{f{Df}}{f{ACd}}}d}{{{f{Lb}}{f{Lb}}}d}{{{f{ALd}}{f{ALd}}}d}{{{f{ACd}}{f{ACd}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{H`}}{f{H`}}d}d}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}543201{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gj{Ad{AEn{J`}}}}}}}}{{{f{{AKn{ce}}}}}LbBnBn}{{{f{Fh}}d}{{Af{Fh}}}}{{{f{Eb}}{f{{Db{D`}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Fh}}}{{Af{Dj}}}}{{{f{Fh}}{f{Fh}}}{{Af{{l{Al}}}}}}{{{f{Mh}}{f{Fh}}}{{Af{{l{Dd}}}}}}{{{f{Eb}}{f{Fh}}}{{Af{{l{Cn}}}}}}{{{f{AIl}}{f{Fh}}}{{Af{AIl}}}}{{{f{{ADb{c}}}}{f{Fh}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{AKj{f{ANb}}{f{ANb}}}{{Af{ANb}}}}{{{f{Dj}}{f{BhFj}}}Fl}{{{f{Mh}}{f{BhFj}}}Fl}{{{f{Eb}}{f{BhFj}}}Fl}{{{f{{ADb{c}}}}{f{BhFj}}}FlHj}{{{f{AL`}}{f{BhFj}}}Fl}{{{f{H`}}{f{BhFj}}}Fl}0{{{f{ALb}}{f{BhFj}}}Fl}{{{f{Df}}{f{BhFj}}}Fl}0{{{f{Lb}}{f{BhFj}}}Fl}{{{f{ALd}}{f{BhFj}}}Fl}0{{{f{ACd}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{AMl}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{{{f{Bf}}}H`}{cH`ANf}{dH`}{{{f{{Db{D`}}}}}H`}{{{An{c}}}H`{{ANh{H`}}}}55{{{f{ACd}}}Df}{{{f{H`}}}Df}7{H`Df}8{{{f{ANj}}}Lb}{{{f{H`}}}Lb}{{{f{AMl}}}ALd};;;;;;;;;;;;;;;;;;;;;{ANlACd}<{ANnACd}={{{f{ACd}}d}Df}{cDj{{Gb{}{{B`{{An{Ad}}}}}}}}{cDj{{Gb{}{{B`{{An{{A@n{Fn}}}}}}}}}}{eDj{{AO`{Ad}}}{{Gb{}{{B`{c}}}}}}{cFh{{Gb{}{{B`{d}}}}}}{eMh{{`{Bf}}}{{Gb{}{{B`{c}}}}}}{eMh{{Kd{Bf}}}{{Gb{}{{B`{{An{c}}}}}}}}{eEb{{Kd{{Db{D`}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}}{{Gb{}{{B`{c}}}}}}{e{{ADb{c}}}Hj{{Gb{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Mh{{Kd{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Kd{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{ADb{c}}}Hj{{Bd{}{{B`{{An{c}}}}}}}}:<97856{eAIl{{Kd{{Db{D`}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{eAIl{{`{{Db{D`}}}}}{{Gb{}{{B`{c}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Mh{{Kd{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Kd{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{ADb{c}}}Hj{{Bd{}{{B`{c}}}}}}{{AObDf}Lb}{cDj{{Gl{}{{B`{{An{Ad}}}}}}}}{cFh{{Gl{}{{B`{d}}}}}}{cFh{{Gl{}{{B`{{An{d}}}}}}}}{eMh{{Kd{Bf}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{eMh{{`{Bf}}IdIfAOd}{{Gl{}{{B`{c}}}}}}{eEb{{Kd{{Db{D`}}}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}IdIfAOd}{{Gl{}{{B`{c}}}}}}{{c{f{Bf}}Df}Dj{{Gl{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Db{d}}}}}Fh}{{{f{Bf}}{f{{Db{c}}}}}Mh{{Kd{Bf}}}}{{{f{Bf}}{f{{Db{c}}}}}Eb{{Kd{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ADb{c}}}Hj}{{{f{Bf}}{f{{Db{{An{d}}}}}}}Fh}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Mh{{Kd{Bf}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Eb{{Kd{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}{{ADb{c}}}Hj}{cFh{{Gn{}{{B`{{An{d}}}}}}}}{{{F`{c}}ACd}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{F`{c}}ACd}{{AHj{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}Of{{Fd{}{{B`{e}}}}GnIdIf}}{{EjcACd}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}{f{Ad}}Ej}Dj}{{{f{Bf}}dEj}Fh}{{{f{Bf}}{f{Bf}}Ej}Mh}{{{f{Bf}}{f{{Db{D`}}}}Ej}Eb}{{{f{Bf}}{f{{Db{D`}}}}Ej}AIl}{{{f{Bf}}cEj}{{ADb{c}}}Hj}{{EjACd}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}Ej}Dj}{{{f{Bf}}Ej}Fh}{{{f{Bf}}Ej}Mh}{{{f{Bf}}Ej}Eb}{{{f{Bf}}Ej}AIl}{{{f{Bf}}Ej}{{ADb{c}}}Hj}{{{f{Bf}}Ej{f{Df}}}Dj}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}Ej}{{An{c}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Ib}}Ej}{{Af{H`}}}}{{{f{AKl}}Ej}{{Af{H`}}}}0{{{f{Dj}}Ej}{{Af{H`}}}}{{{f{Fh}}Ej}{{Af{H`}}}}{{{f{Mh}}Ej}{{Af{H`}}}}{{{f{Eb}}Ej}{{Af{H`}}}}{{{f{AIl}}Ej}{{Af{H`}}}}{{{f{{ADb{c}}}}Ej}{{Af{H`}}}Hj}{{{f{Ib}}Ej}H`}{{{f{AKl}}Ej}H`}0{{{f{Dj}}Ej}H`}{{{f{Fh}}Ej}H`}{{{f{Mh}}Ej}H`}{{{f{Eb}}Ej}H`}{{{f{AIl}}Ej}H`}{{{f{{ADb{c}}}}Ej}H`Hj}{{{f{Dj}}Ej}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{ADb{c}}}}Ej}{{An{{f{Hh}}}}}Hj}0{{{f{H`}}}{{An{{f{Bf}}}}}}{{{f{AOf}}Ej}H`}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}Ej}{{An{c}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}Ej}{{{f{Mh}}}Ej}{{{f{AIl}}}Ej}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Fh}}dd}{{Af{Aj}}}}{{{f{Mh}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AIl}}dd}{{Af{Aj}}}}{{{f{{ADb{c}}}}dd}{{Af{Aj}}}Hj}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}543210{{{f{H`}}{f{Bhc}}}bAA`}{{{f{ALb}}{f{Bhc}}}bAA`}{{{f{Df}}{f{Bhc}}}bAA`}{{{f{Lb}}{f{Bhc}}}bAA`}{{{f{ALd}}{f{Bhc}}}bAA`}{{{f{ACd}}{f{Bhc}}}bAA`}{{{f{AMl}}{f{Bhc}}}bAA`}{{{f{H`}}{f{Bhc}}d}bAA`}{DfDf}{{}Ej}0000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ACd}}}{{An{{f{ACd}}}}}}{ce{}{}}0000000000000000000000000000000000{{AOh{An{Ej}}Ej}{{Af{Ib}}}}{{AOh{An{Ej}}Ej}Ib}{{{f{Dj}}}c{}}{{{f{Fh}}}c{}}{{{f{Mh}}}c{}}{{{f{Eb}}}c{}}{{{f{AIl}}}c{}}{{{f{{ADb{c}}}}}eHj{}}{{AOjDf}{{Af{Jl}}}}{IbAd}{AOhAd}{{Jl{f{Bf}}}Ad}{H`{{Af{H`}}}}{{{f{Df}}}d}00{{{f{H`}}}d}111010111110101011110111101{{{f{ACd}}}d}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}{{ACl{cgACj}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}{{An{c}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}542310{{{f{AKh}}{f{AKh}}}{{Af{{Gj{AKhAKh}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{ALb}}}{{An{Df}}}}{{{f{Fh}}}{{An{d}}}}{{{f{Fh}}}Jl}{{{f{Mh}}}Jl}{{{f{Eb}}}Jl}{{{f{Fh}}}{{An{Jn}}}}{{{f{AJd}}}{{An{Hl}}}}{{{f{AJf}}}{{An{Jn}}}}{{{f{AJd}}}Jl}{{{f{AJf}}}Jl}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Db{D`}}}}EjEj}Fh}{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Mh}}}{{Af{Ej}}}}{{{f{Eb}}}{{Af{Ej}}}}{{{f{Lb}}}{{f{AOb}}}}`{{}c{}}00{{{f{Bf}}c}Mh{{Kd{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Mh{{Kd{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Mh{{Kd{{Db{{An{{AJb{Bf}}}}}}}}}}{{{f{Bf}}c}Mh{{Kd{{Db{{AJb{Bf}}}}}}}}{{{f{Bf}}c}Eb{{Kd{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{Kd{{Db{{An{{AJb{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kd{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kd{{Db{{AJb{{Db{D`}}}}}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ADb{c}}}Hj}{{{f{Bf}}e}{{ADb{c}}}Hj{{Kd{{Db{{An{c}}}}}}}}{{DfH`}Jl}{{{f{Bf}}Df}Lb}{{{f{Bf}}}{{ADb{c}}}Hj}{{{f{Dj}}EjEj}Dj}{{{f{Fh}}EjEj}Fh}{{{f{Mh}}EjEj}Mh}{{{f{Eb}}EjEj}Eb}{{{f{AIl}}EjEj}AIl}{{{f{{ADb{c}}}}EjEj}{{ADb{c}}}Hj}{{{f{Bf}}{F`{c}}}{{ADb{c}}}Hj}{{{f{Bf}}{F`{c}}Gh}{{ADb{c}}}Hj}{{{l{c}}}{{AKn{ec}}}BnBn}{Fhc{}}{{{f{Fh}}}c{}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}543201{{{f{Dj}}}{{Af{{AEn{J`}}}}}}{{{f{Dj}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{H`}}{f{H`}}}{{An{AOl}}}}{{{f{ALd}}{f{ALd}}}{{An{AOl}}}}{{{f{Ib}}}{{An{Ej}}}}{{{f{{AKn{AMdI`}}}}}{{An{Ej}}}}{{{f{AJd}}JnLh}{{Af{{An{Hl}}}}}}{{{f{AJf}}JnLh}{{Af{{An{Jn}}}}}}{{{f{AJd}}JnLh}{{Af{Jl}}}}{{{f{AJf}}JnLh}{{Af{Jl}}}}{{{f{Bf}}EjJn}{{Af{Fh}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Dj}}}Dj}{{{f{Fh}}}Fh}{{{f{Mh}}}Mh}{{{f{Eb}}}Eb}{{{f{AIl}}}AIl}{{{f{{ADb{c}}}}}{{ADb{c}}}Hj}`{{{f{Ib}}}Ej}{{{f{{AKn{AMdI`}}}}}Ej}{{{f{Fh}}c{An{d}}}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Mh}}c{An{{f{Bf}}}}}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Eb}}c{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Fh}}ce}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Mh}}ce}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{F`{D`}}}}}}}}}}{{{f{Fh}}{f{Fh}}{An{d}}}{{Af{Fh}}}}{{{f{Mh}}{f{Fh}}{An{{f{Bf}}}}}{{Af{Mh}}}}{{{f{Eb}}{f{Fh}}{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhLb}}AOb}b}{{{f{Dj}}J`}Dj}{{{f{Fh}}J`}Fh}{{{f{Mh}}J`}Mh}{{{f{Eb}}J`}Eb}{{{f{AIl}}J`}AIl}{{{f{{ADb{c}}}}J`}{{ADb{c}}}Hj}{{{f{Dj}}J`{An{{f{Ad}}}}}Dj}{{{f{Fh}}J`{An{d}}}Fh}{{{f{Mh}}J`{An{{f{Bf}}}}}Mh}{{{f{Eb}}J`{An{{f{{Db{D`}}}}}}}Eb}{{{f{AIl}}J`{An{{f{{Db{D`}}}}}}}AIl}{{{f{{ADb{c}}}}J`{An{{Hf{c}}}}}{{l{{Hf{c}}}}}Hj}{{{f{Fh}}d}Fh}{{{f{Mh}}d}Mh}{{{f{Eb}}d}{{l{Cn}}}}{{{f{AIl}}d}AIl}{{{f{Fh}}Dl}{{l{Al}}}}{{{f{Mh}}Dl}{{l{Dd}}}}{{{f{Eb}}Dl}{{l{Cn}}}}{{{f{AIl}}Dl}AIl}{{{f{AJd}}D`}Jl}{{{f{AJf}}D`}Jl}{{{f{H`}}{f{Df}}}{{An{H`}}}}`{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Fh}}}{{An{Hb}}}}{{{f{Fh}}}Jl}{{{f{Eb}}}Jl}{{{f{Mh}}{f{c}}}Mh{{Kd{{Db{Hb}}}}Ll}}{{{f{Mh}}{f{Dn}}}Mh}{{{f{Eb}}{f{c}}}Eb{{Kd{{Db{Hb}}}}Ll}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Df}}d}ACd}{{{f{Lb}}d}ANj}{ALdAMl}{{{f{Df}}{f{Bf}}d}ANj}{ALd{{f{Bf}}}}{{{f{Mh}}Ej}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ACd}}}{{f{ACd}}}}{{{f{Dj}}}{{Af{Mf}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ACd}}}AOn}{{{f{c}}}Dh{}}00{{{f{Eb}}}Mh}{{{f{H`}}{f{H`}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gd{AJhe}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{{ACdg}{{Gd{AJje}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{AMn{{Gd{eg}}}{}{{AJh{c}}AHj}{}}0{{AMnACd}{{Gd{eg}}}{}{{AJj{c}}AHj}{}}0{{{f{H`}}}{{Af{c}}}Jj}{c{{Gd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{H`}}{f{Df}}}{{Af{H`}}}}{{{f{Df}}d}{{Af{ACd}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0000000000000000000000000000000000{{{f{ACd}}}ACd}{{{f{Fh}}}{{Af{Fh}}}}{{{f{Mh}}}{{Af{Mh}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{ADb{c}}}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{{f{BhJl}}H`}b}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}Ej}cOf{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Jl}}}{{f{H`}}}}1{{{f{Df}}H`}d}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}gOf{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{AJd}}D`}Jl}{{{f{AJf}}D`}Jl}{{{f{Fh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{ANb}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@j}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@l}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AOh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AJf}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AIl}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{{ADb{c}}}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}Hj}{{{f{Fh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{ANb}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@j}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@l}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AOh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AJf}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AIl}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{{ADb{c}}}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}Hj}{ce{}{}}0000000000000000000000000000000000{Ejc{}}0{Ej{{B@n{ce}}}{}{}}{{{f{{Db{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{An{Gh}}}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}H`}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AKh}}}d}{{AKhd}AKh}{{{f{BhBA`}}{An{{f{Bf}}}}}b}{{{f{BhAKh}}{f{AKh}}}{{Af{b}}}}{{{f{BhBA`}}}b}{{{f{BhBA`}}{f{Bf}}}b}{{{f{AKh}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{AKh}}{f{AKh}}c}{{Af{AKh}}}AKj}{{{f{AKh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AKh}}}AKh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BAb}{Ej{{f{c}}}{}}000{Ej{{f{Bhc}}}{}}000{{BA`c}AKh{{Gb{}{{B`{{An{{f{Bf}}}}}}}}}}{Ejb}000{{{f{AKh}}}{{f{Df}}}}{{{f{AKh}}{f{Mh}}}c{}}{{{f{AKh}}{f{AKh}}}c{}}{{{f{AKh}}{f{Bf}}}c{}}210{{AKj{f{ANb}}{f{ANb}}}{{Af{ANb}}}}{BA`AKh}{BAb{{K`{BAd}}}}{cc{}}000{{ANb{K`{BAd}}dBAf}AKh}{{ANbBAf}AKh}{{{f{Mh}}{f{AN`}}BAf}{{Af{AKh}}}}{{{f{Bf}}dEjBAf}AKh}{{{f{AKh}}Ej}{{Af{H`}}}}{{{f{AKh}}Ej}H`}{{{f{AKh}}}{{f{{K`{BAd}}}}}};<=<=;{{}Ej}000{ce{}{}}0000{AKhAd}{{{f{AKh}}}d}0{{{f{AKh}}}BAh}{{{f{AKh}}}Ej}{{{f{AKh}}{f{Bf}}}c{}}{{{f{AKh}}{f{AKh}}}c{}}{{{f{AKh}}{f{Mh}}}c{}}012{{{f{AKh}}{f{AKh}}}{{Af{{Gj{AKhAKh}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{AKh}}}Jl}{{{f{BhBAb}}{f{{K`{BAd}}}}}{{Af{b}}}}1{{{f{AKh}}}{{Af{Ej}}}}{{{f{AKh}}}{{f{Bf}}}}{{{f{Bf}}EjBAf}BA`}{{{K`{BAd}}}BAb}{{{f{BhBAh}}}{{An{c}}}{}};:9:9;<{{{f{AKh}}}{{f{ANb}}}}{{{f{BhBA`}}{f{Bf}}}{{Gj{L`d}}}}`{{{f{BAh}}}{{Gj{Ej{An{Ej}}}}}}{{{f{AKh}}d}AKh}{{{f{AKh}}Dl}AKh}`{{{f{AKh}}dd}En}{{{f{AKh}}{f{AN`}}BAj}AKh}{{{f{AKh}}}{{Af{AKh}}}}{{{f{AKh}}}AKh}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}0004{{{f{AKh}}}d}{{{f{AKh}}}{{Af{BAl}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AN`BAd}{{{f{BAf}}}BAf}{{{f{BAd}}}BAd}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}BAf}{{}BAd}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{Ejb}0{{{f{BAf}}{f{BAf}}}d}{{{f{BAd}}{f{Bf}}}{{An{L`}}}}{{{f{BAf}}{f{BhFj}}}Fl}{{{f{BAd}}{f{BhFj}}}Fl}{cc{}}0{{{f{BAd}}L`}{{f{Bf}}}}{{{f{BAd}}}{{f{AN`}}}}{{{f{BAd}}L`}{{An{{f{Bf}}}}}}{{}Ej}0{ce{}{}}0{{{f{BAd}}}d}0{{{f{BAd}}}Ej}{{{f{BAd}}{f{BAd}}}d}{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BAn}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{{}b}{{{f{BhBAn}}}b}{Ejb}2{cc{}}6{{}Ej}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BB`}}}{{f{Bf}}}}<<;;`9{{{f{BB`}}}f}:9966`{{{f{BBb}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BB`}}{f{BhFj}}}{{Gd{bANd}}}}07{cBB`{{ANh{{AJb{Bf}}}}}}8{{}{{Jd{{f{Bf}}BBb}{{C`{b}}}}}}8877{cAJ`AHn}````{{{Jd{{f{Bf}}BBb}{{C`{b}}}}}b}{cAJ`BBd}{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBf}}}BBf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{BhFj}}BBhEj}Fl}{cc{}}{{}BBj}{{}BBf}{{}{{An{Ej}}}}{{}Dh}{{}d}{{}Ej}{ce{}{}}{{{An{BBj}}}b}{BBfb}{{{An{Ej}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBAl}}{F`{Ad}}{f{BBl}}}{{Af{b}}}}{{{f{BAl}}{f{Cb}}}{{F`{Ad}}}}0{{{f{BAl}}{f{Fh}}}{{Af{BAl}}}}{{{f{BAl}}{f{{Db{AOb}}}}}{{Af{BAl}}}}0{{{f{BAl}}J`Ej}BAl}{{BAl{f{Ad}}}c{}}{{{f{BAl}}{f{BAl}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}{{{f{BhBAl}}}{{f{BhBAl}}}}{{{f{BhBAl}}{f{Bf}}e}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBAl}}Eje}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BAl}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{{f{BAl}}}BAl}{{{f{BC`}}}BC`}{{{f{BCb}}}BCb}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BAl}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BAl}}e}{{Af{{F`{{f{Ad}}}}}}}{{Kd{Bf}}}{{Gb{}{{B`{c}}}}}}{{}BCb}{{}BAl}{Ej{{f{c}}}{}}0000{Ej{{f{Bhc}}}{}}0000{{{f{BAl}}{f{BAl}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}{{BAl{f{Ad}}}c{}}{Ejb}000{{{f{BAl}}{f{Bf}}}{{Af{BAl}}}}1{{{f{BhBAl}}{f{Bf}}}{{Af{Ad}}}}{{{f{BAl}}{f{{Db{c}}}}}BAl{{Kd{Bf}}}}{{{f{BAl}}{f{{BCd{{f{Bf}}}}}}}BAl}{{{f{BAl}}{An{{f{{Db{c}}}}}}}{{Af{BAl}}}{{Kd{Bf}}}}{{{f{BAl}}}{{F`{Df}}}}<{{{f{BCb}}{f{BCb}}}d}{{{f{BAl}}{f{BAl}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BAl}}}Ej}`{{{f{BAl}}e}{{Af{BAl}}}{{Kd{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAl}}{F`{Ad}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{BAl}}}{{Af{b}}}}{{{f{BAl}}}{{F`{Lb}}}}{{{f{BAl}}AEh}{{Af{BAl}}}}{{{f{BAl}}{f{Fh}}}{{Af{BAl}}}}{{{f{BC`}}{f{BhFj}}}Fl}{{{f{BCb}}{f{BhFj}}}Fl}{{{f{BAl}}{f{BhFj}}}Fl}0{cc{}}000{{{f{BBl}}}BAl}1{{{f{BCf}}}BAl}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBAl{{Gb{}{{B`{Ad}}}}}}{{{f{{Db{BCh}}}}}{{Af{BAl}}}}{{{f{{Db{BCh}}}}{f{BBl}}}{{Af{BAl}}}}{{c{f{BBl}}}{{Af{BAl}}}{{Bd{}{{B`{{f{BCh}}}}}}}}{{{f{BAl}}Ej}{{An{{F`{H`}}}}}}{{{f{BAl}}{f{Bf}}}{{An{Ej}}}}{{{f{BAl}}}{{F`{{f{Bf}}}}}}{{{f{BAl}}}{{F`{AOb}}}}{{{f{BAl}}}{{f{{Db{Ad}}}}}}{{{f{BhBAl}}}{{f{Bh{F`{Ad}}}}}}{{{f{BAl}}Ej}{{Af{BCh}}}}{{{f{BAl}}Ej{f{BhBCh}}}{{Af{b}}}}{{{f{BAl}}Ej{f{BhBCh}}}b}{{{f{BAl}}}{{An{{Af{Df}}}}}}`{{{f{BAl}}e}{{Af{BCj}}}{{Kd{Bf}}}{{Gb{}{{B`{c}}}}}}0{{{f{BAl}}{F`{Ad}}dd}{{Af{BCj}}}}{{{f{BCb}}{f{Bhc}}}bAA`}{{{f{BhBAl}}{An{M`}}}{{Af{B@d}}}}{{{f{BAl}}{An{Ej}}}BAl}{{{f{BAl}}}Ej}{{{f{BAl}}{f{{Db{Ad}}}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{{Db{Ad}}}}}{{Af{{f{BhBAl}}}}}}{{{f{BhBAl}}{f{{Db{Ad}}}}}{{f{BhBAl}}}}{{{f{BAl}}{BCl{Ej}}}{{f{c}}}{}}{{{f{BAl}}Ej}{{f{c}}}{}}{{{f{BAl}}BCn}{{f{c}}}{}}{{{f{BAl}}{Kj{Ej}}}{{f{c}}}{}}{{{f{BAl}}{f{Bf}}}{{f{c}}}{}}{{{f{BAl}}{BD`{Ej}}}{{f{c}}}{}}{{{f{BAl}}{BDb{Ej}}}{{f{c}}}{}}{{{f{BAl}}{BDd{Ej}}}{{f{c}}}{}}{{}Ej}0000{{{f{BhBAl}}Ejc}{{Af{{f{BhBAl}}}}}BBn}{ce{}{}}000000{{{f{BAl}}}{{Af{Fh}}}}{{{f{BAl}}}d}1{{{f{BAl}}}{{Jb{Ad}}}}{{{f{BAl}}}{{`{{Bd{}{{B`{BAl}}}}}}}}{{{f{BAl}}dd}BDf}{{{f{BAl}}}BDh}{{{f{BAl}}}Ej}{{{f{BAl}}}{{Af{{An{Ad}}}}}}{{{f{BAl}}BC`}{{Af{{An{Ad}}}}}}1{{{f{BAl}}{f{BAl}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}{{BAl{f{Ad}}}c{}}55{{{F`{c}}}{{Af{BAl}}}BBn}{{{F`{Ad}}}BAl}{{{F`{Ad}}}{{Af{BAl}}}}{{{f{BhBDf}}}{{An{c}}}{}}{{{f{BhBDh}}}{{An{c}}}{}}{{{f{BAl}}}BAl}{{{f{BAl}}cd}{{Af{{F`{BAl}}}}}{{BDj{Dh}}}}0{{BAle}{{Af{c}}}{}{{Cb{BAl}{{C`{{Af{c}}}}}}}}{{{f{BhBAl}}e}{{Af{c}}}{}{{Cb{{f{BhBAl}}}{{C`{{Af{c}}}}}}}}{{BAlgc}{{Af{e}}}{}{}{{Cb{BAlc}{{C`{{Af{e}}}}}}}}{{{f{BhBAl}}}{{An{Ad}}}}{{{f{BAl}}{f{BAl}}}d}>=<{{{f{BhBAl}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBAl}}}}}}{{{f{BhBAl}}{f{Bf}}c}{{Af{{f{BhBAl}}}}}BBn}{{{f{BhBAl}}Ejc}{{Af{{f{BhBAl}}}}}BBn}19`{{{f{BAl}}{f{Ad}}dd{An{Hn}}}{{Af{BAl}}}}0{{{f{BAl}}Ejdd{An{Hn}}}{{Af{BAl}}}}{{{f{BAl}}}BBl}{{{f{BAl}}{f{BAl}}}{{Af{b}}}}{{{f{BAl}}e}{{Af{BAl}}}{{Kd{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAl}}Ej}{{An{{f{Ad}}}}}}{{{f{BAl}}c}{{Af{BAl}}}{{BDl{Ej}}}}2{{{f{BAl}}c}{{Af{{F`{Ad}}}}}{{BDj{AOb}}}}{{{f{BAl}}e{f{BDn}}}{{Af{BAl}}}{{Kd{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAl}}e{f{BBl}}}{{Af{BAl}}}{{Kd{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BhBAl}}{f{{Db{c}}}}}{{Af{b}}}{{Kd{Bf}}}}{{{f{BAl}}}{{Gj{EjEj}}}}{{{f{BAl}}J`}BAl}{{{f{BAl}}}d}{{{f{BhBAl}}}b}{{{f{BDf}}}{{Gj{Ej{An{Ej}}}}}}{{{f{BDh}}}{{Gj{Ej{An{Ej}}}}}}{{{f{BAl}}J`Ej}BAl}00{{{f{BAl}}cE`}{{Af{BAl}}}{{BDj{AOb}}}}{{{f{BhBAl}}cE`}{{Af{{f{BhBAl}}}}}{{BDj{AOb}}}}{{{f{BAl}}J`}{{Gj{BAlBAl}}}}0{{{f{BhBAl}}}{{`{{Bd{}{{B`{BAl}}}}}}}}{{BAlEjd}{{F`{BAl}}}}{{{f{BAl}}{f{BAl}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}{{BAl{f{Ad}}}c{}}{{{f{BAl}}BC`}{{Af{{An{Ad}}}}}}{{{f{BAl}}{An{Ej}}}BAl}{{{f{BAl}}{f{Dn}}}{{Af{BAl}}}}{{{f{BAl}}{f{Dn}}}BAl}{{{f{BAl}}{f{Dn}}d}BAl}{{{f{BAl}}BE`}{{Af{Mf}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BAl}}EjcE`}{{Af{BAl}}}{{BDj{AOb}}}}{{{f{BhBAl}}{An{{f{Bf}}}}{An{{Mj{Dh{F`{Dh}}}}}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{Bf}}e}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBAl}}Eje}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gd{e}}}{}{}}000{BEb{{Af{BAl}}}}{{{Gj{BEd{f{{Db{ANj}}}}}}}{{Af{BAl}}}}2{{c{f{BBl}}}{{Af{BAl}}}{{Bd{}{{B`{{Af{{f{BCh}}}}}}}}}}{{{f{BAl}}{f{Bf}}}{{Af{Ej}}}}44444{{{f{c}}}Ml{}}0000{{{f{BAl}}{An{{f{{Db{Dh}}}}}}BCb{An{{Gj{J`Ej}}}}}{{Af{BAl}}}}{{{f{BAl}}d{An{{f{{Db{Dh}}}}}}BCb{An{{Gj{J`Ej}}}}}{{Af{BAl}}}}1{{{f{BAl}}ce}{{Af{BAl}}}{{BDj{AOb}}}{{BDj{AOb}}}}{{{f{BAl}}BEf}{{Af{BAl}}}}{{{f{BAl}}{f{BAl}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{BAl}}}{{Af{{f{BhBAl}}}}}}{ce{}{}}0000{{{f{BAl}}}Ej}{{{f{BhBAl}}c}{{Af{{f{BhBAl}}}}}BBn}{{{f{BhBAl}}c{f{BBl}}}{{Af{{f{BhBAl}}}}}BBn}{{{f{BhBAl}}Ad}{{f{BhBAl}}}}{{{f{BAl}}{f{Bf}}{An{Hb}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{Bf}}{An{Hb}}}{{f{BhBAl}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BEf}}}BEf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BEf}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{BEf}}{f{BEf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BEf}}{f{BhFj}}}Fl}{cc{}}{{{f{BEf}}{f{Bhc}}}bAA`}`{{}Ej}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BCj}}}{{Af{BAl}}}}`{{{f{BEh}}}{{f{{Db{BEj}}}}}}{{{f{BCj}}c}{{Af{BAl}}}{{Ch{BAl}{{C`{{Af{BAl}}}}}}IdIf}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BEh}}}BEh}{{{f{Aj}}}Aj}{{{f{BCj}}}BCj}{{{f{BEl}}}BEl}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BEh}{{}Aj}{Ej{{f{c}}}{}}000{{{f{BEn}}}{{f{c}}}{}}1111{Ej{{f{Bhc}}}{}}0000000`{{BF`e}{}{}{{BFb{c}}}}{Ejb}0000{{{f{BhBEh}}}b}111{{{f{BEh}}{f{BEh}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BFd}}}Hb}{{{f{BEh}}}{{f{{Db{Hb}}}}}}{{{f{BCj}}}{{Af{BAl}}}}{{{f{BhBEh}}}{{f{Bh{F`{Hb}}}}}}{{{f{BEh}}{f{BhFj}}}Fl}{{{f{Aj}}{f{BhFj}}}Fl}{{{f{BCj}}{f{BhFj}}}Fl}{{{f{BEl}}{f{BhFj}}}Fl}0{{{f{Bf}}BEl}Dh}{cc{}}000{{{F`{{F`{BFf}}}}}BEh}{{{F`{{Gj{{F`{Hb}}{F`{BEj}}}}}}}BEh}{{{F`{BFf}}}BEh}3{BEhAj}444{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBEh{{Gb{}{{B`{BFf}}}}}}{cBEh{{Gl{}{{B`{BFf}}}}}}{{{f{Aj}}Ej}BFd}{{{f{BCj}}}{{f{Aj}}}}{{{f{BhBCj}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BFh}}dd}{{Af{Aj}}}}0{{{f{BCj}}}{{Af{BAl}}}}{{{f{BhAj}}}{{f{BhBEh}}}}{{}Ej}0000000{ce{}{}}0000000{AjBEh}1{BEhc{}}{{{f{BEh}}}c{}}310{{{f{BFd}}}d}{{{f{Aj}}}d}{{{f{BEh}}}d}{{{f{BEh}}}{{BFl{{BFj{{Jb{Hb}}}}{Jb{BEj}}}}}}{{{f{Aj}}}BFn}{{{f{BCj}}}{{F`{Ad}}}}{{{f{BCj}}{An{{Gj{J`Ej}}}}}{{F`{Ad}}}}={{{f{BFd}}}Ej}{{{f{Aj}}}Ej}?????{{{F`{Hb}}{F`{BEj}}d}BEh}{{{f{BAl}}{F`{Ad}}Aj{An{{F`{Dh}}}}}BCj}{{{f{BhBFn}}}{{An{c}}}{}}{{{f{BhBFn}}Ej}{{An{c}}}{}}{{{f{BCj}}c}{{Af{BAl}}}{{Cb{BAl}{{C`{{Af{BAl}}}}}}IdIf}}{{{f{c}}}{}{}}{{{f{Aj}}}BF`}{{{f{BCj}}JnLh}{{Af{BAl}}}}{{BCje}BCj{{Kd{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{Aj}}J`Ej}BEn}{{{f{BhBEh}}}b}{{{f{BhAj}}}b}{{{f{BCj}}D`}{{Af{BAl}}}}{{{f{BCj}}}{{Af{BAl}}}}{Aj{{F`{Hb}}}}0{BCjAj}{{{f{BhBCj}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000000000000000{{{f{c}}}Ml{}}0000000{AjAj}{{{f{Aj}}}{{f{BEh}}}}{{{f{Aj}}}{{f{BG`}}}};{ce{}{}}0000000`````{{{f{BEh}}c}Ad{{Cb{{Gj{Hb{f{BEj}}}}}{{C`{An}}}}IdIf}}{{{f{BEh}}c}Ad{{Cb{{Gj{Hb{f{BEj}}}}}{{C`{}}}}IdIf}}{{{f{{Db{{BGb{Hb}}}}}}c}Ad{{Cb{{BGb{Hb}}}{{C`{An}}}}IdIf}}{{{f{{Db{{BGb{Hb}}}}}}c}Ad{{Cb{{BGb{Hb}}}{{C`{}}}}IdIf}}{{{f{{Db{c}}}}eBGd}{{AIb{c}}}{BGfBGh}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{Db{c}}}}{f{Gh}}eBGd}{{AIb{c}}}{BGfBGh}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{l{c}}}}HbHb}{{l{c}}}Bn}{{{f{BG`}}{f{{Db{En}}}}}d}{{{f{BGj}}{f{Aj}}}Ad}{{BGlBGl}BGl}0`{{{f{BGn}}{f{BAl}}{f{Aj}}}{{Af{Ad}}}}{{{f{BGn}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBH`}}H`}{{An{b}}}}{{{f{BhBHb}}{f{H`}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BH`}}}BH`}{{{f{BHb}}}BHb}{{{f{BCh}}}BCh}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Db{c}}}}}Df{{AO`{Df}}}}{{}BCh}{Ej{{f{c}}}{}}00{Ej{{f{Bhc}}}{}}00{Ejb}00{{{f{BCh}}{f{BCh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCh}}{f{BhFj}}}Fl}{cc{}}{{{Gj{{f{Df}}Ej}}}BH`}1{{{Gj{{f{Df}}Ej}}}BHb}2{{eEj}BBl{{ANh{Df}}}{{Bd{}{{B`{{F`{{Gj{Dhc}}}}}}}}}}{{}Ej}00{ce{}{}}00{BH`Ad}{BHbAd}{{{f{Df}}Ej}BH`}{{{f{Df}}Ej}BHb}{{{F`{H`}}}BCh}{{{f{BhBH`}}Ej}Ad}{{{f{BhBHb}}Ej}Ad}{{{f{{Db{BCh}}}}{An{Ej}}}{{Af{BBl}}}}0{{{f{{Db{BCh}}}}{An{Ej}}}{{Af{{F`{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gd{e}}}{}{}}00000{{{f{c}}}Ml{}}00<<<{{{f{{Db{BAl}}}}}{{Af{BAl}}}}0`````{{HnHn}Hn}{{{f{{Db{BAl}}}}{An{M`}}}{{Af{{Gj{{F`{B@d}}M`}}}}}}{{{f{{BHd{J`}}}}M`{f{Bh{F`{Hn}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BHf}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{Ejb}0{{{f{BHf}}}Hn}{{{f{BHh}}{f{BhFj}}}Fl}{cc{}}0{{{f{BHh}}{f{Bhc}}}bAA`}``{{}Ej}0{ce{}{}}0{{{f{Bh{BHj{BHhce}}}}HbHn{f{BAl}}gi}b{}BHl{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0{{{f{BHn}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}0{{{f{BHn}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}055{{{f{BhBHf}}{f{{Db{D`}}}}}b}{{{f{BhBHf}}Kh}b}{{{f{BhBHf}}J`}b}{{{f{BhBHf}}L`}b}{{{f{BhBHf}}Hn}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{K`{ce}}}}}{{f{e}}}{}BI`}{{{f{{K`{c}}}}}BIb{BIdLl}}{{{f{{K`{ce}}}}}{}LlBI`}{{{f{{K`{c}}}}}KhBIf}{{{f{{K`{ce}}}}}{{f{c}}}LlBI`}{{{K`{{Db{{BIh{c}}}}e}}}{{K`{{Db{c}}e}}}{}BI`}{{{K`{{BIh{c}}e}}}{{K`{ce}}}{}BI`}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{AKh}}{f{AKh}}c}{{Af{AKh}}}AKj}{{{f{{K`{c}}}}}{{An{{f{AHn}}}}}{AHnLl}}`{{{f{BIj}}{f{Ad}}}{{Af{Ad}}}}{{{f{BIj}}c}{{Af{Ad}}}Ab}{{{f{Mn}}}Mn}{{{f{BIl}}}BIl}{{{f{{K`{ce}}}}}{{K`{ce}}}Ll{BI`Of}}{{{f{Lj}}}Lj}{{{f{BE`}}}BE`}{{{f{ANj}}}ANj}{{{f{BCf}}}BCf}{{{f{Lh}}}Lh}{{{f{BIn}}}BIn}{{{f{BJ`}}}BJ`}{{{f{BJb}}}BJb}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{c}}}b{}}00000000000000000{{{f{{K`{ce}}}}{f{{K`{ce}}}}}AOl{BJdLl}BI`}{AMne{}{{AJh{c}}AHj}}0{{AMnACd}e{}{{AJj{c}}AHj}}0{{{f{c}}{f{e}}}AOl{}{}}{{AJ`BB`}AJ`}{AJ`AJ`}{{{f{Fn}}{f{ACd}}}{{A@n{Fn}}}}{{{f{ANj}}}{{f{ACd}}}}```{{}b}{cbBI`}{{}{{K`{Bf}}}}{{}{{K`{BJf}}}}{{}{{K`{c}}}BJh}{{}{{K`{{Db{c}}}}}{}}{{}Lj}{{}BE`}{{}ANj}{{}BCf}{{}Lh}`{Ej{{f{c}}}{}}00{{{f{{K`{ce}}}}}{{f{c}}}LlBI`}1111111111{Ej{{f{Bhc}}}{}}000000000000{{{f{{K`{c}}}}}{{f{Bf}}}{AHnLl}}`{{{K`{ACfc}}}{{Gd{{K`{ec}}{K`{ACfc}}}}}BI`{ACfIdIf}}{{{K`{ACfc}}}{{K`{ec}}}BI`{ACfIdIf}}{{{f{{K`{ce}}}}}{{BJj{ce}}}Ll{OfBI`}}{Ejb}000{{{f{Bh{K`{ce}}}}}bLlBI`}111111111{{{f{Mn}}{f{Mn}}}d}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJlLl}BI`}{{{f{{K`{BJn}}}}{f{BJn}}}d}{{{f{{K`{Fn}}}}{f{Fn}}}d}{{{f{Lj}}{f{Lj}}}d}{{{f{BE`}}{f{BE`}}}d}{{{f{ANj}}{f{ANj}}}d}{{{f{BCf}}{f{BCf}}}d}{{{f{Lh}}{f{Lh}}}d}{{{f{BJb}}{f{BJb}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BIl{{Gj{L`L`}}}}`{{BCfc}BCf{{Cb{Ej{f{ANj}}}{{C`{d}}}}}}{{AKj{f{ANb}}{f{ANb}}}{{Af{ANb}}}}{{{f{Bh{K`{ABl}}}}}{{Gd{bBK`}}}}{{{f{AJ`}}{f{BhFj}}}{{Gd{bANd}}}}0{{{f{Mn}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BIl}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANd}}}{AChLl}BI`}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANd}}}{BBdLl}BI`}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANd}}}LlBI`}{{{f{Lj}}{f{BhFj}}}Fl}{{{f{BE`}}{f{BhFj}}}Fl}{{{f{ANj}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BCf}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{Lh}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BIn}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BJ`}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BJb}}{f{BhFj}}}{{Gd{bANd}}}}`{BK`AJ`}{BKbAJ`}{cc{}}{BKdAJ`}{BKfAJ`}{L`Mn}33{BKh{{K`{BKj}}}}{{{K`{Bf}}}{{K`{{Db{D`}}}}}}5{{{f{Bf}}}{{K`{Bf}}}}{BKlc{}}{{{A@n{ce}}}{{K`{ce}}}LlBI`}{{{BGb{c}}}{{K`{{Db{c}}}}}{}}{{{f{{Db{c}}}}}{{K`{{Db{c}}}}}Of}{BKn{{K`{BJf}}}}{{{f{BL`}}}{{K`{BL`}}}}{{{AJb{c}}}{{K`{c}}}{BLbLl}}{Dh{{K`{Bf}}}}{BLd{{K`{BL`}}}}{{{F`{ce}}}{{K`{{Db{c}}e}}}{}{BI`Of}}{{{f{BKj}}}{{K`{BKj}}}}{{{f{BJf}}}{{K`{BJf}}}}{c{{K`{c}}}{}}{cc{}}000{{{F`{ANj}}}BCf}11111{{c{An{Gh}}}BLf{}}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLj}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLl}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{e{{K`{{Db{c}}}}}{}{{Gb{}{{B`{c}}}}}}{{gEj}{{BLn{J`}}}Kd{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}0{e{{BLn{J`}}}{{Gb{}{{B`{{An{d}}}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{{gACd}{{BLn{J`}}}BGh{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}2{e{{K`{{Db{c}}}}}Id{{Gl{}{{B`{c}}}}}}{{}{{K`{c}}}Ll}{c{{K`{ec}}}BI`Ll}{{{f{Bf}}}{{Gd{BM`}}}}{{{f{Bf}}c}BMb{}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BMdLl}BI`}{{{f{Bh{K`{ce}}}}}{{An{{f{Bhc}}}}}LlBI`}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}LlBI`}{{{f{BCf}}}{{F`{{f{Bf}}}}}}{{{f{En}}Ej}H`}4{{{f{BMf}}}d}{{{f{{K`{ce}}}}{f{Bhg}}}b{BMhLl}BI`AA`}{{{f{BE`}}{f{Bhc}}}bAA`}{{{f{ANj}}{f{Bhc}}}bAA`}{{{f{Lh}}{f{Bhc}}}bAA`}{{{f{BJb}}{f{Bhc}}}bAA`}{{{f{Mn}}}L`}{{}b}{cb{OfBI`}}{{{f{BCf}}{f{Bf}}}{{An{Ej}}}}{{{f{{Db{L`}}}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{}Ej}000000000000`{{{f{BhBIl}}}{{f{BhHn}}}}`{ce{}{}}000000000000{{{K`{ce}}}{{An{c}}}{}BI`}{{{K`{ce}}}{}LlBI`}{{{K`{ce}}}{{Gj{e}}}LlBI`}{{{K`{BMj}}}Ad}{{{f{BCf}}}d}{{{f{BIl}}}d}{{{f{Mn}}}d}`{{{f{{K`{ABl}}}}}d}{{{f{c}}}d{}}1{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BMdLl}BI`}{{{f{BCf}}}Ej}`1{{{f{AKh}}{f{AKh}}}{{Af{{Gj{AKhAKh}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}{BMlLl}{BI`Of}}{{{f{BMn}}}Jl}0{{{f{BN`}}}Jl}```11`{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJlLl}BI`}{{BNbEj}{{An{Ej}}}}{{{f{Bf}}c}BNd{}}{c{{K`{c}}}{}}{{cACdd}ANj{{ANh{Dh}}}}{e{{K`{c}}}{}{{N`{{f{{BJj{c}}}}}{{C`{c}}}}}}{{ce}{{K`{ce}}}{}BI`}{{}{{K`{{BIh{c}}}}}{}}{c{{K`{{BIh{e}}c}}}BI`{}}{Ej{{K`{{Db{{BIh{c}}}}}}}{}}{{Ejc}{{K`{{Db{{BIh{e}}}}c}}}BI`{}}3210`{{}Mn}{{}BIl}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}{{An{AOl}}}{BMdLl}BI`}{c{{BNf{{K`{c}}}}}{}}{{ce}{{BNf{{K`{ce}}}}}{}BI`}`````{{{f{BMn}}}Jl}0{{{f{{K`{c}}}}{f{BhBNh}}}b{AHnLl}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}dLlBI`}{{{f{BN`}}JnLh}{{Af{Jl}}}}{{{f{Bh{K`{ABl}}}}{f{Bh{Db{D`}}}}}{{Gd{EjBK`}}}}{{{f{Bh{K`{ABl}}}}BNj}{{Gd{bBK`}}}}{{{f{Bh{K`{ABl}}}}{f{Bh{F`{D`}}}}}{{Gd{EjBK`}}}}{{{f{Bh{K`{ABl}}}}{f{BhDh}}}{{Gd{EjBK`}}}}{{{f{Bh{K`{ABl}}}}{f{Bh{Db{BNl}}}}}{{Gd{EjBK`}}}}`{{{f{Bh{K`{ABl}}}}BNn}{{Gd{HnBK`}}}}`{{{f{AIf}}EjEj}AIf}0{{{f{{K`{c}}}}}{{An{{f{AHn}}}}}{AHnLl}}{{{f{BO`}}D`}Jl}{{L`L`}BIl}`{{{f{{K`{ce}}}}}EjLlBI`}>>{{{f{Mn}}}{{An{L`}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AMn{{Gd{eg}}}{}{{AJh{c}}AHj}{}}0{{AMnACd}{{Gd{eg}}}{}{{AJj{c}}AHj}{}}0{c{{Gd{e}}}{}{}}00{{{K`{{Db{c}}e}}}{{Gd{{K`{{BGb{c}}e}}}}}{}BI`}11111111111111111111111{{BNbEj}{{Gd{EjAJ`}}}}{c{{Gd{{K`{c}}BOb}}}{}}{{ce}{{Gd{{K`{ce}}BOb}}}{}BI`}{{}{{Gd{{K`{{BIh{c}}}}BOb}}}{}}{c{{Gd{{K`{{BIh{e}}c}}BOb}}}BI`{}}10{c{{Gd{{BNf{{K`{c}}}}BOb}}}{}}{{ce}{{Gd{{BNf{{K`{ce}}}}BOb}}}{}BI`}{{{K`{ce}}}{{Gd{c{K`{ce}}}}}{}BI`}{{{f{c}}}Ml{}}000000000000{{{K`{ce}}}cOfBI`}`{{{f{BO`}}D`}Jl}{ce{}{}}000000000000{{{f{{K`{ce}}}}}EjLlBI`}``{{ANj{BOd{DhDh}}}ANj}{{BCf{BOd{DhDh}}}BCf}{{{f{Bh{K`{ABl}}}}{f{{Db{D`}}}}}{{Gd{EjBK`}}}}{{{f{Bh{K`{ABl}}}}{f{{Db{BOf}}}}}{{Gd{EjBK`}}}}```````{{c{An{Gh}}}BLf{}}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLj}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLl}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{BOh{An{{f{ACd}}}}}{{Gd{{BLn{J`}}AJ`}}}}{cc{}}{{}Ej}{ce{}{}}{{{f{BOh}}}d}{EjBOh}{{{f{BOh}}}{{f{{Db{J`}}}}}}{{{f{BhBOh}}{f{Fn}}}b}{{{f{BhBOh}}}b}{{{f{BhBOh}}{f{{Db{{A@n{Fn}}}}}}}b}1{{{f{BhBOh}}{An{{f{Fn}}}}}b}{BOh{{BOj{J`}}}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}:`{{{f{c}}h}b{}}{{{f{BOl}}}{{f{ACf}}}}{{{f{BhBOl}}}{{A@n{Fn}}}}{{{f{BhBOl}}}{{f{BhACf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BOl}}}BOl}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BOl}}}{{f{ACd}}}}{{}BOl}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{BhBOl}}Ej}b}{{{f{BOl}}{f{BhFj}}}{{Gd{bANd}}}}{cc{}}{{}Ej}{ce{}{}}{{{f{BOl}}}Ej}{EjBOl}{{{f{BhBOl}}}b}70{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{BOl}}}{{An{{f{BOn}}}}}}7```````{{{f{AIf}}EjEj}AIf}0`{{}b}0{{}d}``{{eEjEj}{{C@`{J`}}}{{Kd{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEjEj}{{BHd{J`}}}{{Kd{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{Hnb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBl}}}BBl}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BBl}}{f{Bf}}}d}{{}BBl}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{BBl}}{f{BBl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBl}}{f{BhFj}}}Fl}{cc{}}{BCfBBl}{{{f{C@b}}}BBl}{{{f{BCf}}}BBl}{{{f{BCh}}}BBl}{C@bBBl}{{{f{{Db{Ad}}}}}BBl}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{eBBl{{ANh{Lb}}}{{Gb{}{{B`{c}}}}}}{{{f{BBl}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BBl}}Ej}{{An{{Gj{{f{AOb}}{f{Df}}}}}}}}{{{f{BhBBl}}Ej}{{An{{Gj{{f{BhAOb}}{f{BhDf}}}}}}}}{{{f{BBl}}{f{Bf}}}{{An{Lb}}}}{{{f{BBl}}{f{Bf}}}{{An{{Gj{Ej{f{AOb}}{f{Df}}}}}}}}{{{f{C@d}}}{{F`{{f{Bf}}}}}}{{{f{BBl}}}{{F`{{f{Bf}}}}}}{{{f{BBl}}{f{Bhc}}}bAA`}{{{f{C@d}}{f{Bf}}}{{An{Ej}}}}{{{f{BBl}}{f{Bf}}}{{An{Ej}}}}{{}Ej}{{{f{BhBBl}}EjAObDf}{{Af{{An{Df}}}}}}{ce{}{}}{BBlc{}}{{{f{BBl}}}d}{{{f{BBl}}}{{`{{Bd{}{{B`{{Gj{{f{AOb}}{f{Df}}}}}}}}}}}}{{{f{BBl}}}{{`{{Ih{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBBl}}}{{`{{Ih{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BBl}}}{{`{{Ih{}{{B`{Lb}}}}}}}}{{{f{BBl}}}{{`{{Ih{}{{B`{{f{AOb}}}}}}}}}}{{{f{BBl}}}Ej}{{{f{BhBBl}}BBl}b}{{{f{BhBBl}}{f{BBl}}}b}{{}BBl}{{{f{BBl}}EjAObDf}{{Af{BBl}}}}{{{f{BhBBl}}{f{Bf}}}{{An{Df}}}}{{{f{BhBBl}}{f{Bf}}AOb}{{An{AOb}}}}{{{f{BhBBl}}Ej}b}{{{f{BhBBl}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBBl}}EjDf}{{An{Df}}}}4{{{f{BhBBl}}Ej}{{An{{Gj{AObDf}}}}}}{{{f{BBl}}d}BCf}{{{f{c}}}e{}{}}{{{f{BhBBl}}{f{BBl}}}{{Af{d}}}}{c{{Gd{e}}}{}{}}{{{f{BBl}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BBl}}Ej}{{Af{{Gj{{f{AOb}}{f{Df}}}}}}}}{{{f{BBl}}{f{Bf}}}{{Af{Lb}}}}{{{f{BBl}}{f{Bf}}}{{Af{{Gj{Ej{f{AOb}}{f{Df}}}}}}}}{{{f{BhBBl}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{C@d}}{f{Bf}}}{{Af{Ej}}}}6{{{f{c}}}Ml{}}{ce{}{}}{EjBBl}{{{f{BhBBl}}AObDf}{{An{Df}}}}`````````````````{{{f{c}}h}b{}}0{{{f{Bf}}{F`{En}}{f{ACd}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{ACd}}{An{{f{C@f}}}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jj}{}}{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BMj}}Dl}Dn}0{{{f{BMj}}}{{Af{Dn}}}}0`{{{f{Ad}}Ej}{{f{En}}}}{{{f{BMj}}}{{f{ACf}}}}{{{f{BhBMj}}}{{f{BhACf}}}}0{{{f{Ad}}}Dj}{{{f{BhBMj}}}{{f{Bh{l{c}}}}}Bn}{{{f{BMj}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BMj}}}}{{{f{BhBMj}}}{{Af{Ej}}}}0{{{f{BhAd}}}{{Af{Ej}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AIl}}}}}}{{{f{BMj}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fh}}}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{BMj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKh}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BMj}}}El}{{{f{Ad}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{{f{BMj}}}{{f{{F`{En}}}}}}{{{f{BhBMj}}}{{f{Bh{F`{En}}}}}}{{{f{BhAd}}}{{f{Bh{F`{En}}}}}}{{{f{Ad}}}Ad}{{{f{Il}}}Il}1{{{f{BMj}}}{{K`{BMj}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ib}}}}}}{{}Ad}{Ej{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}1{Ej{{f{Bhc}}}{}}000{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jj}{}}{{Adc}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jn}}}}{Ejb}000{{{f{BMj}}}Ad}0{{{f{BMj}}}{{f{Df}}}}0{{{f{Il}}{f{Il}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}2{{{f{Ad}}c}eANf{}}{{{f{Ad}}{f{Bf}}}c{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Ej}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}H`Ej}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AJd}}}}}}{{{f{Ad}}}{{Af{{f{AJf}}}}}}{{{f{BMj}}}{{AJb{Lb}}}}0{{{f{Ad}}AEh}{{Af{Ad}}}}{{{f{BMj}}{f{Fh}}}{{Af{Ad}}}}{{{f{Il}}{f{BhFj}}}Fl}{{{f{Ad}}{f{BhFj}}}Fl}0{{{f{Ad}}}Dh}{cc{}}000{{{l{c}}}AdBn}{{{f{Bf}}{f{{Db{H`}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Db{H`}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}En}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{Df}}}Ad}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cAd{{Gb{}{{B`{{f{Hn}}}}}}}}{cAd{{Gb{}{{B`{{f{Hl}}}}}}}}{cAd{{Gb{}{{B`{d}}}}}}{cAd{{Gb{}{{B`{L`}}}}}}{cAd{{Gb{}{{B`{{f{d}}}}}}}}{cAd{{Gb{}{{B`{{An{Hl}}}}}}}}{cAd{{Gb{}{{B`{{An{L`}}}}}}}}{cAd{{Gb{}{{B`{{f{Bf}}}}}}}}{cAd{{Gb{}{{B`{{An{Jn}}}}}}}}{cAd{{Gb{}{{B`{{f{Jn}}}}}}}}{cAd{{Gb{}{{B`{Hl}}}}}}{cAd{{Gb{}{{B`{Dh}}}}}}{cAd{{Gb{}{{B`{{An{d}}}}}}}}{cAd{{Gb{}{{B`{Jn}}}}}}{cAd{{Gb{}{{B`{{f{J`}}}}}}}}{cAd{{Gb{}{{B`{{An{J`}}}}}}}}{cAd{{Gb{}{{B`{{An{Hn}}}}}}}}{cAd{{Gb{}{{B`{Kh}}}}}}{cAd{{Gb{}{{B`{{f{L`}}}}}}}}{cAd{{Gb{}{{B`{{An{Kh}}}}}}}}{cAd{{Gb{}{{B`{{f{Kh}}}}}}}}{cAd{{Gb{}{{B`{Hn}}}}}}{cAd{{Gb{}{{B`{J`}}}}}}{{{f{Bf}}{F`{L`}}}Ad}{{{f{Bf}}{F`{Kh}}}Ad}{{{f{Bf}}{F`{Jn}}}Ad}{{{f{Bf}}{F`{Hl}}}Ad}{{{f{Bf}}{F`{J`}}}Ad}{{{f{Bf}}{F`{Hn}}}Ad}{{{f{Bf}}Ej{f{Df}}}Ad}{{{f{Ad}}EjEj}Ad}{{{f{BMj}}Ej}{{Af{H`}}}}{{{f{Ad}}}Ej}{{{f{Ad}}}Hd}{{{f{Ad}}}Ad}{{{f{BMj}}}{{An{{f{ABf}}}}}}0{{{f{BMj}}Ej}{{An{{f{Hh}}}}}}0{{{f{BMj}}EjEj}{{An{{f{Hh}}}}}}0{{{f{BMj}}Ej}H`}0{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}12{{{f{Ad}}{f{Bf}}}c{}}{{{f{BMj}}}d}{{{f{Il}}{f{Bhc}}}bAA`}{{{f{Ad}}{An{Ej}}}Ad}{{{f{Ad}}}{{Af{{f{B@h}}}}}}{{{f{Ad}}}{{Af{{f{B@j}}}}}}{{{f{Ad}}}{{Af{{f{B@l}}}}}}{{{f{Ad}}}{{Af{{f{B@f}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}Ej}000{ce{}{}}000{AdBAl}1{BBnAd}{AdAd}=={{{f{Ad}}}{{Af{Fh}}}}000{{{f{BMj}}}Fh}0{{}d}00{{{f{Ad}}}Il}{{{f{Ad}}}C@h}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BMj}}}Ej}{{{f{Ad}}}Ej}{{{f{BMj}}Ej}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Bf}}}c{}}120{{{f{Ad}}}{{Af{{An{c}}}}}Jj}{{{f{BMj}}}{{Af{Jl}}}}0{{{f{BMj}}}{{An{Jn}}}}0{{{f{Ad}}}Jl}1122322{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jj}{}}>>={{{f{BMj}}}{{Af{Ej}}}}0{{{f{BMj}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}AdBBn}{{{f{Bf}}c}Ad{{Kd{{Db{Ad}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{AJb{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{F`{D`}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{AJb{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{H`}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{Hl}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{L`}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{Dh}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{L`}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}{Kj{Kh}}}Ad}{{{f{Bf}}c}Ad{{Kd{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{Kh}}}}}}}}{{{f{Bf}}{Kj{L`}}}Ad}{{{f{Bf}}c}Ad{{Kd{{Db{Jn}}}}}}{{{f{Bf}}{Kj{Hn}}}Ad}{{{f{Bf}}c}Ad{{Kd{{Db{J`}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Kd{{Db{d}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{{AJb{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{Jn}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{Kh}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{J`}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}{Kj{J`}}}Ad}{{{f{Bf}}c}Ad{{Kd{{Db{Hn}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kd{{Db{{An{{AJb{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BMj}}EjEj}Ad}{{{f{Bf}}Ej}Ad}{{{f{BhC@h}}}{{An{c}}}{}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}2{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}eANf{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BMj}}}Ej}`{{{f{Ad}}}C@j}{{{f{Ad}}}{{Af{Jl}}}}{{{f{BMj}}JnLh}{{Af{Jl}}}}0{{{f{BMj}}}Ad}{{{f{Ad}}c}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jj}{}}{{{f{BhBMj}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Db{J`}}}}}{{Af{Ad}}}}6{IlIl}{{{f{BMj}}{f{Cb}}Lj}{{Af{Ad}}}}0{{{f{Ad}}Jndd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}Ejdd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}Ej}Ad}{{{f{BhAd}}Il}b}{{{f{BMj}}J`}Ad}{{{f{BhBMj}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hn}}}Ad}{{{f{C@h}}}{{Gj{Ej{An{Ej}}}}}}{{{f{BMj}}J`Ej}Ad}{{{f{Ad}}J`Ej}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BMj}}Dl}{{Af{Ad}}}}0{{{f{BMj}}J`}{{Gj{AdAd}}}}{{{f{Ad}}J`}{{Gj{AdAd}}}}{{{f{BMj}}D`}{{An{Jn}}}}0{{{f{BMj}}D`}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{{f{Mh}}}}}}{{{f{Ad}}Ej}{{Af{{AJb{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{AdAd}c{}}{{Adc}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jj}{}}{{{f{Ad}}}{{Af{c}}}Jj}{{{f{BMj}}}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{Jl}}}}{{{f{Ad}}{An{Ej}}}Ad}{{{f{BMj}}{f{Dn}}}{{Af{Ad}}}}{{{f{BMj}}{f{{Db{Hb}}}}}{{Af{Ad}}}}{{{f{BMj}}{f{{Db{Hb}}}}}Ad}{{{f{BMj}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Db{Hb}}}}}Ad}{{{f{Ad}}Ejd}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AJb{Ad}}}}{{{f{c}}}Dh{}}{{AdAd}{{Af{Ad}}}}{c{{Gd{e}}}{}{}}000{{{Gj{{f{Bf}}{F`{En}}}}}{{Af{Ad}}}}{{{Gj{{f{ANj}}{F`{En}}}}}{{Af{Ad}}}}{{{Gj{{f{ANj}}En}}}{{Af{Ad}}}}{{{Gj{{f{Bf}}En}}}{{Af{Ad}}}}44445{{{f{BhAd}}{Ff{c}}}dBn}6{{{f{c}}}Ml{}}000{{{f{Ad}}}{{Af{{f{B@b}}}}}}{{{f{Ad}}}{{Af{{f{ANb}}}}}}{{{f{Ad}}}{{Af{{f{B@d}}}}}}{{{f{Ad}}}{{Af{{f{B@`}}}}}}{{{f{BMj}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BMj}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BMj}}D`}{{An{Jn}}}}0{{{f{BMj}}D`}{{Af{Jl}}}}0{ce{}{}}000{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jj}}{{{f{Ad}}{f{Fh}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{Cf}}}Ad}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{cc{}}{{}Ej}{ce{}{}}{{{C@l{Ad}}}Cf}{{{f{BhCf}}{f{BhEn}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}5{{{f{BhCf}}{f{BhEn}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{C@n{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CA`}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BIj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BIj}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CAb}}}CAb}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}CAb}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{CAb}}{f{CAb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CAb}}{f{BhFj}}}Fl}{cc{}}{{{f{CAb}}{f{Bhc}}}bAA`}{{}Ej}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}3`````````{{{f{c}}h}b{}}5{{{F`{BAl}}}{{Af{BAl}}}}{c{{Af{BAl}}}{{Gb{}{{B`{BAl}}}}}}{cBAl{{Gb{}{{B`{BAl}}}}}}{c{{An{BAl}}}{{Gb{}{{B`{BAl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gj{{AJb{{l{c}}}}{AJb{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gj{{AJb{{l{c}}}}{AJb{{l{e}}}}{AJb{{l{g}}}}}}}BnBnBn}{{{f{BhCAd}}}d}{c{{Af{Df}}}{{Gb{}{{B`{{f{H`}}}}}}}}{c{{Af{{Gj{DfEj}}}}}{{Gb{}{{B`{{f{H`}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gh}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{CAf}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{{f{{CAh{ec}}}}}{{CAh{ec}}}Of{Of{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gj{{AJb{{l{c}}}}{AJb{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gj{AdAd}}}}{CAde{}{{CAj{c}}}}{CAde{}{{CAl{c}}}}{c{{Af{BAl}}}{{Gb{}{{B`{{f{BAl}}}}}}}}{cBAl{{Gb{}{{B`{{f{BAl}}}}}}}}{{{f{BhCAd}}{f{c}}}dBJl}{{{f{{CAn{c}}}}}{{f{e}}}{}{}}{Ej{{f{c}}}{}}{{{f{{AIh{c}}}}}{{f{e}}}{}{}}11{Ej{{f{Bhc}}}{}}0{{{f{Bh{AIh{c}}}}}{{f{Bhe}}}{}{}}1{Ejb}00{cBBl{{Gb{}{{B`{Df}}}}}}{c{{Af{Df}}}{{Gb{}{{B`{{f{Df}}}}}}}}{{{f{{CAn{Ad}}}}{f{{CAn{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BhCAd}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}00{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{AIh{{l{e}}}}}{{Gb{}{{B`{}}}}}n}{c{{AIh{Fh}}}{{Gb{}{{B`{d}}}}}}{eCAl{}{{Gb{}{{B`{c}}}}}}21{c{{AIh{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{c{{AIh{{l{e}}}}}{{Gn{}{{B`{}}}}}n}{c{{AIh{Fh}}}{{Gn{}{{B`{d}}}}}}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{ALd}}{f{ALd}}}ALd}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CAn{Ad}}}}{f{Bhc}}}bAA`}{{}Ej}00{ce{}{}}00{{{AIh{c}}}c{}}1{BDj{{F`{c}}}{}}{c{{F`{Dh}}}{}}{c{{F`{{CBb{CB`}}}}}{}}{{{f{CAf}}}{{`{{Bd{}{{B`{CAf}}}}}}}}{{{f{CAf}}}Ej}{BBhH`}1{c{{AIh{c}}}{}}{{eEj}{{CAh{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CAh{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CAh{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fd}}`{{{f{{CAh{ec}}}}}{{Gj{Ej{An{Ej}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CAf}}J`Ej}CAf}{{{f{{Db{c}}}}J`Ej}{{f{{Db{c}}}}}{}}{{{f{c}}Ej}{{F`{c}}}CAf}0{{{f{CAf}}J`}{{Gj{CAfCAf}}}}{{{f{BAl}}Ejd}{{F`{BAl}}}}{{{f{c}}}e{}{}}{{CAdEj}{{CAh{CAdc}}}{}}{c{{Gd{e}}}{}{}}00{{{f{Df}}{f{Df}}}{{Af{Df}}}}111{{{f{c}}}Ml{}}00{ce{}{}}00{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Db{{F`{c}}}}}}}{{Gj{Ej{F`{Ej}}}}}{}}{{{f{BAl}}}{{`{{Bd{}{{B`{BAl}}}}}}}}{{{f{{Db{c}}}}}{{AIb{Hb}}}{{Kd{{Db{Mn}}}}IdIf}}{{{f{{Db{e}}}}}{{F`{c}}}{IdIfCd}{{Kd{{Db{c}}}}}}{{{f{Ad}}}{{F`{Ad}}}}","D":"JBb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5356],[5,"ListType",1487],[5,"ChunkedArray",39],[10,"PolarsNumericType",1487],[10,"Num",5357],[10,"ToPrimitive",5358],[5,"Series",4737],[8,"PolarsResult",3998,5359],[10,"NumOpsDispatchInner",5172,5360],[6,"GroupsProxy",3592,5361],[5,"BooleanType",1487],[6,"Option",5362],[17,"Item"],[8,"ArrayBox",5148],[10,"Iterator",5363],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1487],[10,"PolarsDataType",1487],[17,"Output"],[10,"Fn",5364],[10,"Copy",5365],[5,"AmortSeries",5148],[10,"FnMut",5364],[5,"Float64Type",1487],[5,"Float32Type",1487],[5,"BinaryType",1487],[1,"u8"],[1,"slice"],[5,"StringType",1487],[6,"DataType",1487,5366],[5,"String",5367],[8,"ListChunked",1487],[5,"SortOptions",1401],[8,"IdxCa",1487,5368],[5,"SortMultipleOptions",1401],[8,"BinaryChunked",1487],[10,"PolarsIntegerType",1487],[6,"CastOptions",728],[10,"NumOpsDispatchCheckedInner",5197,5369],[1,"usize"],[8,"ChunkLenIter",39],[8,"ArrayRef",3998,5370],[5,"Vec",5371],[5,"MetadataProperties",817],[10,"DoubleEndedIterator",5372],[5,"Metadata",817],[8,"BooleanChunked",1487],[5,"Formatter",5373],[8,"Result",5373],[10,"Array",5370],[17,"Array"],[10,"IntoIterator",5374],[6,"Result",5375],[10,"FallibleIterator",5376],[5,"Bitmap",5377],[1,"tuple"],[10,"IntoParallelIterator",5378],[10,"TrustedLen",5379],[6,"AnyValue",1487,5380],[8,"IdxSize",3998,5381],[5,"MetadataFlags",817],[5,"ObjectType",1487],[10,"PolarsObjectSafe",1061],[10,"PolarsObject",1061],[1,"f32"],[1,"u64"],[5,"Int128Type",1487],[8,"DecimalChunked",1487,5382],[10,"Send",5365],[10,"Sync",5365],[10,"ExactSizeIterator",5383],[10,"PolarsFloatType",1487],[6,"IsSorted",4737,5384],[10,"PolarsIterator",778],[1,"i64"],[5,"Iter",5385],[1,"fn"],[5,"Map",5386],[6,"ChunkedArrayLayout",39],[10,"NumCast",5358],[5,"Scalar",1487,5380],[1,"f64"],[5,"Arc",3998,5387],[5,"Int64Type",1487],[10,"AsRef",5388],[5,"Int32Type",1487],[1,"i32"],[5,"Range",5389],[5,"UInt64Type",1487],[5,"UInt32Type",1487],[1,"u32"],[5,"Field",1487,5390],[10,"ParallelIterator",5378],[10,"IndexedParallelIterator",5378],[6,"QuantileInterpolOptions",3998,5391],[5,"RollingOptionsFixedWindow",3998,5392],[10,"Sized",5365],[17,"HasViews"],[5,"RandomState",5393],[5,"BytesHash",5394],[8,"ArrayView1",5395],[8,"Array2",5395],[8,"StringChunked",1487],[6,"Either",5396],[5,"TypeId",5397],[5,"NullableIdxSize",3998,5381],[10,"FnOnce",5364],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",438,5398],[10,"ChunkedBuilder",466],[5,"BinViewChunkedBuilder",466,5399],[10,"ViewType",5400],[5,"BooleanChunkedBuilder",466,5401],[5,"NullChunkedBuilder",466,5402],[5,"PrimitiveChunkedBuilder",466,5403],[10,"Clone",5404],[8,"StringChunkedBuilder",466,5399],[8,"BinaryChunkedBuilder",466,5399],[10,"NewChunkedArray",466],[5,"AnonymousListBuilder",574,5405],[5,"AnonymousOwnedListBuilder",574,5405],[5,"ListBooleanChunkedBuilder",574,5406],[5,"ListPrimitiveChunkedBuilder",574,5407],[10,"ListBuilderTrait",574],[5,"ListStringChunkedBuilder",574,5408],[5,"ListBinaryChunkedBuilder",574,5408],[5,"ListNullChunkedBuilder",574,5409],[5,"Box",5410],[10,"Hasher",5411],[10,"ChunkedCollectInferIterExt",758],[10,"ChunkedCollectIterExt",758],[10,"Canonical",772],[10,"ChunkedCollectParIterExt",774],[10,"FromParIterWithDtype",774],[5,"BooleanArray",5412],[5,"BoolIterNoNull",778],[5,"SomeIterator",778],[5,"MetadataEnv",817,5413],[10,"MetadataCollectable",817],[10,"MetadataTrait",817],[5,"Iter",5414],[5,"IterNames",5414],[5,"File",5415],[5,"Mutex",5416],[6,"MetadataMerge",817],[5,"ObjectArray",1061],[6,"ArrowDataType",1487,5417],[10,"Any",5397],[10,"Debug",5373],[5,"BitmapIter",5418],[6,"ZipValidity",5419],[8,"ObjectValueIter",1061],[5,"ObjectChunkedBuilder",1138],[8,"ObjectChunked",1487],[10,"AnonymousObjectBuilder",1161],[5,"ObjectRegistry",1161],[8,"ObjectConverter",1161],[8,"BuilderConstructor",1161],[17,"FuncRet"],[10,"ChunkApply",1189],[10,"ChunkApplyKernel",1189],[10,"ChunkSort",1189],[10,"ChunkUnique",1189],[10,"ChunkCast",1189],[6,"FillNullStrategy",1189],[10,"ChunkCompare",1189],[10,"ChunkExplode",1189],[5,"OffsetsBuffer",5420],[10,"ChunkFillNullValue",1189],[10,"ChunkFilter",1189],[10,"ChunkFull",1189],[10,"ChunkFullNull",1189],[10,"ChunkAnyValue",1189],[10,"IsFirstDistinct",1189],[10,"IsLastDistinct",1189],[10,"ChunkAgg",1189],[10,"ChunkQuantile",1189],[10,"ChunkExpandAtIndex",1189],[10,"ChunkReverse",1189],[10,"ChunkRollApply",1189],[10,"ChunkSet",1189],[10,"ChunkShift",1189],[10,"ChunkShiftFill",1189],[10,"ChunkVar",1189],[10,"ChunkTake",1189],[10,"ChunkTakeUnchecked",1189],[10,"ChunkBytes",1189],[10,"ChunkZip",1189],[10,"BinaryFnMut",1315],[10,"StaticArray",1487,5421],[10,"TernaryFnMut",1315],[10,"Error",5422],[10,"UnaryFnMut",1315],[5,"PrimitiveArray",5423],[6,"SearchSortedSide",1355],[10,"SlicedArray",3998,5424],[5,"NoNull",5233],[5,"RowsEncoded",5425],[8,"BinaryOffsetChunked",1487],[5,"NaiveDateTime",5426],[6,"PolarsError",3998,5359],[6,"Cow",5427],[8,"Float32Chunked",1487],[8,"Float64Chunked",1487],[10,"ArrayFromIter",1487,5428],[10,"ArrayFromIterDtype",1487,5428],[10,"AsRefDataType",1487,5366],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5429],[10,"From",5388],[5,"CategoricalChunked",2951,5430],[10,"CategoricalMergeOperation",2951,5431],[10,"LogicalType",1487,5432],[5,"Logical",1487,5432],[5,"OwnedObject",1487,5380],[6,"UnknownKind",1487,5366],[6,"TimeUnit",1487,5433],[5,"UInt8Type",1487],[5,"UInt16Type",1487],[5,"Int8Type",1487],[5,"Int16Type",1487],[5,"DateType",1487],[5,"TimeType",1487],[5,"BinaryOffsetType",1487],[5,"DecimalType",1487],[5,"DatetimeType",1487],[5,"DurationType",1487],[5,"CategoricalType",1487],[6,"ArrowTimeUnit",1487],[10,"ArrayCollectIterExt",3998,5428],[8,"Utf8ViewArray",5400],[8,"UInt32Chunked",1487],[5,"Error",5373],[10,"NumericNative",1487],[10,"Into",5388],[5,"ArrowField",3998],[6,"PrimitiveType",5434],[6,"IntegerType",5435],[10,"Borrow",5436],[8,"SmartString",1487],[10,"NoOption",5437],[10,"GetAnyValue",1487,5380],[8,"Int128Chunked",1487],[10,"IntoScalar",1487,5438],[6,"Ordering",5439],[6,"PhysicalType",5435],[8,"UInt8Chunked",1487],[8,"UInt16Chunked",1487],[8,"UInt64Chunked",1487],[8,"Int8Chunked",1487],[8,"Int16Chunked",1487],[8,"Int32Chunked",1487],[8,"Int64Chunked",1487],[8,"PlIdHashMap",1487,5368],[5,"CategoricalChunkedBuilder",2951,5440],[5,"GlobalRevMapMerger",2951,5431],[6,"RevMapping",3092,5441],[6,"CategoricalOrdering",3092,5441],[5,"CatIter",2951,5430],[1,"u128"],[5,"DataFrame",3288],[5,"StringCacheHolder",3147,5442],[5,"ErrString",3176,5359],[6,"PolarsWarning",3176,5443],[10,"Display",5373],[6,"FloatFmt",3256],[1,"i128"],[1,"char"],[5,"Schema",4662],[10,"IntoSeries",4737,5444],[6,"NullStrategy",3288],[6,"UniqueKeepStrategy",3288],[8,"PlHashSet",1487,5445],[5,"ArrowSchema",3998,5446],[5,"Row",3851],[5,"GroupBy",3592],[5,"RangeToInclusive",5389],[5,"RangeFull",5389],[5,"RangeTo",5389],[5,"RangeFrom",5389],[5,"RangeInclusive",5389],[5,"RecordBatchIter",3288],[5,"PhysRecordBatchIter",3288],[10,"IntoVec",5233],[10,"RangeBounds",5389],[8,"SchemaRef",4662],[6,"IndexOrder",3998,5447],[5,"StructArray",5448],[8,"RecordBatch",5449],[5,"UnpivotArgs",3562],[5,"GroupsIdx",3592,5361],[8,"IdxVec",5450],[6,"GroupByMethod",3592],[5,"SlicedGroups",3592,5361],[5,"GroupsProxyParIter",3592,5361],[10,"UnindexedConsumer",5451],[6,"GroupsIndicator",3592,5361],[8,"IdxItem",3592,5361],[10,"IntoGroupsProxy",3592,5452],[5,"Copied",5453],[5,"Zip",5454],[5,"GroupsProxyIter",3592,5361],[8,"GroupsSlice",3592,5361],[1,"array"],[8,"DynArgs",3998,5455],[10,"IsFloat",5456],[10,"NativeType",5457],[10,"AggList",3835,5458],[10,"TakeExtremum",3835],[10,"PhysicalAggExpr",3848],[6,"AnyValueBuffer",3851,5459],[6,"AnyValueBufferTrusted",3851,5459],[5,"BinaryArray",5460],[5,"IdHasher",3950,5461],[5,"IdxHash",3950,5461],[5,"HashMap",5462],[10,"BuildHasher",5411],[10,"VecHash",3950,5463],[10,"Allocator",5464],[5,"BorrowedFd",5465],[10,"AsFd",5465],[10,"AsRawFd",5466],[20,"MaybeUninit",5467],[10,"NumOpsDispatchChecked",3998,5369],[5,"ChunkId",3998,5381],[5,"RollingVarParams",3998,5455],[5,"RollingQuantileParams",3998,5455],[6,"NonExistent",3998,5468],[10,"Ord",5439],[5,"CStr",5469],[10,"Default",5470],[5,"Weak",5387],[10,"PartialEq",5439],[10,"Scalar",5471],[5,"Error",5472],[5,"TryReserveError",5473],[5,"Utf8Error",5474],[6,"Error",5475],[5,"PathBuf",5476],[5,"Path",5476],[1,"never"],[5,"CString",5477],[5,"OsStr",5478],[10,"ToOwned",5427],[5,"OsString",5478],[10,"FromData",4584,5479],[5,"Buffer",5480],[10,"FromDataUtf8",4584,5479],[10,"FromDataBinary",4584,5479],[5,"ListArray",5481],[6,"Ambiguous",3998,5468],[10,"NamedFromOwned",3998,5482],[10,"PartialOrd",5439],[10,"PolarsArray",3998,5483],[10,"Hash",5411],[10,"SeriesTrait",4737,5384],[10,"CloneToUninit",5404],[10,"ChunkAggSeries",3998,5484],[10,"QuantileAggSeries",3998,5485],[10,"IndexToUsize",3998,5486],[10,"NamedFrom",3998,5482],[5,"Pin",5487],[5,"Request",5422],[5,"BorrowedCursor",5488],[5,"IoSliceMut",5489],[6,"SeekFrom",5489],[10,"VarAggSeries",3998,5490],[5,"AllocError",5464],[5,"BTreeMap",5491],[5,"IoSlice",5489],[5,"AnonymousBuilder",4590,5492],[5,"Offsets",5420],[5,"MutableNullArray",4613,5493],[5,"MutableBitmap",5494],[5,"Utf8Array",5495],[8,"ArrowSchemaRef",5446],[10,"IndexOfSchema",4662],[8,"Metadata",5417],[5,"SeriesIter",4737,5496],[8,"SeriesPhysIter",4737,5496],[5,"Rc",5497],[10,"LhsNumOps",5172,5360],[10,"NumOpsDispatch",5172,5360],[6,"NullBehavior",5205],[10,"CustomIterTools",5233,5498],[10,"Container",5233],[5,"TrustMyLength",5233,5379],[10,"FromIteratorReversed",5499],[10,"FromTrustedLenIterator",5233,5498],[5,"Wrap",5233],[5,"LazyCompact",5500],[5,"SmartString",5501],[8,"FillNullLimit",1189],[10,"InitHashMaps",1487],[10,"InitHashMaps2",1487],[5,"TrueT",1487],[15,"IO",3241],[15,"Context",3241],[15,"Count",3832],[15,"Slice",3833],[10,"ListFromIter",3998],[10,"Utf8FromIter",4657],[10,"BinaryFromIter",4657],[6,"BitRepr",4737]],"r":[[0,5461],[4,5442],[13,5442],[16,5442],[31,5442],[438,5398],[466,5399],[467,5399],[468,5401],[471,5402],[472,5403],[473,5399],[574,5405],[575,5405],[576,5408],[577,5406],[579,5409],[580,5407],[581,5408],[827,5413],[1107,5502],[1386,5424],[1401,5424],[1488,5380],[1490,5428],[1491,5428],[1492,5428],[1493,5417],[1495,5366],[1511,5430],[1514,5430],[1515,5440],[1516,5431],[1517,5441],[1519,5366],[1520,5366],[1521,5366],[1532,5382],[1542,5390],[1543,5390],[1558,5380],[1560,5431],[1564,5368],[1565,5486],[1566,5368],[1567,5368],[1568,5445],[1569,5368],[1594,5438],[1606,5432],[1607,5432],[1625,5380],[1629,5445],[1630,5445],[1631,5368],[1632,5445],[1633,5445],[1639,5441],[1640,5380],[1643,5421],[1655,5433],[1656,5366],[1683,5366],[1882,5431],[1899,5432],[2028,5366],[2548,5431],[2549,5431],[2561,5366],[2645,5430],[2683,5430],[2951,5430],[2952,5430],[2953,5440],[2954,5431],[2955,5441],[2957,5431],[2961,5441],[2978,5431],[3044,5431],[3045,5431],[3063,5430],[3067,5430],[3092,5441],[3097,5441],[3147,5442],[3153,5442],[3156,5442],[3164,5442],[3166,5441],[3171,5441],[3172,5442],[3173,5442],[3174,5442],[3175,5442],[3182,5359],[3189,5359],[3190,5359],[3191,5443],[3205,5359],[3213,5359],[3220,5443],[3225,5359],[3226,5359],[3227,5359],[3228,5359],[3229,5359],[3230,5443],[3231,5359],[3245,5503],[3246,5503],[3247,5503],[3248,3950],[3592,5361],[3598,5361],[3599,5361],[3600,5361],[3601,5361],[3602,5361],[3603,5361],[3606,5361],[3608,5452],[3620,5361],[3835,5458],[3853,5459],[3854,5459],[3950,5461],[3951,5461],[3952,5461],[3953,5463],[3956,5463],[3957,5463],[3998,5468],[3999,5387],[4000,5398],[4001,5428],[4002,5370],[4004,5446],[4005,5399],[4006,5401],[4008,5430],[4009,5430],[4010,5440],[4011,5431],[4012,5441],[4013,5484],[4014,5381],[4015,39],[4016,466],[4017,758],[4018,758],[4022,3288],[4024,5455],[4028,5479],[4029,5479],[4030,5479],[4032,5431],[4035,5486],[4036,5381],[4037,5447],[4038,5486],[4039,5444],[4040,5233],[4042,5504],[4043,5504],[4044,5504],[4047,5360],[4049,5408],[4050,5406],[4051,574],[4052,5483],[4053,5407],[4054,5408],[4058,5482],[4059,5482],[4061,466],[4063,5468],[4067,5381],[4068,5381],[4069,5360],[4070,5369],[4074,5483],[4075,5359],[4076,778],[4077,1061],[4078,5359],[4079,5403],[4080,5485],[4081,5391],[4084,5441],[4085,5392],[4086,5455],[4087,5455],[4092,4737],[4093,5384],[4095,5424],[4097,5442],[4099,5399],[4101,3288],[4102,3562],[4103,5490],[4104,5463],[4150,5431],[4203,5483],[4206,0],[4219,5483],[4248,0],[4384,5486],[4427,5483],[4429,5431],[4430,5431],[4456,5483],[4462,5359],[4463,5359],[4464,5359],[4465,5359],[4477,5430],[4479,5483],[4485,5430],[4558,5483],[4584,5479],[4585,5479],[4586,5479],[4590,5492],[4613,5493],[4644,5441],[4649,5441],[4650,5424],[4653,5442],[4654,5442],[4655,5442],[4656,5442],[4657,5505],[4658,5505],[4739,5384],[4740,1189],[4743,5444],[4744,5384],[4745,5384],[4750,5496],[4751,5496],[4752,5384],[5172,5360],[5173,5360],[5174,5360],[5180,5360],[5197,5369],[5198,5369],[5235,5498],[5236,5498],[5237,5498],[5240,5379],[5251,5506],[5252,5506],[5284,5507],[5285,5508],[5304,5508],[5306,5509],[5321,5508],[5340,5508],[5350,5509]],"b":[[48,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add-for-%26ChunkedArray%3CT%3E"],[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat64Type%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkedArray%3CT%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[101,"impl-Container-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkedArray%3CT%3E"],[121,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[122,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[123,"impl-Div-for-ChunkedArray%3CT%3E"],[124,"impl-Div-for-%26ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[141,"impl-Debug-for-ChunkedArray%3CT%3E"],[142,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[155,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[158,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ChunkedArray%3CT%3E"],[227,"impl-Container-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkedArray%3CBooleanType%3E"],[237,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkedArray%3CBooleanType%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[249,"impl-ChunkedArray%3CBooleanType%3E"],[250,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[253,"impl-ChunkedArray%3CT%3E"],[254,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-Mul-for-ChunkedArray%3CT%3E"],[256,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[257,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[258,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[263,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[264,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[265,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[266,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[268,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[269,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[272,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[273,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[276,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[278,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[282,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[293,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[294,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[295,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[296,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[300,"impl-ChunkedArray%3CStringType%3E"],[301,"impl-ChunkedArray%3CListType%3E"],[302,"impl-ChunkedArray%3CListType%3E"],[303,"impl-ChunkedArray%3CStringType%3E"],[314,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[315,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[316,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[317,"impl-Rem-for-ChunkedArray%3CT%3E"],[336,"impl-ChunkedArray%3CT%3E"],[337,"impl-Container-for-ChunkedArray%3CT%3E"],[340,"impl-Container-for-ChunkedArray%3CT%3E"],[341,"impl-ChunkedArray%3CT%3E"],[344,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[345,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[346,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[347,"impl-Sub-for-ChunkedArray%3CT%3E"],[349,"impl-ChunkedArray%3CBooleanType%3E"],[350,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[353,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[354,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[355,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkedArray%3CT%3E"],[363,"impl-ChunkedArray%3CListType%3E"],[368,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[369,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[370,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[371,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[400,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[522,"impl-BinViewChunkedBuilder%3Cstr%3E"],[523,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[850,"impl-Flags-for-MetadataProperties"],[851,"impl-MetadataProperties"],[852,"impl-Flags-for-MetadataFlags"],[853,"impl-MetadataFlags"],[905,"impl-MetadataTrait-for-Metadata%3CT%3E"],[906,"impl-Metadata%3CT%3E"],[929,"impl-UpperHex-for-MetadataProperties"],[930,"impl-LowerHex-for-MetadataProperties"],[931,"impl-Binary-for-MetadataProperties"],[932,"impl-Debug-for-MetadataProperties"],[933,"impl-Octal-for-MetadataProperties"],[934,"impl-UpperHex-for-MetadataFlags"],[935,"impl-Debug-for-MetadataFlags"],[936,"impl-Binary-for-MetadataFlags"],[937,"impl-LowerHex-for-MetadataFlags"],[938,"impl-Octal-for-MetadataFlags"],[946,"impl-Flags-for-MetadataProperties"],[947,"impl-MetadataProperties"],[948,"impl-MetadataFlags"],[949,"impl-Flags-for-MetadataFlags"],[962,"impl-Metadata%3CT%3E"],[963,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1000,"impl-Metadata%3CT%3E"],[1001,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1005,"impl-Metadata%3CT%3E"],[1006,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1067,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1068,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1102,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1103,"impl-ObjectArray%3CT%3E"],[1118,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1119,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1129,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1130,"impl-ObjectArray%3CT%3E"],[1132,"impl-ObjectArray%3CT%3E"],[1133,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1135,"impl-ObjectArray%3CT%3E"],[1136,"impl-Array-for-ObjectArray%3CT%3E"],[1139,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1140,"impl-ObjectChunkedBuilder%3CT%3E"],[1142,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1143,"impl-ObjectChunkedBuilder%3CT%3E"],[1722,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1723,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1724,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1725,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1726,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1727,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1728,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1729,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1805,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1806,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1807,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1808,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1809,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1810,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2156,"impl-PartialEq-for-DataType"],[2157,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2165,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2166,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2167,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2168,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2171,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2172,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2173,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2174,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2212,"impl-Debug-for-AnyValue%3C\'a%3E"],[2213,"impl-Display-for-AnyValue%3C\'_%3E"],[2215,"impl-Debug-for-DataType"],[2216,"impl-Display-for-DataType"],[2218,"impl-Debug-for-TimeUnit"],[2219,"impl-Display-for-TimeUnit"],[2231,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2232,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2233,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2234,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2235,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2238,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2239,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2241,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2243,"impl-From%3C%26Field%3E-for-Field"],[2244,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2267,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2269,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2272,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2273,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2274,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2276,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2277,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2278,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2279,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2285,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2286,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2288,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2289,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2290,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2291,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2292,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2293,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2301,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2302,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2303,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2304,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2305,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2306,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2395,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2396,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2397,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2398,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2401,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2402,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2403,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2404,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2538,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2539,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2540,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2541,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2544,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2545,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2546,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2547,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2582,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2583,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2584,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2585,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2586,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2587,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2588,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2589,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2590,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2591,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2604,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2605,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2608,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2609,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2610,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2611,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2614,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2615,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2616,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2617,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2695,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2696,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2697,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2698,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2998,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2999,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3000,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3001,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3002,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3003,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3018,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3019,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3020,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3021,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3022,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3023,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3038,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3039,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3040,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3041,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3042,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3043,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3054,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3055,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3057,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3058,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3059,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3215,"impl-Debug-for-ErrString"],[3216,"impl-Display-for-ErrString"],[3309,"impl-Add%3C%26Series%3E-for-DataFrame"],[3310,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3311,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3354,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3355,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3356,"impl-Div%3C%26Series%3E-for-DataFrame"],[3386,"impl-Display-for-DataFrame"],[3387,"impl-Debug-for-DataFrame"],[3392,"impl-From%3C%26Schema%3E-for-DataFrame"],[3394,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3421,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3422,"impl-Index%3Cusize%3E-for-DataFrame"],[3423,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3424,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3425,"impl-Index%3C%26str%3E-for-DataFrame"],[3426,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3427,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3428,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3446,"impl-Container-for-DataFrame"],[3447,"impl-DataFrame"],[3453,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3454,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3455,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3456,"impl-DataFrame"],[3457,"impl-Container-for-DataFrame"],[3471,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3472,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3473,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3499,"impl-DataFrame"],[3500,"impl-Container-for-DataFrame"],[3504,"impl-Container-for-DataFrame"],[3505,"impl-DataFrame"],[3508,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3509,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3510,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3529,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3530,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3709,"impl-Debug-for-GroupByMethod"],[3710,"impl-Display-for-GroupByMethod"],[3716,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3717,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3718,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3753,"impl-IntoIterator-for-GroupsIdx"],[3754,"impl-IntoIterator-for-%26GroupsIdx"],[3756,"impl-IntoParallelIterator-for-GroupsIdx"],[3757,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4121,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4122,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4210,"impl-Default-for-Arc%3Cstr%3E"],[4211,"impl-Default-for-Arc%3CCStr%3E"],[4212,"impl-Default-for-Arc%3CT%3E"],[4213,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4267,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4268,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4269,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4302,"impl-Debug-for-PolarsError"],[4303,"impl-Display-for-PolarsError"],[4306,"impl-Debug-for-Arc%3CT,+A%3E"],[4307,"impl-Display-for-Arc%3CT,+A%3E"],[4308,"impl-Pointer-for-Arc%3CT,+A%3E"],[4318,"impl-From%3CError%3E-for-PolarsError"],[4319,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4321,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4322,"impl-From%3CError%3E-for-PolarsError"],[4326,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4327,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4329,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4331,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4332,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4333,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4334,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4335,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4336,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4337,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4338,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4339,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4340,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4341,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4342,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4682,"impl-From%3CArrowSchema%3E-for-Schema"],[4683,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4684,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4685,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4686,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4687,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4758,"impl-Add-for-%26Series"],[4759,"impl-Add%3CT%3E-for-Series"],[4760,"impl-Add%3CT%3E-for-%26Series"],[4761,"impl-Add-for-Series"],[4832,"impl-Div-for-%26Series"],[4833,"impl-Div%3CT%3E-for-%26Series"],[4834,"impl-Div%3CT%3E-for-Series"],[4835,"impl-Div-for-Series"],[4847,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4848,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4849,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4850,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4851,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4852,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4869,"impl-Debug-for-Series"],[4870,"impl-Display-for-Series"],[4883,"impl-FromIterator%3C%26u64%3E-for-Series"],[4884,"impl-FromIterator%3C%26f32%3E-for-Series"],[4885,"impl-FromIterator%3Cbool%3E-for-Series"],[4886,"impl-FromIterator%3Cu32%3E-for-Series"],[4887,"impl-FromIterator%3C%26bool%3E-for-Series"],[4888,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4889,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4890,"impl-FromIterator%3C%26str%3E-for-Series"],[4891,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4892,"impl-FromIterator%3C%26f64%3E-for-Series"],[4893,"impl-FromIterator%3Cf32%3E-for-Series"],[4894,"impl-FromIterator%3CString%3E-for-Series"],[4895,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4896,"impl-FromIterator%3Cf64%3E-for-Series"],[4897,"impl-FromIterator%3C%26i64%3E-for-Series"],[4898,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4899,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4900,"impl-FromIterator%3Ci32%3E-for-Series"],[4901,"impl-FromIterator%3C%26u32%3E-for-Series"],[4902,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4903,"impl-FromIterator%3C%26i32%3E-for-Series"],[4904,"impl-FromIterator%3Cu64%3E-for-Series"],[4905,"impl-FromIterator%3Ci64%3E-for-Series"],[4906,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4907,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4908,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4909,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4910,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4911,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4926,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4927,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4928,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4929,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4930,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4931,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4973,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4974,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4975,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4976,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4977,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4978,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4992,"impl-Mul%3CT%3E-for-%26Series"],[4993,"impl-Mul-for-Series"],[4994,"impl-Mul-for-%26Series"],[4995,"impl-Mul%3CT%3E-for-Series"],[5002,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5003,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5004,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5005,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5006,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5007,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5008,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5009,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5010,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5011,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5012,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5013,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5014,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5015,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5016,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5017,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5018,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5019,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5020,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5021,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5022,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5023,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5024,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5025,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5026,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5027,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5028,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5029,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5030,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5031,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5032,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5033,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5034,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5035,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5036,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5041,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5042,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5043,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5044,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5045,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5046,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5055,"impl-Rem%3CT%3E-for-%26Series"],[5056,"impl-Rem-for-%26Series"],[5057,"impl-Rem%3CT%3E-for-Series"],[5089,"impl-Sub-for-Series"],[5090,"impl-Sub%3CT%3E-for-Series"],[5091,"impl-Sub-for-%26Series"],[5092,"impl-Sub%3CT%3E-for-%26Series"],[5114,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5115,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5116,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5117,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5296,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5297,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5299,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5300,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5302,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5303,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAC0OeQ62DrkOug67DrwOvQ7CDsUOyg7LDvAO","e":"OzAAAAEAANsPCgIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBiAAQAagADAG8AAQB1AA0AhQADAIoAAQCNAAUAlQABAJkABgCiAAMAqAADAK0ABQC0AAEAuQAFAMEAAgDHAAQAzQADANQAAgDZAAEA3AAGAOQAAADpAAwA+gADAAABBgAIARkAJgEDACsBAAAtAQQAMwEBADkBAAA7AQQAQQEAAEYBBQBOAQEAUgEDAFcBCQBnAQEAbQEAAHEBCAB7AQgAhQEAAIcBBQCPAQAAkQEjALYBKQDkAQIA6gEnABgCBQAiAgAAJAImAE0CTAChAgwAtQIkAN0CDwDuAgEA8QIZAA4DCQAaAwEAHgMBACEDJwBTAwAAVQMAAFsDGQB5AwwAiAMAAIoDBwCUAwMAmgMBAJ4DDQCzAwAAtgMAALkDAQC/Aw0A2AMBANwDAADfAwIA5gMFAO0DAwD3AwsACQQDAA8EDgAgBAcAKgQWAEIEBwBLBAAATgQBAFEEAQBWBBAAaAQAAGoEAABtBAIAcQQDAHYEAQB5BAcAggQAAIQEBQCMBAEAjwQAAJEEAQCUBAMAmQQDAJ4EAgCiBAMAqAQAAKsEAACzBAAAuAQAALsEAQDABAEAwwQAAMYEAADQBAAA2QQCAN8EBwDpBAIA7gQBAPEEAADzBAEA+QQBAPwEAQADBQEACQUAAAwFAAAPBQAAEQUAABMFAAAVBQAAGgUEACEFAQAkBQcALQUCADMFAAA1BQMAOgUBAD0FBQBJBRcAYgUBAGYFBABsBQMAcwUGAH0FEgCSBQsAnwUBAKIFAwCyBQkAyAUNANgFAgDcBQUA5AUAAOYFDAD2BQAA+AUAAP0FAQAABgAAAgYCAAYGAAAIBgAACwYAAA4GAAAQBgEAEwYAABUGAgAZBgwAJwYAACkGAQAsBgAALgYBADEGAAAzBgEANgYAADgGAQA7BgEAQAYAAEQGAQBIBgAASwYAAE0GAABPBgMAVAYAAFcGCABhBgEAZAYFAGwGAQBwBgAAcgYAAHcGAgB7BgEAfgYAAIAGAQCDBgAAhQYBAIgGAACKBgEAjQYAAI8GAQCSBgAAlAYAAJcGOwDZBgQA4AYJAOwGBADyBggA/AYAAP4GYABgB4QA5gcHAO8HdgBnCAEAaghFALgIBAC/CAEAwggAAMQIAgDcCAAA3ggAAOAIFwD8CCQAIwkGACwJHgBRCUAAlAkAALgJCwDGCQAAyAkBAMsJAQDOCQAA0wkFANoJAADdCQIA4gkDAOcJAADpCR0ACAoJABMKDgAjChwAQQoGAEkKGgBlChUAfAoLAIkKAACOCgAAkAoAAJUKHQC1CgIAuQpRAAwLLAA6C0wAiAsEAI4LAQCRCwIAlQsEAJsLJADHCwIAywsJANkLAwDeCxcA+AsBAPsLBAABDA0AEAwFABcMAAAZDBgAMwwBADkMAgA+DAEAQgwJAE0MBABTDAEAWAwAAFoMAgBeDAEAYQwAAGMMAQBpDAQAbwwEAHUMEACHDAoAkwwAAJUMAgCaDAQAoAwmAMgMBQDPDAkA3AwAAN8MCgDrDAUA9gwWAA8NEgAjDQAAKg0BAC4NAgAyDQAANA0AADkNAwBBDQAAQw0BAFMNAABWDQEAXg0MAHENAQB3DQAAeg0AAH4NAgCCDQAAhg0BAJANAgCYDQAAmw0AAKENAACqDQEArQ0BALENAACzDQQAvg0EAMYNBgDPDQkA2g0AAOANBADsDQ4A/A0CAAAOAAACDgkADQ4BABAOAwAVDgMAGg4JACUOBwAuDgEAMQ4dAFAOKAB6DgYAhQ4CAIkOAACNDgMAkw4AAJgOBwCoDg0Atw4BAL4OAwDDDgEAxw4CAMwOAADODh8A8Q4MAAAPBQAHDwcAEA8WACkPDgA5Dw4ASQ8AAEsPAABNDwMAVA8GAF4PDgBvDwEAcg8RAIYPBACODwUAlg8JAKEPAgCmDwcArw8LALwPAwDBDxYA2Q8HAOIPBQDpDxYAAxARABYQAAAYEAEAHBAcADsQAgA/ECQAZRAGAG8QAQB3ECIAnRADAKIQCQCtEB0AzRATAOIQAgDrEAAA/BAAAAIRAAAFEQAADBEAAA8RAAAUEQEAFxEGACAREQBCEQMARxECAEsRAQBOEQEAaRECAG8RBAB2EQAAeREHAIMRAACFEQEAihEtAMERDADPEQAA0REMAOMRCQDvEQYA9xEAAPkRHQAYEgAAGhILACcSAAApEgEAMhIEADkSBgBBEggASxIHAFkSAQBcEgEAYBIBAHQSAAB2EgAAeBIAAHwSAwCCEgUAiRIEAI8SBQCXEgQAoRIAAKcSAgCvEgUAthIJAMMSAwDIEgAAzBICANASBADXEhIA7hIBAPESAQD0EgEA+BICAAUTAwANEwAAEBMBABMTHgA1EwAANxMBAD8TAABBEwAAQxMBAEYTAABMEwEATxMDAFcTAwBjEwMAaBMAAGoTAABvEwIAcxMAAHkTAACBEwMAhxMAAIsTBwCUExkAsBMBALMTAQC2EwEAuhMBAMATAgDFEwAAxxMAAMsTAgDSEwEA1RMAANcTAQDaEwAA4BMAAOITAwDyEwEA9RMOAAUUBAARFAAAFhQDABsUAAAeFAsAKxQAAC0UAAAvFAQANRQaAFMUAgBYFBAAahQBAG0UCgB5FAQAgBQAAIMUAACGFAsAkxQCAJgUDACnFAUAsBQIALoUBQDDFBAA1hQAANgUAADaFAIA3hQIAOgUBAA="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCMCNNNNNNNNNONNNNNNNNMCMMNNNNNNONNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","data_pagesize_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","POLARS_TEMP_DIR_BASE_PATH","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[84,"polars_io::avro"],[152,"polars_io::cloud"],[224,"polars_io::cloud::options"],[411,"polars_io::csv"],[413,"polars_io::csv::read"],[673,"polars_io::csv::read::schema_inference"],[700,"polars_io::csv::write"],[844,"polars_io::file_cache"],[865,"polars_io::ipc"],[1124,"polars_io::json"],[1222,"polars_io::mmap"],[1244,"polars_io::ndjson"],[1246,"polars_io::ndjson::core"],[1339,"polars_io::parquet"],[1342,"polars_io::parquet::metadata"],[1395,"polars_io::parquet::read"],[1535,"polars_io::parquet::write"],[1763,"polars_io::partition"],[1779,"polars_io::pl_async"],[1800,"polars_io::predicates"],[1854,"polars_io::prelude"],[1864,"polars_io::utils"],[1877,"dyn_clone::sealed"],[1878,"polars_io::options"],[1879,"polars_io::shared"],[1880,"alloc::boxed"],[1881,"std::io"],[1882,"core::result"],[1883,"serde::de"],[1884,"std::path"],[1885,"polars_core::frame"],[1886,"polars_error"],[1887,"core::fmt"],[1888,"core::hash"],[1889,"polars_arrow::record_batch"],[1890,"core::option"],[1891,"serde::ser"],[1892,"core::any"],[1893,"polars_io::avro::read"],[1894,"polars_arrow::datatypes::schema"],[1895,"polars_io::avro::write"],[1896,"polars_core::schema"],[1897,"alloc::string"],[1898,"alloc::vec"],[1899,"polars_io::cloud::glob"],[1900,"object_store"],[1901,"alloc::sync"],[1902,"polars_io::cloud::polars_object_store"],[1903,"object_store::path"],[1904,"tokio::io::async_write"],[1905,"core::marker"],[1906,"polars_io::cloud::adaptors"],[1907,"std::io::error"],[1908,"crossterm::command"],[1909,"url"],[1910,"bytes::bytes"],[1911,"core::ops::range"],[1912,"core::ops::function"],[1913,"parquet_format_safe::thrift::varint::decode"],[1914,"object_store::aws::builder"],[1915,"object_store::azure::builder"],[1916,"object_store::gcp::builder"],[1917,"core::convert"],[1918,"core::iter::traits::collect"],[1919,"polars_io::csv::read::reader"],[1920,"polars_io::csv::read::read_impl::batched"],[1921,"polars_io::csv::read::options"],[1922,"std::fs"],[1923,"polars_core::datatypes::dtype"],[1924,"polars_utils::aliases"],[1925,"polars_io::csv::write::writer"],[1926,"polars_io::csv::write::options"],[1927,"core::num::nonzero"],[1928,"polars_io::file_cache::entry"],[1929,"polars_io::ipc::ipc_stream"],[1930,"polars_io::ipc::write"],[1931,"futures_io::if_std"],[1932,"polars_io::ipc::ipc_file"],[1933,"polars_io::ipc::ipc_reader_async"],[1934,"polars_arrow::io::ipc::read::file"],[1935,"polars_arrow::array::struct_"],[1936,"polars_arrow::array"],[1937,"polars_arrow::datatypes"],[1938,"polars_arrow::datatypes::field"],[1939,"polars_arrow::array::struct_::mutable"],[1940,"polars_arrow::array::growable::structure"],[1941,"polars_arrow::bitmap::immutable"],[1942,"polars_arrow::scalar"],[1943,"polars_arrow::array::struct_::iterator"],[1944,"polars_arrow::bitmap::utils::iterator"],[1945,"polars_arrow::bitmap::utils::zip_validity"],[1946,"polars_parquet::parquet::metadata::file_metadata"],[1947,"polars_parquet::parquet::metadata::column_order"],[1948,"polars_parquet::parquet::metadata::row_metadata"],[1949,"polars_parquet::arrow::read::statistics"],[1950,"parquet_format_safe::parquet_format"],[1951,"polars_parquet::parquet::metadata::schema_descriptor"],[1952,"polars_parquet::parquet::error"],[1953,"polars_io::parquet::read::reader"],[1954,"polars_io::parquet::read::read_impl"],[1955,"polars_io::parquet::read::options"],[1956,"polars_core::series"],[1957,"polars_io::parquet::write::writer"],[1958,"polars_io::parquet::write::batched_writer"],[1959,"polars_io::parquet::write::options"],[1960,"polars_parquet::arrow::write"],[1961,"polars_parquet::parquet::write"],[1962,"core::iter::traits::iterator"],[1963,"polars_parquet::arrow::write::file"],[1964,"std::sync::mutex"],[1965,"core::future::future"],[1966,"tokio::runtime::task::join"],[1967,"polars_core::datatypes::field"],[1968,"avro_schema::file"],[1969,"polars_io::cloud::object_store_setup"],[1970,"polars_io::csv::read::parser"],[1971,"polars_io::csv::read::utils"],[1972,"polars_io::file_cache::cache"],[1973,"polars_io::file_cache::utils"],[1974,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,0,16,8,5,6,5,6,5,6,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,47,39,43,47,39,43,39,0,43,43,43,39,47,39,43,47,39,43,43,47,47,39,43,39,47,39,47,39,43,47,39,43,39,43,43,43,0,43,47,39,43,47,39,43,47,39,43,47,0,39,47,39,47,43,47,39,43,47,39,43,47,39,43,47,39,43,47,47,61,60,61,0,62,61,63,63,0,60,62,60,60,61,62,61,61,0,0,60,60,61,60,60,60,61,60,60,61,61,63,63,0,63,60,60,61,61,61,60,60,61,60,62,62,60,61,60,61,60,61,61,61,60,60,38,61,62,60,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,60,38,61,62,60,38,61,62,60,60,38,61,61,62,62,38,60,38,63,61,62,60,38,63,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,60,60,38,38,38,61,61,61,62,62,62,38,60,38,61,62,60,38,63,61,62,60,63,61,62,38,60,38,61,62,60,38,63,61,62,60,38,63,61,62,38,60,38,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,0,0,78,78,0,0,0,0,0,0,76,77,78,0,0,77,76,74,75,76,77,78,68,68,68,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,74,75,76,77,78,74,75,76,77,78,74,75,76,76,77,78,74,75,0,75,74,75,76,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,75,74,75,76,77,78,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,68,74,75,76,77,78,73,72,68,74,75,76,77,77,78,74,74,74,75,76,77,78,74,0,74,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,0,74,74,75,74,74,68,77,77,77,73,72,75,74,74,74,75,74,74,74,74,74,0,74,75,74,75,76,77,78,74,74,74,75,76,77,78,75,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,73,72,68,74,75,76,77,78,74,73,72,68,74,75,76,77,78,74,74,75,75,74,75,75,74,74,74,74,75,74,74,75,74,74,74,75,74,74,74,74,74,74,75,74,74,75,75,0,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,89,0,0,0,89,89,89,0,0,87,88,89,87,85,85,86,87,88,89,85,86,87,88,89,87,88,89,87,88,89,87,88,89,89,88,88,87,88,89,85,86,87,88,89,85,86,87,88,89,87,88,89,85,86,87,88,89,87,88,89,87,87,87,88,88,88,89,89,89,85,86,88,87,88,89,85,86,87,88,89,87,88,89,85,87,85,87,85,86,87,88,89,85,86,87,88,89,88,87,85,85,88,88,88,88,87,88,89,87,88,87,88,89,85,86,87,88,89,85,86,87,88,89,85,86,87,88,89,85,86,87,88,89,85,85,85,85,85,85,85,85,85,85,86,0,0,0,92,92,92,92,92,92,0,92,0,92,92,92,92,92,92,92,92,92,0,0,0,0,0,0,0,0,0,0,0,0,101,101,98,99,100,101,93,94,94,107,102,93,108,105,94,95,106,98,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,98,99,100,101,98,99,100,101,98,99,100,100,101,101,100,102,105,106,102,105,106,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,98,100,101,107,102,93,108,105,94,95,106,98,99,100,101,98,100,101,100,100,100,101,101,101,105,106,107,93,108,94,95,107,98,100,101,107,102,93,108,105,94,95,106,98,99,100,101,102,98,100,101,107,102,93,108,105,94,95,106,98,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,100,98,107,102,107,93,108,105,94,106,94,107,93,98,100,101,107,93,98,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,107,102,93,108,105,94,95,106,98,99,100,101,107,93,108,105,94,106,105,106,107,93,108,94,99,107,93,99,107,93,99,99,95,0,114,0,114,0,0,0,110,114,111,113,112,110,114,111,113,112,110,110,110,110,110,110,114,111,113,112,110,114,111,113,112,110,110,114,111,113,112,110,110,110,110,110,111,112,110,114,111,113,112,110,110,112,114,111,113,112,110,114,111,113,112,110,110,111,113,112,110,112,110,114,111,113,112,110,114,111,113,112,110,114,111,113,112,110,114,111,113,112,110,112,112,111,112,112,112,112,113,84,84,0,84,0,84,84,84,84,84,84,84,84,84,84,70,70,0,84,84,84,84,0,0,0,0,117,117,117,117,117,120,117,120,117,117,117,117,117,117,120,117,120,117,120,117,120,117,117,117,117,120,117,120,117,117,117,120,117,120,120,117,120,117,117,117,117,117,120,120,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,120,117,120,117,117,120,117,117,117,117,117,120,117,120,120,120,120,120,120,120,120,120,120,120,117,117,0,0,0,0,0,0,131,134,131,134,131,131,131,131,131,131,131,134,131,134,131,0,134,134,131,134,134,131,134,134,131,134,131,134,131,131,131,131,134,134,134,131,131,131,131,131,134,131,131,134,131,134,131,131,134,131,144,0,144,144,0,0,0,0,144,143,144,140,142,141,140,142,143,144,141,140,142,143,144,143,144,143,144,143,143,144,144,144,141,140,142,143,144,141,140,142,143,144,143,144,141,140,142,143,144,143,144,143,143,143,144,144,144,140,142,141,143,144,141,140,142,143,144,142,140,142,143,144,141,140,142,143,144,141,140,142,143,144,141,141,141,143,0,141,140,141,140,142,143,140,142,141,140,142,143,144,140,140,142,143,144,141,140,142,143,144,141,140,142,143,144,141,140,142,143,144,140,142,143,141,140,142,143,144,140,140,142,140,142,140,142,140,142,140,142,140,0,150,0,150,0,150,150,0,0,0,0,150,0,150,150,0,149,150,151,152,153,154,147,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,149,150,151,152,153,154,149,150,151,152,153,154,149,149,150,150,151,151,152,152,153,153,154,154,149,149,149,150,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,149,150,151,152,153,154,154,148,147,149,150,151,152,153,154,154,148,149,150,151,152,153,154,149,149,149,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,154,148,149,150,151,152,153,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,154,154,149,154,154,147,154,149,149,150,151,152,153,154,147,149,149,150,151,152,153,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,151,152,153,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,147,147,147,147,148,148,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,163,163,163,163,163,163,163,163,0,163,163,165,163,163,163,0,163,163,0,0,0,0,0,0,69,169,168,169,168,168,169,168,169,168,169,168,169,168,169,69,169,168,169,168,169,169,169,169,169,168,169,168,169,168,169,168,169,168,168,169,168,167,169,169,169,169,168,169,168,169,168,169,168,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}`{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}`{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{Ef}}{b{Eh}}{b{hc}}}{{Bd{f}}}{EjEl}}{{{b{hEn}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hEn}}}{{Fd{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{Ff}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{Fj{Af}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{b{{Fl{{Fj{Af}}}}}}}{{Bd{{Dh{Fh}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fn}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{En}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Eh}{{Bd{En}}}}``{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hc}}i}{{Ah{gF`}}}{}{}{}{{Gb{{b{he}}}{{G`{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEn}}{b{{Fl{Gd}}}}}{{Fd{Af}}}}{{{b{hc}}e}{{Ah{AfF`}}}{}Gf}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gh}}}{{b{Dj}}}}{{{b{Gj}}}{{b{Dj}}}}{{{b{Gl}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Gh}}}Gh}{{{b{Dl}}}Dl}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}000000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Gh}}}Aj}{c{{Ah{Dl}}}Aj}{c{{Ah{Gj}}}Aj}{c{{Ah{Gl}}}Aj}{Aff}0000{{{b{Gh}}{b{Gh}}}Al}{{{b{Dl}}{b{Dl}}}Al}{{{b{Gn}}{b{Gn}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gl}}{b{Gl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000`{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gj}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gl}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}}{{Ah{Gnc}}}{}}{{{b{Dj}}}{{Ah{Gj}}}}{{{b{Dj}}}{{Ah{Gl}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{H`{Dj}}}{{Hb{Df}}}{{Hf{}{{Hd{{Ed{ce}}}}}}}}{{{b{Gh}}{b{hc}}}fBj}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gj}}{b{hc}}}fBj}{{{b{Gl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Gh}}c}AhCd}{{{b{Dl}}c}AhCd}{{{b{Gj}}c}AhCd}{{{b{Gl}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Ghc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Gjc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Glc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hh{c}}{Cb{{Eb{Hj}}}}}{{Hh{c}}}Hl}{{{Hh{{Ab{Hl}}}}{Cb{Hn}}}{{Bd{I`}}}}{{{b{h{Hh{c}}}}}{{Bd{Ib}}}Hl}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{c}}{b{he}}}f{}{}}0000{{{b{c}}}f{}}00000``{{{b{An}}Gd{Cb{Gd}}{Cb{{b{Ij}}}}GdAl}{{Bd{Af}}}}`{{}Id}{{}If}{{}Ih}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{c{{Ah{Ij}}}Aj}{c{{Ah{Il}}}Aj}{Aff}0000000```{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{Ij}}{b{Ij}}}Al}{{{b{Il}}{b{Il}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hh{c}}}{{Bd{Bb}}}Hl}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{{{b{Ij}}{b{hBf}}}Bh}{{{b{Il}}{b{hBf}}}Bh}{cc{}}000000{{{b{Dj}}}Ij}1{{{b{Id}}}{{Eb{If}}}}`{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}{{{b{Ij}}{b{hc}}}fBj}{{{b{Il}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{Idc}{{Hh{c}}}Hl}{{{b{{Fl{Gd}}}}}Al}`{{Idc}Id{{In{If}{{G`{If}}}}}}```{c{{Hh{c}}}Hl}<{DfIj}{GdIj}{{{b{hIb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hI`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}{{{b{Ij}}c}AhCd}{{{b{Il}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{Id{Cb{An}}}{{Bd{{Hh{J`}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hId}}{b{Jb}}}f}{ce{}{}}0000000{{IdAf}Id}{{Id{Cb{{Eb{{Fl{Df}}}}}}}Id}{{If{Cb{c}}}If{{Hb{Ij}}}}{{IfAl}If}{{Id{Cb{{Eb{{Dh{Jd}}}}}}}Id}{{IfIh}If}{{IfGd}If}{{IdAl}Id}0{{Id{Cb{Af}}}Id}1500{{If{Cb{Il}}}If}{{IdIf}Id}{{Id{Cb{c}}}Id{{Hb{An}}}}{{Id{Cb{{Eb{{Dh{Af}}}}}}}Id}{{If{Cb{Gd}}}If}66{{Id{Cb{j}}}Id}>{{Id{Cb{Hn}}}Id}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Jb}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{{Jf{Jd}}}}}Jd}{{{b{Jb}}{b{hBf}}}Bh}{cc{}}{{{b{Jb}}}Af}{{{b{Jb}}}Hn}{{{b{Dj}}AlAl}Jd}{{{b{Jh}}Gd{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{Ij}}}}{Cb{Gd}}Gd{Cb{{b{Il}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jh}}{b{Id}}}{{Bd{Jb}}}}1{{{b{c}}}Cf{}}4{{JbHn}Jb}`````````{{{b{c}}d}f{}}00`{{{Jj{c}}{b{Dd}}}{{Bd{{Jl{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jn}}}Jn}{{{b{K`}}}K`}{{{b{Kb}}}Kb}{{{b{c}}{b{he}}}f{}{}}00{{{b{c}}}f{}}000``{{}Jn}{{}K`}{{}Kb}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jn}}}Aj}{c{{Ah{K`}}}Aj}{c{{Ah{Kb}}}Aj}{Aff}0000{{{b{Jn}}{b{Jn}}}Al}{{{b{K`}}{b{K`}}}Al}{{{b{Kb}}{b{Kb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jj{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jl{c}}}}}{{Bd{f}}}Ad}`{{{b{Jn}}{b{hBf}}}Bh}{{{b{K`}}{b{hBf}}}Bh}{{{b{Kb}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jn}}{b{hc}}}fBj}{{{b{K`}}{b{hc}}}fBj}{{{b{Kb}}{b{hc}}}fBj}{{{Jj{c}}Al}{{Jj{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jj{c}}Af}{{Jj{c}}}Ad}{c{{Jj{c}}}Ad}````{{{b{Jn}}c}AhCd}{{{b{K`}}c}AhCd}{{{b{Kb}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jj{c}}Kd}{{Jj{c}}}Ad}{{{Jj{c}}{Cb{Df}}}{{Jj{c}}}Ad}0{{{Jj{c}}{Cb{Af}}}{{Jj{c}}}Ad}{{{Jj{c}}Df}{{Jj{c}}}Ad}0{{{Jj{c}}Gd}{{Jj{c}}}Ad}{{{Jj{c}}Kb}{{Jj{c}}}Ad}14{{{b{h{Jl{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{cc{}}{{}Kf}{{}Af}{{c{Cb{{b{Dl}}}}}{{Bd{{Dh{{Eb{Kh}}}}}}}{{H`{{Fl{{Eb{Dj}}}}}}}}{ce{}{}}{c{{Ah{e}}}{}{}}0{{{b{Kh}}}{{Bd{J`}}}}0{{{b{c}}}Cf{}}{{{b{Kh}}Kf}f}{{{b{Kh}}}{{b{{Eb{Dj}}}}}}5``````````````{{{b{c}}d}f{}}000{{{b{h{Kj{c}}}}}{{Bd{Cj}}}Bl}{{{Kl{c}}{b{Dd}}}{{Bd{{Kn{c}}}}}Ad}{{{Kl{c}}{b{Dd}}}{{Bd{{`{c}}}}}{L`ElLb}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}00000`{{{b{Ll}}{Cb{{b{Ln}}}}}{{Bd{M`}}}}{{{b{Mb}}c}{{Ab{A`}}}Ad}{{{b{Md}}c}{{Ab{A`}}}Ad}{{{b{Ll}}{Cb{{b{Ln}}}}LfAl}{{Bd{Bb}}}}{{}Mb}{{}Md}{{}Lf}{{}Lh}{{}Lj}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Ld}}}Aj}{c{{Ah{Lh}}}Aj}{c{{Ah{Lj}}}Aj}{Aff}00000000000{{{b{Ld}}{b{Ld}}}Al}{{{b{Lh}}{b{Lh}}}Al}{{{b{Lj}}{b{Lj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Mb}}}An}{{{b{Md}}}An}{{{Mf{c}}}{{Bd{Bb}}}Hl}{{{Kj{c}}}{{Bd{Bb}}}Bl}{{{b{h{Mh{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kl{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kn{c}}}}}{{Bd{f}}}Ad}{{{Mf{c}}{Cb{{Eb{Hj}}}}Al}{{Bd{Bb}}}Hl}{{{b{Ld}}{b{hBf}}}Bh}{{{b{Lh}}{b{hBf}}}Bh}{{{b{Lj}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Ll}}}}{{{b{Ld}}{b{hc}}}fBj}{{{b{Lh}}{b{hc}}}fBj}{{{b{Lj}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Mf{c}}{Cb{An}}}{{Mf{c}}}Hl}{{{b{Ll}}}{{Bd{Ln}}}}{c{{Mf{c}}}Hl}{c{{Kj{c}}}Bl}{c{{Mh{c}}}Ad}{{}Mb}{c{{Kl{c}}}Ad}{{}Md}{c{{Kl{c}}}{L`ElLb}}{{{b{h{Mf{c}}}}}{{Bd{Mj}}}Hl}{{{b{h{Kj{c}}}}}{{Bd{Dd}}}Bl}{{{b{Ld}}c}AhCd}{{{b{Lh}}c}AhCd}{{{b{Lj}}c}AhCd}{{{Mf{c}}Al}{{Mf{c}}}Hl}{{{Kj{c}}Al}{{Kj{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Mf{c}}{Cb{{Dh{Df}}}}}{{Mf{c}}}Hl}{{{Kj{c}}{Cb{{Dh{Df}}}}}{{Kj{c}}}Bl}{{{Mh{c}}{Cb{Lj}}}{{Mh{c}}}{}}{{Mb{Cb{Lj}}}Mb}{{{Kl{c}}{Cb{Lj}}}{{Kl{c}}}Ad}{{Md{Cb{Lj}}}Md}{{MbAn}Mb}{{MdAn}Md}{{{Mf{c}}{Cb{Af}}}{{Mf{c}}}Hl}{{{Kj{c}}{Cb{Af}}}{{Kj{c}}}Bl}{{{Mh{c}}Al}{{Mh{c}}}{}}{{{Kl{c}}Al}{{Kl{c}}}Ad}{{Lfc}Lf{{Hb{{Cb{{Eb{Hj}}}}}}}}{{{Mf{c}}{Cb{{Dh{Af}}}}}{{Mf{c}}}Hl}{{{Kj{c}}{Cb{{Dh{Af}}}}}{{Kj{c}}}Bl}{{Lf{Cb{{Eb{{Fl{Df}}}}}}}Lf}{{{Mf{c}}{Cb{j}}}{{Mf{c}}}Hl}{{{Kj{c}}{Cb{j}}}{{Kj{c}}}Bl}{{Lfc}Lf{{Hb{{Cb{j}}}}}}{{Lfc}Lf{{Hb{{Cb{Af}}}}}}{{{b{h{Kn{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Ml}}}Ml}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{{}Ml}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Ml}}}Aj}{Aff}0000{{{b{Ml}}{b{Ml}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Mn{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{N`{c}}}{{Bd{Bb}}}Hl}{{{b{Ml}}{b{hBf}}}Bh}{cc{}}0000{{{b{Ml}}{b{hc}}}fBj}{{{N`{c}}{Cb{Kd}}}{{N`{c}}}Hl}{{}Af}0000{ce{}{}}0000`{c{{Mn{c}}}Ad}{c{{Nb{c}}}Ad}{c{{N`{c}}}Hl}{{{b{Ml}}c}AhCd}{{{N`{c}}Al}{{N`{c}}}Hl}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{N`{c}}Kd}{{N`{c}}}Hl}4{{{Mn{c}}Nd}{{Mn{c}}}Ad}{{{N`{c}}Nd}{{N`{c}}}Hl}{{{N`{c}}{Cb{{Dh{Df}}}}}{{N`{c}}}Hl}{{{N`{c}}Hn}{{N`{c}}}Hl}{{{N`{c}}{b{Dd}}}{{N`{c}}}Hl}{{{b{h{Nb{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jh}}}{{b{{Fl{Gd}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{hc}}}JhHl}{cc{}}{{}Af}{ce{}{}}{{{b{Hl}}}{{Cb{{b{{Fl{Gd}}}}}}}}{{{b{Hl}}}{{Cb{{b{J`}}}}}}{{{b{Nf}}}{{Bd{J`}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Kd}}}{{Bd{Dd}}}Nh}``{{{b{c}}d}f{}}{{{b{Nj}}Af}{{Ed{NjNj}}}}{Nj{{Eb{Nl}}}}{{{b{Nj}}}{{b{Nn}}}}{{{b{hNj}}}{{b{hNn}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nj{{Ab{Nl}}}}{{{b{Nj}}Af}Al}{{{b{Nj}}}Nj}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{O`{c}}}{{Bd{Af}}}Hl}{{{b{Nj}}}{{b{Ob}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nj}}{b{{b{Nl}}}}}Al}{{{b{Nj}}{b{Nj}}}Al}{{{b{Nj}}}{{b{{Fl{Od}}}}}}{{{O`{c}}}{{Bd{Bb}}}Hl}{{{b{Nj}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{OfNj}{OhNj}2{c{{Bd{{O`{J`}}}}}{{Hb{An}}}}{{{b{Ob}}}{{b{{Fl{Od}}}}}}{{{O`{c}}{Cb{Kd}}}{{O`{c}}}Hl}{{}Af}0{ce{}{}}0{Nj{{Ed{{Dh{Od}}{Dh{{Ab{Nl}}}}{Cb{Oj}}}}}}{{{b{Nj}}}}{{{b{Nj}}}{{A@b{{Dh{{Ab{Ol}}}}OnA@`}}}}{{{b{Nj}}}Af}{{{O`{c}}Al}{{O`{c}}}Hl}{c{{O`{c}}}Hl}{{Ob{Dh{{Ab{Nl}}}}{Cb{Oj}}}Nj}{ObNj}{{ObAf}Nj}{{{b{hNj}}{Cb{Oj}}}f}{{{b{hNj}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NjAfAf}Nj}0{{{b{Nj}}Af}{{Ed{{Ab{Nl}}{Ab{Nl}}}}}}0{{{b{hNj}}}{{Cb{Oj}}}}{{{b{Nj}}}{{Ab{Nl}}}}{{{b{c}}}e{}{}}{{{b{Nj}}{b{Nj}}}Oj}{{{b{Nj}}b}Oj}10{c{{Ah{e}}}{}{}}000{{Ob{Dh{{Ab{Nl}}}}{Cb{Oj}}}{{Ah{NjA@d}}}}{{{b{c}}}Cf{}}0{{{b{Nj}}}{{Cb{{b{Oj}}}}}}0{{{b{Nj}}}{{b{{Fl{{Ab{Nl}}}}}}}}{{{b{Nj}}}On}{ce{}{}}0{{{O`{c}}{Cb{Kd}}}{{O`{c}}}Hl}{{{O`{c}}Al}{{O`{c}}}Hl}{{{O`{c}}{Cb{Af}}}{{O`{c}}}Hl}0{{{O`{c}}{Cb{e}}}{{O`{c}}}Hl{{Hb{An}}}}{{{O`{c}}{Cb{{Eb{Hj}}}}}{{O`{c}}}Hl}{{{O`{c}}{Cb{{Eb{{Fl{Df}}}}}}}{{O`{c}}}Hl}4{{{O`{c}}{Cb{{b{hj}}}}}{{O`{c}}}Hl}{{{O`{c}}Hn}{{O`{c}}}Hl}{{{O`{c}}{b{Dd}}}{{O`{c}}}Hl}{{Nj{Cb{Oj}}}Nj}{{{b{Nj}}{Cb{Oj}}}{{Ab{Nl}}}}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@f}}}A@f}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{b{A@f}}Af}A@h}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Od}}{b{A@j}}}{{Ah{A@lA@d}}}}`{Aff}0{{{b{A@l}}{b{A@l}}}Al}{{{b{A@l}}{b{hBf}}}{{Ah{fDb}}}}{{{b{A@f}}{b{hBf}}}{{Ah{fDb}}}}{A@nA@l}{cc{}}0{{}Af}0{ce{}{}}0{A@fAA`}{{{b{A@f}}}{{b{{Cb{{Dh{AAb}}}}}}}}``````{{{b{A@f}}}{{b{AAd}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{AA`{{Ah{A@fAAf}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AAh{c}}Af}{{Bd{AAj}}}Hl}{{AAlAf}{{Bd{AAj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAn}}}AAn}{{{b{AB`}}}AB`}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000{{}AB`}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAn}}}Aj}{c{{Ah{AB`}}}Aj}{Aff}0000{{{b{AAn}}{b{AAn}}}Al}{{{b{AB`}}{b{AB`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AAh{c}}}{{Bd{Bb}}}Hl}{AAl{{Bd{Bb}}}}{{{b{AAj}}Af}Al}{{{b{AAn}}{b{hBf}}}Bh}{{{b{AB`}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mj}}{Cb{ABb}}}{{Bd{AAl}}}}{{{b{h{AAh{c}}}}}{{Bd{{b{ABb}}}}}Hl}{{{b{hAAl}}}{{Bd{{b{ABb}}}}}}{{{b{AAn}}{b{hc}}}fBj}{{{b{AB`}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAj}}}Al}`0`{{{Cb{{b{{Fl{Af}}}}}}{b{Cj}}{Cb{{b{{Fl{ABd}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AAh{c}}}Hl}{{{b{hAAj}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AAh{c}}}}}{{Bd{Af}}}Hl}{{{b{hAAl}}}{{Bd{Af}}}}`{{{AAh{c}}AB`}{{AAh{c}}}Hl}{{AAlAB`}AAl}{{{b{AAj}}}{{b{Mj}}}}{{{b{h{AAh{c}}}}}{{Bd{Mj}}}Hl}{{{b{hAAl}}}{{Bd{Mj}}}}{{{b{AAn}}c}AhCd}{{{b{AB`}}c}AhCd}{{{AAh{c}}Al}{{AAh{c}}}Hl}0{{AAlAl}AAl}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AAh{c}}{Cb{{Dh{Df}}}}}{{AAh{c}}}Hl}{{{AAh{c}}{Cb{{Dh{ABd}}}}}{{AAh{c}}}Hl}{{AAl{Cb{{Dh{ABd}}}}}AAl}{{{AAh{c}}{Cb{Af}}}{{AAh{c}}}Hl}{{AAl{Cb{Af}}}AAl}{{{AAh{c}}{Cb{{Eb{Hj}}}}}{{AAh{c}}}Hl}{{AAl{Cb{{Eb{Hj}}}}}AAl}{{{AAh{c}}{Cb{{Dh{Af}}}}}{{AAh{c}}}Hl}{{AAl{Cb{{Dh{Af}}}}}AAl}{{{AAh{c}}{Cb{j}}}{{AAh{c}}}Hl}{{AAl{Cb{j}}}AAl}{{{AAh{c}}{Cb{Mj}}}{{AAh{c}}}Hl}````````````````{{{b{c}}d}f{}}00000{{{ABf{c}}{b{Dd}}}{{Bd{{ABh{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{c}}{b{he}}}f{}{}}00000{{{b{c}}}f{}}00000000000``{{}ABj}{{}ABl}{{}ACd}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{ABj}}}Aj}{c{{Ah{ABl}}}Aj}{c{{Ah{ABn}}}Aj}{c{{Ah{AC`}}}Aj}{c{{Ah{ACb}}}Aj}{c{{Ah{ACd}}}Aj}`{Aff}00000009{{{b{{ABh{c}}}}{b{Bb}}}{{`{{ACh{}{{Hd{{Bd{{ACf{A@d}}}}}}}}}}}Ad}{{{b{ABj}}{b{ABj}}}Al}{{{b{ABl}}{b{ABl}}}Al}{{{b{ABn}}{b{ABn}}}Al}{{{b{AC`}}{b{AC`}}}Al}{{{b{ACb}}{b{ACb}}}Al}{{{b{ACd}}{b{ACd}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000000{{{b{{ABh{c}}}}}{{Bd{Kf}}}Ad}{{{ABf{c}}{b{hBb}}}{{Bd{Kf}}}Ad}{{{b{ABj}}{b{hBf}}}Bh}{{{b{ABl}}{b{hBf}}}Bh}{{{b{ABn}}{b{hBf}}}Bh}{{{b{AC`}}{b{hBf}}}Bh}{{{b{ACb}}{b{hBf}}}Bh}{{{b{ACd}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000000{{}ACd}{{{b{{ABh{c}}}}}{{b{{ACl{{ACj{c}}}}}}}Ad}{{{b{ABj}}{b{hc}}}fBj}{{{b{ABl}}{b{hc}}}fBj}{{{b{ABn}}{b{hc}}}fBj}{{{b{AC`}}{b{hc}}}fBj}{{{b{ACb}}{b{hc}}}fBj}{{{b{ACd}}{b{hc}}}fBj}{{}Af}0000000{ce{}{}}0000000{{{b{ACd}}}Al}0```{c{{ABf{c}}}{AdAd}}``{{{b{ABj}}c}AhCd}{{{b{ABl}}c}AhCd}{{{b{ABn}}c}AhCd}{{{b{AC`}}c}AhCd}{{{b{ACb}}c}AhCd}{{{b{ACd}}c}AhCd}{{{ABf{c}}Al}{{ABf{c}}}Ad}`{{{b{c}}}e{}{}}00000{c{{Ah{e}}}{}{}}000000000000000{Gd{{Bd{ABn}}}}{ACn{{Bd{AC`}}}}{AD`{{Bd{ACb}}}}{{{b{c}}}Cf{}}0000000????????{{{ABf{c}}ABl}{{ABf{c}}}Ad}{{{ABf{c}}{Cb{Af}}}{{ABf{c}}}Ad}0{{{ABf{c}}ACd}{{ABf{c}}}Ad}{{{b{h{ABh{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{ABh{c}}}}{Dh{{ACf{A@d}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ADb{c}}{b{Bb}}}{{Bd{f}}}{nLbADd}}{cc{}}{{}Af}{ce{}{}}{{cei}{{ADb{c}}}{nLbADd}{{Hb{An}}}{{H`{Dj}}}{{Hf{}{{Hd{g}}}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}3{{{ADb{c}}Al}{{ADb{c}}}{nLbADd}}``{{{b{ADf}}c}{}ADh}{{{b{ADf}}c}{}{ADhLb}}>=<;:8{{}{{b{ADf}}}}87{{{b{ADj}}}Kf}{{{b{ADf}}c}ADl{ADhLb}}77{{ACne}{}ADh{{Gb{}{{G`{c}}}}}}7:0````{{{b{hBb}}{Cb{{b{Hj}}}}Al}{{Bd{f}}}}{{{b{Hj}}}{{Cb{{b{ADn}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{AE`}}}{{b{{Fl{AEb}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{AEb}}}Aj}{c{{Ah{AE`}}}Aj}{Aff}0{{{b{AEb}}}{{b{Jd}}}}{{{b{Hj}}{b{Bb}}}{{Bd{ABd}}}}{{{b{AEb}}{b{hBf}}}Bh}{{{b{AE`}}{b{hBf}}}Bh}{cc{}}0{ABdAEb}{AEdAEb}{{{b{AEb}}}{{Cb{{b{ABd}}}}}}00{{{b{AE`}}{b{Dj}}}{{Bd{{b{AEb}}}}}}{{}Af}0{ce{}{}}0{{AEd{Cb{ABd}}{Cb{ABd}}{Cb{ABd}}}AEb}{{Hn{Dh{AEb}}{Cb{Af}}}AE`}{{{b{AEb}}}{{Cb{Af}}}}{{{b{AE`}}}{{Cb{Af}}}}{{{b{AE`}}}{{b{Hn}}}}{{{b{AEb}}c}AhCd}{{{b{AE`}}c}AhCd}{{{b{ADn}}{b{AE`}}}{{Bd{Al}}}};;{{{b{AEb}}}{{Cb{ABd}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00`````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jh}}}{BlHlAEf}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ACh{}{{Hd{Af}}}}}}{cAl{{H`{Nf}}}}{{{Cb{{b{{Fl{Df}}}}}}{b{Dd}}{Cb{{b{{Fl{ABd}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Nf}}}An}","D":"CL`","p":[[1,"reference"],[5,"Private",1877],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1878],[5,"HiveOptions",0,1878],[10,"WriterFactory",0,1879],[10,"SerWriter",1854,1879],[5,"Box",1880],[10,"Write",1881],[1,"usize"],[6,"Result",1882],[10,"Deserializer",1883],[1,"bool"],[5,"PathBuf",1884],[10,"SerReader",1854,1879],[5,"DataFrame",1885],[8,"PolarsResult",1886],[5,"Formatter",1887],[8,"Result",1887],[10,"Hasher",1888],[10,"Read",1881],[10,"ArrowReader",0,1879],[8,"RecordBatch",1889],[6,"Option",1890],[10,"Serializer",1891],[5,"TypeId",1892],[5,"AvroReader",84,1893],[5,"ArrowSchema",1894],[10,"Seek",1881],[6,"AvroCompression",84],[5,"AvroWriter",84,1895],[5,"Error",1887],[5,"Schema",1896],[5,"String",1897],[5,"Vec",1898],[1,"str"],[5,"CloudOptions",224],[5,"CloudLocation",152,1899],[10,"ObjectStore",1900],[5,"Arc",1901],[1,"tuple"],[5,"PolarsObjectStore",152,1902],[5,"Path",1903],[10,"AsyncWrite",1904],[10,"Unpin",1905],[5,"CloudWriter",152,1906],[5,"Error",1907],[10,"Command",1908],[8,"Result",1907],[5,"Url",1909],[5,"Bytes",1910],[5,"Range",1911],[1,"slice"],[5,"ObjectMeta",1900],[17,"Output"],[10,"FnOnce",1912],[1,"u8"],[10,"VarInt",1913],[6,"AmazonS3ConfigKey",224,1914],[6,"AzureConfigKey",224,1915],[6,"GoogleConfigKey",224,1916],[6,"CloudType",224],[10,"AsRef",1917],[10,"Into",1917],[17,"Item"],[10,"IntoIterator",1918],[5,"CsvReader",413,1919],[10,"PhysicalIoExpr",1800],[10,"MmapBytesReader",1222],[8,"SchemaRef",1896],[5,"OwnedBatchedCsvReader",413,1920],[5,"BatchedCsvReader",413,1920],[5,"CsvReadOptions",413,1921],[5,"CsvParseOptions",413,1921],[6,"CsvEncoding",413,1921],[6,"CommentPrefix",413,1921],[6,"NullValues",413,1921],[10,"Fn",1912],[5,"File",1922],[5,"SchemaInferenceResult",673],[6,"DataType",1923],[8,"PlHashSet",1924],[6,"ReaderBytes",1222],[5,"CsvWriter",700,1925],[5,"BatchedWriter",700,1925],[5,"CsvWriterOptions",700,1926],[5,"SerializeOptions",700,1926],[6,"QuoteStyle",700,1926],[8,"NonZeroUsize",1927],[1,"u64"],[5,"FileCacheEntry",844,1928],[5,"IpcStreamReader",865,1929],[5,"IpcWriter",865,1930],[5,"BatchedWriter",865,1930],[10,"AsyncWrite",1931],[10,"Send",1905],[5,"IpcScanOptions",865,1932],[5,"IpcReadOptions",865,1933],[5,"IpcWriterOptions",865,1930],[6,"IpcCompression",865,1930],[5,"IpcReaderAsync",865,1933],[5,"FileMetadata",1934],[1,"i64"],[5,"IpcStreamWriterOption",865,1929],[5,"IpcWriterOption",865,1930],[5,"IpcReader",865,1932],[5,"IpcStreamWriter",865,1929],[8,"ArrowSchemaRef",1894],[5,"JsonWriterOptions",1124],[5,"JsonWriter",1124],[5,"JsonReader",1124],[5,"BatchedWriter",1124],[6,"JsonFormat",1124],[5,"Path",1884],[10,"BufRead",1881],[5,"StructArray",1246,1935],[10,"Array",1936],[10,"Any",1892],[5,"JsonLineReader",1246],[6,"ArrowDataType",1937],[5,"Field",1938],[5,"MutableStructArray",1939],[5,"GrowableStruct",1940],[5,"Bitmap",1941],[10,"Scalar",1942],[5,"StructValueIter",1943],[5,"BitmapIter",1944],[6,"ZipValidity",1945],[6,"PolarsError",1886],[5,"FileMetaData",1342,1946],[6,"ColumnOrder",1947],[5,"RowGroupMetaData",1948],[5,"ParquetStatistics",1342],[5,"MutableStatistics",1949],[5,"FileMetaData",1950],[5,"KeyValue",1950],[5,"SchemaDescriptor",1951],[6,"ParquetError",1952],[5,"ParquetReader",1395,1953],[5,"BatchedParquetReader",1395,1954],[5,"ParquetAsyncReader",1395,1953],[5,"ParquetOptions",1395,1955],[6,"ParallelStrategy",1395,1955],[8,"FileMetaDataRef",1342],[5,"Series",1956],[5,"ParquetWriter",1535,1957],[5,"BatchedWriter",1535,1958],[5,"ParquetWriteOptions",1535,1959],[6,"ParquetCompression",1535,1959],[5,"GzipLevel",1535,1959],[5,"BrotliLevel",1535,1959],[5,"ZstdLevel",1535,1959],[5,"StatisticsOptions",1535,1960],[8,"RowGroupIterColumns",1535,1961],[10,"Iterator",1962],[5,"FileWriter",1963],[5,"Mutex",1964],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1763],[10,"Sync",1905],[5,"RuntimeManager",1779],[10,"Future",1965],[10,"GetSize",1779],[5,"JoinHandle",1966],[10,"StatsEvaluator",1800],[5,"BatchStats",1800],[5,"ColumnStats",1800],[5,"Field",1967],[10,"Sized",1905]],"r":[[0,1879],[1,1878],[2,1878],[3,1879],[4,1879],[5,1879],[85,1893],[86,1895],[87,1968],[152,1899],[153,1906],[154,1902],[163,1969],[192,1899],[227,1914],[232,1915],[256,1916],[415,1920],[416,1921],[417,1921],[418,1921],[419,1921],[420,1919],[424,1921],[425,1920],[471,1970],[551,673],[570,1971],[701,1925],[702,1925],[703,1926],[707,1926],[708,1926],[844,1972],[845,1973],[846,1928],[853,1972],[855,1973],[865,1930],[866,1930],[867,1933],[868,1932],[869,1933],[870,1932],[871,1929],[872,1929],[873,1929],[874,1930],[875,1930],[876,1930],[1247,1935],[1342,1946],[1360,1949],[1396,1954],[1399,1955],[1400,1953],[1401,1955],[1402,1953],[1481,1974],[1535,1958],[1537,1959],[1539,1959],[1542,1959],[1543,1959],[1544,1957],[1545,1961],[1547,1960],[1550,1959],[1854,1879],[1855,1879],[1856,0]],"b":[[1270,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1271,"impl-PartialEq-for-StructArray"],[1276,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1277,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1296,"impl-StructArray"],[1297,"impl-Array-for-StructArray"],[1300,"impl-StructArray"],[1301,"impl-Array-for-StructArray"],[1320,"impl-Array-for-StructArray"],[1321,"impl-StructArray"],[1337,"impl-StructArray"],[1338,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHUFqQAAAAEAAwARABYAAAAYAAgAIgAJAC0AAgAyAAQAOQAAADsAAgA/AAIARAAQAF0AAABfABkAfAADAIMAAQCGAA0AlwAAAJwABgClAA8AtwACAL0AAwDDAAIAywAAAM0AAADSAA4A5wABAPMAAAD/AAEAAgEAABcBEAArATgAaQEDAG4BCAB8ARwAoAEEAKkBAQCtASoA2QE3ABICBAAeAgAAIAIRADwCAAA+AgIARQIrAHICCAB8AgcAlAIAAKICDACwAgEAtAIAALYCBgC+AgAAxgIYAOECIQAFAwIADQMCABEDAAATAwUAHwMCACYDAwArAxYATQMHAFYDAgBaAwEAXgMEAGQDAABnAwAAagMAAGwDAQBwAwMAdQMnAJ4DPgDeAwMA7gMPAAsEAAANBAcAFwQ4AFoEAgBfBAAAYgQBAGUEAABrBCUAkgQAAJgEAACaBAQApgQYAMEEAQDHBAEAygQIANQEAADWBAEA2QQGAOEEAQDkBAUA6wQNAPoEAQD9BAEAAgUCAAgFAAAKBQAAEgUCABYFAAAZBQEAHAUJACcFAgAtBQEAMQUIADsFAABABQAAQgUHAE0FAwBTBQUAWwUBAGkFAgBtBQMAcgUBAHUFAAB4BQAAegUAAH0FNAC3BQkAxgUAAMgFAwDNBQAAzwUBANIFAQDVBQIA2QUSAO4FBQD1BQEA+AUCAPwFAAD+BQAAAAYBAAMGAAAFBgEACAYAAAoGAQANBgEAEAYuAEEGOwB/BgUAjQYPAKUGAQCoBgEAqwYAAK0GBQC1BigA4wYAAOUGBQDsBgAA7gYEAPQGAgD4BgQA/gYBAAEHAAADBwUACwcCAA8HAwAUBwcAHgcBACgHAQAxBwIANwcKAEMHAABFBwAASQcEAFAHAQBUBwEA"}],\
["polars_lazy",{"t":"CQCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPKPPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNOONNNOONNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNOONNNOMNNCOONOONMNNOONNNNOOMNNOOONNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","clone_to_uninit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","anonymous_scan","anti_join","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","eager","eager","expand_paths","expand_paths","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","new_streaming","new_streaming","null_count","on","optimize","parallel","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","unpivot","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1498,"polars_lazy::dsl::AggExpr"],[1505,"polars_lazy::dsl::BooleanFunction"],[1508,"polars_lazy::dsl::Expr"],[1543,"polars_lazy::dsl::FunctionExpr"],[1588,"polars_lazy::dsl::StringFunction"],[1608,"polars_lazy::dsl::TemporalFunction"],[1610,"polars_lazy::dsl::binary"],[1630,"polars_lazy::dsl::cat"],[1631,"polars_lazy::dsl::dt"],[1687,"polars_lazy::dsl::function_expr"],[1895,"polars_lazy::dsl::function_expr::BooleanFunction"],[1898,"polars_lazy::dsl::function_expr::FunctionExpr"],[1943,"polars_lazy::dsl::function_expr::StringFunction"],[1963,"polars_lazy::dsl::function_expr::TemporalFunction"],[1965,"polars_lazy::dsl::function_expr::cat"],[1967,"polars_lazy::dsl::function_expr::pow"],[1971,"polars_lazy::dsl::function_expr::rolling"],[2004,"polars_lazy::dsl::function_expr::rolling_by"],[2036,"polars_lazy::dsl::function_expr::trigonometry"],[2080,"polars_lazy::dsl::functions"],[2155,"polars_lazy::dsl::python_udf"],[2201,"polars_lazy::dsl::string"],[2262,"polars_lazy::dsl::udf"],[2268,"polars_lazy::frame"],[2712,"polars_lazy::frame::pivot"],[2714,"polars_lazy::prelude"],[3331,"polars_lazy::prelude::DslPlan"],[3386,"polars_lazy::prelude::LiteralValue"],[3389,"dyn_clone::sealed"],[3390,"polars_plan::dsl::meta"],[3391,"polars_plan::dsl::expr"],[3392,"polars_error"],[3393,"core::result"],[3394,"polars_plan::dsl::array"],[3395,"polars_plan::dsl::list"],[3396,"core::convert"],[3397,"polars_plan::dsl::expr_dyn_fn"],[3398,"alloc::sync"],[3399,"polars_core::series"],[3400,"core::option"],[3401,"core::ops::function"],[3402,"core::marker"],[3403,"polars_plan::plans::visitor"],[3404,"polars_plan::dsl::function_expr"],[3405,"polars_core::datatypes::dtype"],[3406,"polars_core::chunked_array::ops::sort::options"],[3407,"polars_plan::dsl::function_expr::schema"],[3408,"polars_core::datatypes::field"],[3409,"core::any"],[3410,"alloc::vec"],[3411,"polars_plan::dsl::binary"],[3412,"core::clone"],[3413,"alloc::string"],[3414,"polars_plan::dsl::udf"],[3415,"polars_core::chunked_array::cast"],[3416,"polars_plan::dsl::cat"],[3417,"polars_plan::dsl::arity"],[3418,"polars_plan::dsl::function_expr::boolean"],[3419,"polars_plan::dsl::function_expr::cat"],[3420,"polars_plan::dsl::function_expr::datetime"],[3421,"polars_plan::dsl::function_expr::pow"],[3422,"polars_plan::dsl::function_expr::strings"],[3423,"polars_plan::dsl::functions::temporal"],[3424,"polars_plan::dsl::options"],[3425,"polars_core::utils"],[3426,"polars_lazy::dsl::eval"],[3427,"polars_time::windows::duration"],[3428,"polars_time::windows::group_by"],[3429,"polars_core::datatypes::time_unit"],[3430,"serde::de"],[3431,"polars_plan::plans"],[3432,"polars_core::series::ops"],[3433,"polars_plan::dsl::dt"],[3434,"polars_lazy::dsl::list"],[3435,"polars_arrow::legacy::kernels::ewm"],[3436,"polars_plan::dsl::struct_"],[3437,"polars_core::chunked_array::ops"],[3438,"core::fmt"],[3439,"polars_plan::plans::apply"],[3440,"polars_plan::dsl::function_expr::range"],[3441,"polars_plan::dsl::function_expr::list"],[3442,"polars_plan::dsl::function_expr::struct_"],[3443,"polars_plan::dsl::function_expr::binary"],[3444,"polars_plan::dsl::function_expr::array"],[3445,"polars_plan::dsl::function_expr::business"],[3446,"polars_plan::plans::options"],[3447,"polars_core::schema"],[3448,"core::hash"],[3449,"polars_ops::series::ops::interpolation::interpolate"],[3450,"polars_ops::series::ops::is_between"],[3451,"polars_plan::dsl::name"],[3452,"polars_plan::plans::lit"],[3453,"polars_plan::dsl::python_udf"],[3454,"polars_utils::idx_vec"],[3455,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3456,"polars_ops::series::ops::rank"],[3457,"polars_time::group_by::dynamic"],[3458,"polars_core::chunked_array::ops::rolling_window"],[3459,"polars_core::datatypes"],[3460,"polars_core::chunked_array"],[3461,"polars_time::chunkedarray::rolling_window"],[3462,"polars_core::chunked_array::ops::search_sorted"],[3463,"serde::ser"],[3464,"polars_core::series::series_trait"],[3465,"polars_plan::dsl::string"],[3466,"polars_ops::chunked_array::list::to_struct"],[3467,"polars_ops::series::ops::business"],[3468,"polars_arrow::legacy::kernels::time"],[3469,"polars_plan::dsl::function_expr::rolling"],[3470,"polars_plan::dsl::function_expr::rolling_by"],[3471,"polars_plan::dsl::function_expr::trigonometry"],[3472,"polars_core::frame"],[3473,"rayon::iter"],[3474,"pyo3::types::any"],[3475,"pyo3::instance"],[3476,"polars_utils::arena"],[3477,"polars_plan::plans::ir"],[3478,"polars_plan::plans::aexpr"],[3479,"polars_plan::plans::anonymous_scan"],[3480,"polars_lazy::scan::anonymous_scan"],[3481,"polars_utils::index"],[3482,"polars_lazy::frame::exitable"],[3483,"polars_utils::aliases"],[3484,"polars_lazy::scan::csv"],[3485,"polars_lazy::scan::ipc"],[3486,"polars_lazy::scan::ndjson"],[3487,"polars_lazy::scan::parquet"],[3488,"polars_plan::frame::opt_state"],[3489,"polars_lazy::scan::file_list_reader"],[3490,"polars_io::cloud::options"],[3491,"polars_ops::frame::join::args"],[3492,"core::iter::traits::collect"],[3493,"std::path"],[3494,"polars_io::options"],[3495,"polars_io::csv::write::options"],[3496,"polars_io::ipc::write"],[3497,"polars_io::json"],[3498,"polars_io::parquet::write::options"],[3499,"smartstring::alias"],[3500,"polars_core::frame::explode"],[3501,"core::num::nonzero"],[3502,"polars_io::csv::read::options"],[3503,"chrono_tz::timezones"],[3504,"core::cmp"],[3505,"polars_core::frame::group_by::proxy"],[3506,"polars_core::datatypes::any_value"],[3507,"chrono::naive::datetime"],[3508,"polars_plan::dsl::functions::selectors"],[3509,"polars_plan::dsl::functions::horizontal"],[3510,"polars_plan::dsl::functions::arity"],[3511,"polars_plan::dsl"],[3512,"polars_plan::dsl::functions::range"],[3513,"polars_plan::dsl::functions::index"],[3514,"polars_plan::dsl::functions::coerce"],[3515,"polars_plan::dsl::functions::syntactic_sugar"],[3516,"polars_plan::dsl::functions::business"],[3517,"polars_plan::dsl::functions::concat"],[3518,"polars_plan::dsl::functions::correlation"],[3519,"polars_plan::dsl::functions::repeat"]],"i":[0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,67,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,66,0,0,0,27,59,59,59,5,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,66,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,66,0,59,59,5,27,36,5,59,59,67,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,40,36,54,57,27,0,55,40,40,5,27,57,0,40,57,65,59,59,27,27,27,40,27,0,27,36,57,27,27,27,27,27,27,5,0,27,59,27,27,57,27,59,27,65,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,5,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,4,4,4,4,4,5,5,5,5,0,9,10,5,0,64,60,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,64,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,5,0,63,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,50,51,52,53,36,5,54,40,40,17,55,56,57,58,58,59,27,60,61,62,62,63,64,65,66,66,67,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,70,70,5,0,0,0,0,60,61,62,5,17,17,17,60,61,63,64,65,66,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,27,62,63,64,65,66,67,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,82,82,5,5,5,5,63,5,5,5,5,5,84,84,84,5,5,5,5,0,10,5,5,17,5,5,34,47,44,88,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,27,27,60,61,62,63,64,65,66,67,46,0,64,63,0,5,49,9,32,10,4,108,84,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,27,27,27,27,27,60,61,62,63,64,65,65,66,67,46,17,46,0,5,0,10,5,10,5,9,10,5,49,76,15,32,34,88,5,5,4,36,5,5,54,40,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,60,61,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,46,0,0,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,105,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,84,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,60,61,61,0,9,10,5,0,62,60,61,5,60,5,9,10,5,5,46,5,5,61,5,5,5,32,32,17,60,61,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,84,0,5,5,32,5,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,64,64,17,5,10,10,5,5,60,61,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,63,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,60,61,60,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,32,5,40,55,56,57,58,59,27,9,10,108,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,32,32,5,32,34,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,61,0,51,53,62,60,60,61,32,84,61,60,61,60,61,60,61,61,60,61,60,61,32,32,60,61,60,60,61,60,5,60,196,197,198,196,197,198,196,199,200,201,202,203,204,204,205,206,202,207,208,209,210,211,207,206,209,203,212,211,213,212,212,213,204,205,209,210,211,210,211,210,208,206,213,202,208,214,215,216,217,218,219,220,221,222,223,224,225,225,217,218,214,217,218,214,218,214,226,227,219,228,229,230,230,215,229,231,232,233,234,230,214,235,236,237,238,239,240,231,228,230,241,242,243,244,245,246,241,242,247,244,245,246,248,249,250,250,247,243,248,249,251,251,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,57,27,55,27,57,57,59,59,27,27,27,27,0,27,57,27,27,27,27,27,27,27,59,27,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,57,57,59,0,0,0,0,0,199,200,201,214,215,216,217,218,219,220,221,222,223,224,225,225,217,218,214,217,218,214,218,214,226,227,219,228,229,230,230,215,229,231,232,233,234,230,214,235,236,237,238,239,240,231,228,230,241,242,243,244,245,246,241,242,247,244,245,246,248,249,250,250,247,243,248,249,251,251,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,61,0,0,0,0,0,60,61,0,0,0,0,0,0,0,0,0,60,61,61,0,60,61,60,61,0,0,0,0,0,0,0,60,61,0,0,0,0,60,61,60,61,60,0,0,0,0,139,111,139,111,139,111,139,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,136,147,150,155,156,157,158,159,136,136,147,148,136,136,147,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,156,158,153,136,136,153,136,147,150,155,156,157,158,159,153,136,147,150,155,156,157,158,159,153,136,147,150,155,156,157,158,159,159,160,160,156,158,169,159,148,136,136,169,159,169,159,160,160,155,136,136,136,150,156,158,159,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,136,136,148,153,153,136,136,147,150,155,156,157,158,159,136,136,169,159,160,160,136,136,169,159,153,136,153,169,159,136,136,136,148,160,160,155,157,160,155,157,136,159,148,148,153,136,136,136,147,150,155,156,157,158,159,136,136,160,160,155,158,136,136,136,147,158,148,150,148,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,136,136,148,136,168,136,136,148,136,136,147,157,158,136,136,136,136,136,156,136,136,160,155,157,150,156,158,150,148,155,157,155,157,169,159,136,148,136,158,160,155,157,0,169,159,136,169,159,136,160,155,157,156,158,136,136,148,136,169,159,160,155,157,150,156,158,136,136,136,136,136,136,150,136,136,136,136,136,136,136,169,159,136,136,136,136,136,136,150,136,169,159,136,136,136,169,159,148,136,136,147,136,136,136,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,169,159,148,153,136,147,150,155,156,157,158,159,136,136,136,136,158,148,136,148,153,136,147,150,155,156,157,158,159,148,157,155,155,136,136,136,136,136,136,155,136,155,155,155,155,155,155,155,157,155,157,155,155,160,155,155,157,157,136,155,136,160,155,157,136,136,155,155,160,155,157,136,160,136,155,155,157,157,155,157,155,155,136,155,155,136,136,155,155,136,136,0,0,0,0,0,166,166,186,187,187,78,166,0,78,187,187,187,186,78,0,0,187,0,78,78,187,187,187,166,78,78,78,78,166,187,187,187,187,187,0,78,0,0,0,0,166,0,0,181,181,78,186,186,0,0,187,181,181,186,0,0,78,187,0,0,0,78,78,166,187,78,78,78,187,187,187,187,187,187,187,78,0,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,78,73,73,73,149,149,149,149,173,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,78,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,78,165,116,73,73,173,167,166,181,181,174,174,175,175,186,186,115,115,176,176,187,188,138,138,78,165,116,73,167,73,174,176,78,176,73,73,165,116,173,167,181,174,175,115,176,188,138,78,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,115,78,78,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,78,138,78,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,165,165,165,116,116,116,73,73,73,173,173,173,167,167,167,166,166,166,181,181,181,174,174,174,175,175,175,176,176,176,188,188,188,138,138,138,165,165,116,73,73,149,173,167,166,166,181,181,174,175,186,115,176,187,188,138,188,165,116,73,193,173,167,167,166,181,192,174,175,186,115,176,187,188,138,78,138,187,190,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,167,173,165,173,165,116,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,166,73,73,181,73,167,165,109,73,192,187,173,174,175,176,187,115,73,73,73,193,73,181,73,73,73,167,165,116,193,138,73,73,73,165,116,193,138,190,176,149,149,193,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,78,173,167,188,167,165,176,167,167,78,187,165,116,73,173,167,166,181,174,175,186,115,176,187,188,138,78,73,166,181,138,73,73,73,73,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,187,188,138,78,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,167,165,116,73,193,173,167,166,181,192,174,175,186,115,176,187,188,138,78,73,73,167,193,167,252,252,253,254,255,256,257,258,259,260,261,261,257,262,261,255,263,255,259,252,260,264,254,265,262,256,266,267,267,253,268,252,267,265,252,258,265,269,259,252,267,260,264,268,257,261,266,263,261,267,261,257,254,254,258,270,270,270],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Cf}}}Cf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}00000000000000000000000{{{b{c}}}f{}}000000000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hh{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHj}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HljHnAf}j}0{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIbId}j}{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{Ih}}}}}}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{An}}}}}}{{}Gh}{{}Gj}{{}Gn}{{}H`}{{}Hb}{{}Hd}{jj}{Hn{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}1111111111111111{Hn{{b{C`c}}}{}}000000000000000000000000000000{c{{n{Dh}}}Ij}{c{{n{j}}}Ij}{c{{n{Fl}}}Ij}{c{{n{E`}}}Ij}{c{{n{{Bb{Bd}}}}}Ij}{c{{n{{Bb{{B`{Dd}}}}}}}Ij}{c{{n{{Bb{{B`{Il}}}}}}}Ij}{c{{n{Fn}}}Ij}{c{{n{G`}}}Ij}{c{{n{Gb}}}Ij}{c{{n{Gd}}}Ij}{c{{n{Gf}}}Ij}{c{{n{Cf}}}Ij}{c{{n{Gl}}}Ij}{c{{n{Gn}}}Ij}{c{{n{H`}}}Ij}{c{{n{Hb}}}Ij}{c{{n{Hd}}}Ij}{c{{n{Hf}}}Ij}{{AdChIn}j}{{jChIn}j}{{jj}}{{jc}j{{Al{j}}}}{Hnf}000000000000000000000000000000{jj}{Adj}1`{jJ`}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jI`Af}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJb}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000{{JdjAf}j}0{{jJf}j}{{jjIb}j}11`{{jc}j{{Hh{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JhCh}j}{{Jh{b{A`}}}j}{{Jh{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJj}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{En}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Eh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{K`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{j}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Fl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{E`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{{Bb{c}}}}{b{C`Jl}}}{{n{fJn}}}{}}{{{b{Fn}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{G`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gb}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gd}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Cf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{H`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{El}}{b{C`Jl}}}{{n{fJn}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Dhj}{Kbj}{Efj}{{{b{A`}}}j}{Kdj}{Hjj}{Dlj}{Kfj}{I`j}{Khj}{Chj};{Kjj}{Afj}=={Cf{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{cc{}}{Gf{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}55555{FnCf}{LbCf}{GfCf}{G`Cf}999999{HdHb}::::{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHnHn}j}{{AbjAf}j}43{Fbj}{{{b{Ih}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}{{n{Dbl}}}}{{{b{D`}}}Hn}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{K`}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{{b{j}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gl}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{Hn}}}j}{{j{Bh{j}}{Bh{Hn}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hn}000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jhj}{Mhj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMj}{{jI`}j}3;;3;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{{n{Dbl}}}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{{n{Dbl}}}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gh}{{}Gj}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hd}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHj}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHn{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jh{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{j{b{{Ah{Ch}}}}Hf}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGl}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jHnc}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{I`}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdI`Nj}j}{{jjNdI`Ob}j}{{jHnAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKj}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{{Bb{{B`{Il}}}}}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gl}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHjAf}j}8{{AbHj}j}{{AdHj}j}{{jHj}j}{jOj}`{{jCj}j}`{jJh}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hn}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIbId}j}```{{AdHn}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}00000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}0000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}Hn}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEjAf}j}{{AbHj}j}{{AdHj}j}{{jHj}j}{ce{}{}}000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Ghj}Gh}0{{Gjj}Gj}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jh{Dj{j}}}j}{{Gjjjj}Gj}{{Ghjjj}Gh}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GhIf}Gh}{{Gh{Bh{Ej}}}Gh}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{cc{}}87{{}Hn}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{J`j{Ed{Af}}{Dj{Ef}}A@`}j}{J`j}<;{{J`If}j}1{{J`jIf}j}{{J`Ej}j}333<;:393873333333333{{J`j}j}44{{J`{Bh{Ej}}jA@b}j}15{{J`{b{A`}}}j}65066666662998:6656`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@d}}}Ij}{Hnf}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@f}}}Ij}{Hnf}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}0{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@h}}}Ij}{Hnf}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hh{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHj}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIbId}j}0{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHj}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGl}j}0``{{jjHjAf}j}6{{jjIbId}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{Hn{{b{c}}}{}}0{Hn{{b{C`c}}}{}}0{c{{n{AAf}}}Ij}{Hnf}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jl}}}{{n{fJn}}}}{cc{}}0{{{AAj{AAh}}}AAf}{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hn}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{{OjjHn}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}Hn}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{Hn}}}j}:>>{{OjHnAAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjGnj}j}{{Ojj}j}{{OjGn}j}{{Oj{Bh{If}}{Bh{Ej}}Gnj}j}{{OjHn}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6````````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{ABhAf}ABh}{{{B`{ABj}}ABl}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcABn}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`AC`cCn}AA`{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACb}}}f}{{AA`{ACd{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACb}}}ACb}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABl}}}ABl}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{c}}}f{}}000000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0````{{ABhADd}ABh}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACb}}}}````{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACf}}{Dj{AA`}}}{{A@l{AA`}}}}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABl}{{}ACh}{{}ACl}{{}ACn}{Hn{{b{c}}}{}}000000000{Hn{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{Hnf}0{{{b{C`ACb}}}f}1{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}22222220{{AA`{Bh{{Dj{j}}}}}AA`}``{{{b{AD`}}Af}{{A@l{{Nb{{B`{{Ah{ADh}}}}Hn}}}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ACb}}}{{Bh{{A@l{A@j}}}}}}{{AA`Hn}{{A@l{A@j}}}}{{{b{ACb}}}{{A@l{A@j}}}}``{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABhAA`}{AD`{{A@l{AA`}}}}0{ACf{{A@l{AA`}}}}{ACj{{A@l{AA`}}}}210{AA`AA`}{{{b{ACn}}{b{C`Jl}}}{{n{fJn}}}}{{ABhAf}ABh}{cc{}}00{ABfAA`}{IlAA`}2222222{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ACn}{{{b{AD`}}}Af}0{{{b{ACf}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADj}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{Hn}}}AA`}`{{ABhADl}ABh}`{{}Hn}0000000008{ce{}{}}000000000{{AA`AA`ccADn}AA`{{Aj{{Ah{j}}}}}}{AA`ABh}?{AA`AA`}{AE`AA`}1={{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`AC`}AA`}``{{ACjAf}ACj}`{{AA`cAEb{Bh{{B`{K`}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAEb{Bh{ABn}}Af}AA`}666`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}7{{{b{AD`}}}{{Bh{Hn}}}}{{{b{ACf}}}{{Bh{Hn}}}}{{{b{ACj}}}{{Bh{Hn}}}}````;{cACf{{Aj{AEd}}}}{cACj{{Aj{AEd}}}}{{{B`{{Ah{ADh}}}}}ACf}{{{B`{{Ah{ADh}}}}}ACj}``><{{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{{Ah{ADh}}}}}}{{{b{ACf}}}{{b{{Ah{ADh}}}}}}{{{b{ACj}}}{{b{{Ah{ADh}}}}}}```{AA`{{A@l{{Nb{A@jA@j}}}}}}``{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACf}}}Af}{{{b{ACj}}}Af}``{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}}{AA`AA`}{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}``{{{b{AD`}}}{{Bh{{b{AEf}}}}}}{{{b{ACf}}}{{Bh{{b{AEf}}}}}}{{{b{ACj}}}{{Bh{{b{AEf}}}}}}```{{LjAEhAf}AA`}{{cACh}{{A@l{AA`}}}{{Aj{AEd}}}}{{{B`{{Ah{ADh}}}}ACh}{{A@l{AA`}}}}{{cACl}{{A@l{AA`}}}{{Aj{AEd}}}}{{{B`{{Ah{ADh}}}}ACl}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{ABn}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{ABn}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}``{{AA`ADhAEj}{{A@l{f}}}}{{AA`ADhAEl}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AEl}{{A@l{f}}}}{{AA`ADhAEn}{{A@l{f}}}}{{AA`ADhAF`}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AF`}{{A@l{f}}}}`{{AA`ChAC`}AA`}``{{AA`cCn}AA`{{Hh{AFb}}}}{{AA`cCn}AA`{{Aj{{Ah{j}}}}}}{{AA`Hj}AA`}``{{ABhc}ABh{{Aj{A`}}}}{AA`AA`}{{AA`AC`}AA`}{{ABf{Bh{Hn}}}AA`}{AA`{{A@l{AFd}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}00000000{{AA`AC`cCn}AA`{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}On{}}000000000{{AA`{Bh{{Dj{Ej}}}}AFf}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}{{AA`AFh}AA`}`{{ABhAFj}ABh}>{ce{}{}}000000000{{ABhAA`}ABh}{{ACj{Bh{AFl}}}ACj}{{ACfAf}ACf}{{ACf{Bh{ADb}}}ACf}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACf{Bh{{b{A`}}}}}ACf}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}6{{ACf{Bh{ABn}}}ACf}{{ACfAFn}ACf}{{ACfHj}ACf}999{{ACjAf}ACj}{{ACf{Bh{Hn}}}ACf}<;;{{AD`c}AD`{{Al{{Bh{Hn}}}}}}{{ACfc}ACf{{Al{{Bh{Hn}}}}}}2{{ACj{Bh{Hn}}}ACj}{{ACjc}ACj{{Al{{Bh{Hn}}}}}}={{ACf{Bh{AG`}}}ACf}{{AA`ACn}AA`}{{AD`{B`{{Ah{ADh}}}}}AD`}{{ACf{B`{{Ah{ADh}}}}}ACf}{{ACj{B`{{Ah{ADh}}}}}ACj}{{AA`Af}AA`}0{{ACf{Bh{Hj}}}ACf}{{ACfAf}ACf}{{AD`Af}AD`}1>3{{AD`c}AD`{{Al{{Bh{AEf}}}}}}{{AA`{b{A`}}{Bh{AC`}}}AA`}{{ACfc}ACf{{Al{{Bh{AEf}}}}}}{{ACf{Bh{AEf}}}ACf}{{ACj{Bh{AEf}}}ACj}{{ACjc}ACj{{Al{{Bh{AEf}}}}}}{{ACf{Bh{ABn}}}ACf}{{ACj{Bh{ABn}}}ACj}{{ACfc}{{A@l{ACf}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}{{ACfHj}ACf}={{ACfHn}ACf}0>><<>{AA`AA`}{{{b{A@j}}e{Bh{i}}{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Ib}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{{{b{ABj}}}Af}00{{{b{ABj}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADj}}}ADj}{{{b{Nh}}}Nh}{{{b{Ib}}}Ib}{{{b{AEj}}}AEj}{{{b{ADn}}}ADn}{{{b{ADl}}}ADl}{{{b{AFj}}}AFj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AGd}}}AGd}{{{b{Nf}}}Nf}{{{b{AF`}}}AF`}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AAd}}}AAd}{{{b{Il}}}Il}{{{b{c}}{b{C`e}}}f{}{}}000000000000000{{{b{c}}}f{}}00000000000000000000000``{{{b{Ib}}{b{Ib}}}AGj}`{{{b{c}}{b{e}}}AGj{}{}}``{{{b{Il}}}{{n{{B`{Lj}}l}}}}`{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{}ADj}{{}Nh}{{}AEj}{{}ADn}{{}AFj}{{}AEl}{{}AEn}{{}Nf}{{}AF`}{{}AGh}{{}AAd}{{}Il}{Hn{{b{c}}}{}}00000000000000000{Hn{{b{C`c}}}{}}00000000000000000`{{{b{Il}}}{{n{Ejl}}}}0{c{{n{ADj}}}Ij}{c{{n{Nh}}}Ij}{c{{n{Ib}}}Ij}{c{{n{AEj}}}Ij}{c{{n{ADn}}}Ij}{c{{n{ADl}}}Ij}{c{{n{AFj}}}Ij}{c{{n{AEl}}}Ij}{c{{n{AEn}}}Ij}{c{{n{AGd}}}Ij}{c{{n{Nf}}}Ij}{c{{n{AF`}}}Ij}{c{{n{AGf}}}Ij}{c{{n{AGh}}}Ij}{c{{n{AAd}}}Ij}{c{{n{Il}}}Ij}`{{{b{Il}}}{{n{{`{Md}}l}}}}{Hnf}00000000000000000{{{b{ADj}}{b{ADj}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Ib}}{b{Ib}}}Af}{{{b{AEj}}{b{AEj}}}Af}{{{b{ADn}}{b{ADn}}}Af}{{{b{ADl}}{b{ADl}}}Af}{{{b{AFj}}{b{AFj}}}Af}{{{b{AEl}}{b{AEl}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AGd}}{b{AGd}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AGf}}{b{AGf}}}Af}{{{b{AGh}}{b{AGh}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Ib}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{ABj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AEj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADl}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AFj}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AEl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AEn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AGd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AF`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AGf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AGh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AAd}}{b{C`Jl}}}{{n{fJn}}}}`{cc{}}0000{ADlADn}1111111111111`{{{b{AGf}}}Cj}{{{b{AGl}}{Dj{Bd}}{b{ADj}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}{{{b{ADj}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Ib}}{b{C`c}}}fLn}{{{b{AEj}}{b{C`c}}}fLn}{{{b{ADn}}{b{C`c}}}fLn}{{{b{ADl}}{b{C`c}}}fLn}{{{b{AFj}}{b{C`c}}}fLn}{{{b{AEl}}{b{C`c}}}fLn}{{{b{AEn}}{b{C`c}}}fLn}{{{b{AGd}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{AGf}}{b{C`c}}}fLn}{{{b{AGh}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}Hn}00000000000000000{ce{}{}}00000000000000000{{{b{ADl}}}Af}{{{b{Ib}}{Bh{{b{A`}}}}}Af}{{{b{Ib}}}Af}{{{b{AFj}}{b{ADl}}}{{n{fl}}}}1``{Mjj}{Ibj}{AH`j}{AGfj}````{AGfAGf}`{{{b{Ib}}}Ch}7{{IbCh}Ib}`1{{{b{AFj}}}Af}{Ib}:{ChIb}{ADlADn}````{{{b{A`}}}Ib}`{{{b{Ib}}{b{Ib}}}{{Bh{AGj}}}}````{{{b{AGl}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}`{{{b{ABj}}AHb}{{n{A@jl}}}}{{{b{ABj}}{Bh{Hn}}}{{n{{B`{Lj}}l}}}}`{{{b{ADj}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Ib}}c}nOf}{{{b{AEj}}c}nOf}{{{b{ADn}}c}nOf}{{{b{ADl}}c}nOf}{{{b{AFj}}c}nOf}{{{b{AEl}}c}nOf}{{{b{AEn}}c}nOf}{{{b{AGd}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AF`}}c}nOf}{{{b{AGf}}c}nOf}{{{b{AGh}}c}nOf}{{{b{AAd}}c}nOf}{{{b{Il}}c}nOf}`{{{b{ADn}}}Af}````{{{b{ADn}}}{{b{A`}}}}`{Il{{n{AFdl}}}}{{{b{AGf}}}{{Bh{AHd}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{Ib}}Ch{Bh{{b{AGb}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHf}}}}}{{Bj{AHf}{{Bf{Ch}}}}}}{{{b{Ib}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHd{{n{AGfl}}}}111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{ADnADd}ADn}`{{ADn{Bh{Ej}}}ADn}``````````````````````````````````````````````````````````","D":"GEf","p":[[1,"reference"],[5,"Private",3389],[1,"unit"],[5,"MetaNameSpace",5,3390],[6,"Expr",5,3391],[6,"PolarsError",3392],[6,"Result",3393],[1,"str"],[5,"ArrayNameSpace",5,3394],[5,"ListNameSpace",5,3395],[1,"bool"],[1,"slice"],[10,"AsRef",3396],[10,"Into",3396],[10,"FunctionOutputField",5,3397],[5,"Arc",3398],[5,"SpecialEq",5,3397],[5,"Series",3399],[17,"Output"],[6,"Option",3400],[10,"Fn",3401],[10,"Send",3402],[10,"Sync",3402],[0,"mut"],[6,"VisitRecursion",3403],[10,"FnMut",3401],[6,"FunctionExpr",5,3404],[1,"i64"],[6,"DataType",3405],[5,"SortOptions",3406],[5,"SortMultipleOptions",3406],[5,"FieldsMapper",5,3407],[5,"Field",3408],[10,"SeriesUdf",5,3397],[10,"Any",3409],[6,"AggExpr",5,3391],[5,"Vec",3410],[1,"u64"],[5,"BinaryNameSpace",1610,3411],[6,"Operator",5,3391],[10,"Clone",3412],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3397],[5,"String",3413],[5,"UserDefinedFunction",5,3414],[10,"SeriesBinaryUdf",5,3397],[6,"CastOptions",3415],[5,"CategoricalNameSpace",5,3416],[5,"When",5,3417],[5,"Then",5,3417],[5,"ChainedWhen",5,3417],[5,"ChainedThen",5,3417],[6,"Excluded",5,3391],[6,"BooleanFunction",5,3418],[6,"CategoricalFunction",5,3419],[6,"TemporalFunction",5,3420],[6,"PowFunction",5,3421],[6,"StringFunction",5,3422],[5,"DatetimeArgs",5,3423],[5,"DurationArgs",5,3423],[5,"RollingCovOptions",5,3424],[5,"StrptimeOptions",5,3424],[5,"JoinOptions",5,3424],[6,"WindowType",5,3424],[6,"WindowMapping",5,3424],[6,"NestedType",5,3424],[10,"IntoVec",3425],[1,"u8"],[10,"ExprEvalExtension",5,3426],[1,"usize"],[1,"f64"],[5,"Duration",2714,3427],[6,"ClosedWindow",3428],[6,"TimeUnit",3429],[10,"BinaryUdfOutputField",5,3397],[10,"Deserializer",3430],[6,"DslPlan",2714,3431],[6,"NullBehavior",3432],[5,"DateLikeNameSpace",1631,3433],[10,"Sized",3402],[10,"ListNameSpaceExtension",5,3434],[5,"EWMOptions",3435],[5,"StructNameSpace",5,3436],[6,"FillNullStrategy",3437],[5,"Formatter",3438],[5,"Error",3438],[10,"UdfSchema",5,3439],[1,"f32"],[1,"i16"],[1,"u16"],[1,"i8"],[1,"u32"],[6,"RangeFunction",3440],[6,"ListFunction",3441],[6,"StructFunction",3442],[6,"BinaryFunction",3443],[6,"ArrayFunction",3444],[6,"BusinessFunction",3445],[5,"FunctionOptions",3446],[5,"Schema",3447],[6,"Context",3431],[10,"Hasher",3448],[6,"InterpolationMethod",3449],[10,"IntoListNameSpace",5,3434],[10,"Display",3438],[6,"ClosedInterval",3450],[5,"ExprNameNameSpace",5,3451],[10,"Literal",2714,3452],[10,"FnOnce",3401],[5,"PythonUdfExpression",2155,3453],[5,"UnitVec",3454],[1,"tuple"],[6,"QuantileInterpolOptions",3455],[5,"RankOptions",2714,3456],[5,"RollingGroupOptions",2714,3457],[5,"RollingOptionsFixedWindow",3458],[5,"Float64Type",3459],[5,"ChunkedArray",3460],[10,"Copy",3402],[5,"RollingOptionsDynamicWindow",3461],[6,"SearchSortedSide",3462],[10,"Serializer",3463],[6,"IsSorted",3464],[5,"StringNameSpace",2201,3465],[6,"ListToStructWidthStrategy",3466],[5,"TypeId",3409],[6,"Roll",3467],[6,"NonExistent",3468],[6,"RollingFunction",1971,3469],[6,"RollingFunctionBy",2004,3470],[6,"TrigonometricFunction",2036,3471],[5,"DataFrame",3472],[8,"PolarsResult",3392],[17,"Item"],[5,"LazyFrame",2268],[10,"IntoParallelIterator",3473],[5,"UnionArgs",2714,3446],[5,"PythonFunction",2155,3453],[5,"PyAny",3474],[5,"Py",3475],[1,"char"],[5,"Node",3476],[6,"IR",3477],[5,"Arena",3476],[6,"AExpr",3478],[5,"LazyGroupBy",2268],[5,"JoinBuilder",2268],[10,"AnonymousScan",2714,3479],[5,"ScanArgsAnonymous",2268,3480],[8,"SchemaRef",3447],[8,"IdxSize",3481],[5,"InProcessQuery",2268,3482],[8,"PlHashMap",3483],[5,"LazyCsvReader",2268,3484],[5,"ScanArgsIpc",2268,3485],[5,"LazyJsonLineReader",2268,3486],[5,"ScanArgsParquet",2268,3487],[5,"OptState",2268,3488],[10,"LazyFileListReader",2268,3489],[5,"CloudOptions",3490],[6,"JoinCoalesce",3491],[10,"IntoIterator",3492],[5,"PathBuf",3493],[5,"DynamicGroupOptions",2714,3457],[6,"JoinType",2714,3491],[5,"JoinArgs",2714,3491],[10,"IntoLazy",2268],[8,"AllowedOptimizations",2268,3488],[5,"Path",3493],[5,"RowIndex",3494],[8,"PyObject",3475],[5,"CsvWriterOptions",2714,3495],[5,"IpcWriterOptions",2714,3496],[5,"JsonWriterOptions",2714,3497],[5,"ParquetWriteOptions",2714,3498],[8,"String",3499],[5,"IRPlan",3477],[6,"UniqueKeepStrategy",3472],[5,"UnpivotArgs",3500],[6,"JoinValidation",2714,3491],[8,"NonZeroUsize",3501],[6,"CsvEncoding",3502],[6,"NullValues",3502],[6,"Tz",3503],[6,"RankMethod",2714,3456],[6,"LiteralValue",2714,3452],[5,"AnonymousScanOptions",2714,3446],[6,"Ordering",3504],[10,"PolarsTemporalGroupby",2714,3457],[6,"GroupsProxy",3505],[5,"Null",2714,3452],[5,"AnonymousScanArgs",2714,3479],[6,"AnyValue",3506],[5,"NaiveDateTime",3507],[15,"Quantile",1498],[15,"Min",1498],[15,"Max",1498],[15,"IsBetween",1895],[15,"Any",1895],[15,"All",1895],[15,"SortBy",1508],[15,"Filter",1508],[15,"Cast",1508],[15,"Sort",1508],[15,"Gather",1508],[15,"RenameAlias",1508],[15,"Ternary",1508],[15,"Function",1508],[15,"Window",1508],[15,"AnonymousFunction",1508],[15,"Slice",1508],[15,"BinaryExpr",1508],[15,"QCut",1898],[15,"Entropy",1898],[15,"Log",1898],[15,"Hist",1898],[15,"Cut",1898],[15,"Correlation",1898],[15,"Round",1898],[15,"TopK",1898],[15,"TopKBy",1898],[15,"RoundSF",1898],[15,"EwmMeanBy",1898],[15,"Clip",1898],[15,"BackwardFill",1898],[15,"ForwardFill",1898],[15,"Random",1898],[15,"GatherEvery",1898],[15,"ValueCounts",1898],[15,"Rank",1898],[15,"EwmMean",1898],[15,"EwmStd",1898],[15,"EwmVar",1898],[15,"ReplaceStrict",1898],[15,"CumCount",1898],[15,"CumSum",1898],[15,"CumProd",1898],[15,"CumMin",1898],[15,"CumMax",1898],[15,"ConcatHorizontal",1943],[15,"ConcatVertical",1943],[15,"ExtractGroups",1943],[15,"JsonDecode",1943],[15,"PadStart",1943],[15,"PadEnd",1943],[15,"SplitExact",1943],[15,"Contains",1943],[15,"Find",1943],[15,"Replace",1943],[15,"DatetimeFunction",1963],[15,"GroupBy",3331],[15,"Union",3331],[15,"Sort",3331],[15,"Cache",3331],[15,"ExtContext",3331],[15,"DataFrameScan",3331],[15,"IR",3331],[15,"Select",3331],[15,"HStack",3331],[15,"Scan",3331],[15,"MapFunction",3331],[15,"Filter",3331],[15,"Distinct",3331],[15,"Slice",3331],[15,"Sink",3331],[15,"Join",3331],[15,"HConcat",3331],[15,"PythonScan",3331],[15,"Range",3386]],"r":[[7,3391],[21,3394],[30,3397],[32,3418],[37,3419],[38,3416],[42,3417],[43,3417],[66,3423],[76,3423],[86,3391],[90,3391],[91,3426],[92,3451],[98,3407],[99,3451],[109,3404],[110,3397],[116,3397],[130,3434],[146,3424],[157,3395],[158,3434],[173,3390],[191,3424],[198,3391],[209,3421],[220,3397],[230,3424],[239,3397],[240,3397],[251,3397],[259,3422],[266,3424],[268,3436],[274,3420],[276,3417],[296,3439],[301,3414],[306,3417],[309,3424],[310,3424],[348,3508],[352,3509],[359,3509],[362,3510],[366,3511],[368,3512],[383,3513],[385,3513],[391,3514],[392,3515],[394,3511],[396,3417],[461,3516],[468,3515],[471,3511],[554,3509],[555,3508],[556,3508],[557,3517],[558,3517],[559,3517],[568,3518],[570,3509],[574,3509],[579,3512],[580,3423],[581,3512],[582,3512],[717,3511],[719,3508],[720,3508],[721,3423],[804,3511],[842,3509],[845,3517],[909,3511],[951,3508],[984,3512],[985,3512],[1034,3515],[1036,3515],[1046,3511],[1049,3511],[1053,3452],[1063,3510],[1074,3511],[1077,3511],[1084,3515],[1088,3509],[1089,3515],[1092,3509],[1093,3515],[1101,3515],[1105,3509],[1131,3515],[1133,3511],[1145,3518],[1152,3511],[1155,3515],[1159,3509],[1163,3519],[1176,3518],[1177,3518],[1249,3518],[1257,3511],[1262,3515],[1266,3509],[1272,3417],[1275,3512],[1420,3511],[1467,3417],[1610,3411],[1630,3416],[1631,3433],[1704,3418],[1708,3419],[1753,3404],[1813,3421],[1850,3422],[1861,3420],[1890,3404],[1891,3404],[1892,3404],[1893,3404],[1894,3404],[1965,3419],[1969,3421],[1975,3469],[2008,3470],[2051,3471],[2080,3423],[2081,3423],[2082,3508],[2083,3509],[2085,3509],[2086,3510],[2087,3512],[2088,3513],[2089,3513],[2090,3514],[2091,3515],[2092,3515],[2093,3509],[2094,3508],[2096,3508],[2098,3517],[2101,3517],[2102,3517],[2103,3518],[2104,3509],[2105,3509],[2106,3512],[2107,3512],[2108,3423],[2109,3512],[2110,3512],[2113,3508],[2114,3508],[2115,3423],[2116,3509],[2117,3517],[2120,3508],[2121,3512],[2122,3512],[2123,3515],[2124,3515],[2125,3510],[2126,3515],[2127,3515],[2128,3515],[2132,3515],[2137,3515],[2138,3518],[2139,3515],[2140,3509],[2141,3519],[2142,3518],[2143,3518],[2146,3518],[2147,3515],[2148,3512],[2149,3512],[2155,3453],[2156,3453],[2157,3453],[2158,3453],[2201,3465],[2262,3414],[2268,3488],[2269,3482],[2272,3484],[2273,3489],[2276,3486],[2277,3488],[2278,3489],[2279,3480],[2280,3485],[2281,3487],[2714,3479],[2715,3479],[2716,3446],[2724,3495],[2731,3431],[2732,3427],[2734,3457],[2751,3496],[2753,3491],[2754,3491],[2755,3491],[2756,3497],[2758,3452],[2759,3452],[2765,3452],[2766,3452],[2771,3498],[2772,3457],[2775,3456],[2776,3456],[2777,3457],[2793,3446]],"b":[[587,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[588,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[589,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[664,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[665,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[666,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[724,"impl-Expr"],[725,"impl-PartialEq-for-Expr"],[728,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[729,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[815,"impl-Debug-for-Expr"],[816,"impl-Display-for-Expr"],[818,"impl-Debug-for-Operator"],[819,"impl-Display-for-Operator"],[821,"impl-Display-for-BooleanFunction"],[822,"impl-Debug-for-BooleanFunction"],[823,"impl-Debug-for-CategoricalFunction"],[824,"impl-Display-for-CategoricalFunction"],[825,"impl-Debug-for-TemporalFunction"],[826,"impl-Display-for-TemporalFunction"],[827,"impl-Display-for-PowFunction"],[828,"impl-Debug-for-PowFunction"],[829,"impl-Display-for-StringFunction"],[830,"impl-Debug-for-StringFunction"],[831,"impl-Debug-for-FunctionExpr"],[832,"impl-Display-for-FunctionExpr"],[859,"impl-From%3CAggExpr%3E-for-Expr"],[860,"impl-From%3Cf32%3E-for-Expr"],[861,"impl-From%3Ci32%3E-for-Expr"],[862,"impl-From%3C%26str%3E-for-Expr"],[863,"impl-From%3Ci16%3E-for-Expr"],[864,"impl-From%3Cu8%3E-for-Expr"],[865,"impl-From%3Cu64%3E-for-Expr"],[866,"impl-From%3Cu16%3E-for-Expr"],[867,"impl-From%3Cf64%3E-for-Expr"],[868,"impl-From%3Ci8%3E-for-Expr"],[869,"impl-From%3Ci64%3E-for-Expr"],[871,"impl-From%3Cu32%3E-for-Expr"],[872,"impl-From%3Cbool%3E-for-Expr"],[875,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[876,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[877,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[878,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[879,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[880,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[882,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[883,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[884,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[885,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[886,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[892,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[893,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[894,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[895,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[929,"impl-Hash-for-Expr"],[930,"impl-Expr"],[1214,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1215,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1216,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1991,"impl-Display-for-RollingFunction"],[1992,"impl-Debug-for-RollingFunction"],[2023,"impl-Debug-for-RollingFunctionBy"],[2024,"impl-Display-for-RollingFunctionBy"],[2067,"impl-Display-for-TrigonometricFunction"],[2068,"impl-Debug-for-TrigonometricFunction"],[2444,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2445,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2675,"impl-LazyFileListReader-for-LazyCsvReader"],[2676,"impl-LazyCsvReader"],[2677,"impl-LazyJsonLineReader"],[2678,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2695,"impl-LazyFileListReader-for-LazyCsvReader"],[2696,"impl-LazyCsvReader"],[2697,"impl-LazyJsonLineReader"],[2698,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3062,"impl-Debug-for-Duration"],[3063,"impl-Display-for-Duration"],[3067,"impl-Debug-for-JoinType"],[3068,"impl-Display-for-JoinType"],[3069,"impl-Debug-for-JoinValidation"],[3070,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJIJ8QAEABEAFwAPACgAAgAtABUARAAIAE4ABwBXAAIAXAAAAF4AFwB3ABoAkwACAJcABgCfAA4ArwAUAMUABADLACMA8gAJAP0ADwAOAQUAFgEXAC8BAwA0AQAANgEiAFoBAABfAQAAYgEBAGYBAABsAQAAbgEAAHkBAAB8AQAAgwEBAIYBAQCLAQAAjgE9AM4BAADQAQAA0gEBANgBAADfAUsALgIAAEgCDABWAlEAqgIAAKwCHgDMAgAAzgIAANQCAADWAhAA6AIpABoDAAAdAwEAIwMAACkDAAAsAx4ATAMAAFwDCgBoAwEAbAMFAHMDBAB9AwMAhwMAAIwDAACOAwAAkwMBAJgDBQChAwEApAMNALUDAQC5Ax4A/AMCAAAEAAAUBAAAHAQAACkEAAAsBAUANQQAADgEAABIBAAASwQCAFMEAgBXBAMAYAQBAGQEAgBqBAEAdgQAAHgEAQB/BAAAgQQAAIkEAQCPBAAAkQQAAJMEAACYBAIAsgQFALkEFADXBAAA3gQAAOUEAADqBAAA7AQAAO4EAAD0BAAA+QQAAPsEAAD9BAIABAUYAB4FCAArBT0AawUAAG0FIACaBQAAnAUfAL8FAQDEBQAA0QUAANUFAQDaBRMA8QUBAPQFAQD3BQEA+gUGAAIGSABMBgMAUQYCAFYGAgBbBgMAYwYBAGwGAgByBgAAdAYAAIEGAACQBgMAmAYxAcsHAQDOBxsA6wcBAO4HJwAXCAEAGggGACUIAAAzCAAAQAgBAEcIAQBSCAIAVggDAF8IAwBnCB4AiAgDAI4ICwCbCAMAoggCAKgIAACtCAIAsggBANIIAwDeCAMA5QgAAOcIDQD4CAAA+wgUABEJAQAWCRsANAkBADoJAABBCQAARAkYAGEJAwBmCQYAgwkAAIUJAQCICQAAjQkBAJgJAgCgCQAAogkKALwJAQDBCQEAxAkAAMYJAADKCQEA0AkDANUJBQDdCQQA6gkDAPcJAwD8CQAAAAoBAAMKAAAFCgAAEAoAAB0KAQAgCh0AQAoJAE4KAQBRCgkAXAoAAF4KAABmCgEAdAoAAHcKAQB8CgEAiAoAAIsKAACZCgcApAoAAKcKAQCqCgAArAoDALIKAAC1CgAAuQoCAMAKAADCCgYAzAoCANAKAADTCggA3QoCAOIKAADkCgAA6goTAAELYgBoC4sA9QsTAA4MAAAcDAAAHgwRADEMAAA0DBEAWAwBAFsMAABdDAAAYAwDAGcMBQBuDAEAcgwAAHQMAgB4DAEAfAwCAIIMFQCZDKQA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[239,"polars_ops::prelude"],[241,"polars_ops::series"],[294,"polars_ops::chunked_array::binary"],[295,"polars_core::datatypes"],[296,"polars_ops::chunked_array::binary::namespace"],[297,"polars_ops::chunked_array::scatter"],[298,"polars_utils::index"],[299,"polars_core::series"],[300,"polars_error"],[301,"core::marker"],[302,"core::option"],[303,"core::iter::traits::collect"],[304,"polars_ops::chunked_array::list::namespace"],[305,"polars_core::datatypes::aliases"],[306,"polars_core::chunked_array::ops::sort::options"],[307,"polars_core::frame"],[308,"dyn_clone::sealed"],[309,"polars_ops::frame::join::hash_join"],[310,"polars_ops::frame::join::args"],[311,"alloc::string"],[312,"polars_ops::frame::join::cross_join"],[313,"core::fmt"],[314,"core::convert"],[315,"core::hash"],[316,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[317,"polars_arrow::array::primitive"],[318,"core::result"],[319,"core::any"],[320,"polars_ops::series::ops::arg_min_max"],[321,"polars_ops::series::ops"],[322,"polars_core::chunked_array::ops::search_sorted"],[323,"polars_ops::series::ops::various"],[324,"polars_ops::frame::join::general"],[325,"polars_ops::series::ops::clip"],[326,"polars_ops::series::ops::horizontal"],[327,"polars_ops::series::ops::index"],[328,"polars_ops::series::ops::negate"],[329,"polars_ops::series::ops::not"],[330,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,36,36,37,38,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{c}}}Cl{}}00000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}{{{d{Db}}}Bh}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{c}}}Cl{}}0{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEl}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDdBh}{{Af{Ch}}}}0","D":"Eh","p":[[10,"AsBinary",4,294],[1,"reference"],[8,"BinaryChunked",295],[10,"BinaryNameSpaceImpl",4,296],[1,"u8"],[1,"slice"],[8,"BooleanChunked",295],[10,"ChunkedSet",4,297],[8,"IdxSize",298],[5,"Series",299],[8,"PolarsResult",300],[10,"Copy",301],[17,"Item"],[6,"Option",302],[10,"IntoIterator",303],[10,"AsList",23],[8,"ListChunked",295],[10,"ListNameSpaceImpl",23,304],[1,"str"],[1,"bool"],[8,"StringChunked",295],[8,"IdxCa",305],[1,"i64"],[1,"usize"],[5,"SortOptions",306],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",307],[5,"Private",308],[1,"unit"],[10,"JoinDispatch",78,309],[8,"LeftJoinIds",78,310],[5,"JoinArgs",78,310],[5,"String",311],[0,"mut"],[6,"JoinCoalesce",78,310],[6,"JoinType",78,310],[6,"JoinValidation",78,310],[10,"CrossJoin",78,312],[1,"tuple"],[8,"ChunkJoinOptIds",78,310],[5,"Formatter",313],[8,"Result",313],[10,"DataFrameJoinOps",78],[10,"AsRef",314],[10,"Hasher",315],[10,"SeriesJoin",78,316],[8,"InnerJoinIds",78,310],[5,"PrimitiveArray",317],[6,"Result",318],[5,"TypeId",319],[10,"ArgAgg",241,320],[10,"SeriesSealed",241,321],[6,"SearchSortedSide",241,322],[10,"SeriesMethods",241,323],[5,"Error",313]],"r":[[4,294],[5,296],[6,297],[24,304],[78,310],[79,310],[82,312],[86,310],[87,310],[88,310],[89,309],[91,310],[92,310],[95,310],[100,316],[105,324],[108,324],[113,324],[147,309],[239,78],[240,74],[242,320],[245,322],[246,323],[247,321],[254,325],[255,325],[256,325],[261,326],[262,327],[278,327],[281,326],[282,326],[283,326],[284,328],[285,329],[286,330],[287,326]],"b":[[178,"impl-Display-for-JoinType"],[179,"impl-Debug-for-JoinType"],[180,"impl-Debug-for-JoinValidation"],[181,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPoAEQAAAAgACwABAA8AAgAVAA8AKQA3AGUABQBtAB8AjwAoAL0ADADPAAEA0gAAANQAHgD0AAUA/AACAAIBEAAUAQEAGgEKAA=="}],\
["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNNNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[112,"polars_sql::keywords"],[114,"dyn_clone::sealed"],[115,"polars_sql::context"],[116,"polars_lazy::frame"],[117,"polars_error"],[118,"alloc::string"],[119,"polars_utils::aliases"],[120,"alloc::vec"],[121,"alloc::sync"],[122,"polars_plan::dsl::expr"],[123,"core::convert"],[124,"core::result"],[125,"core::any"],[126,"polars_plan::plans::options"],[127,"polars_plan::plans"],[128,"core::fmt"],[129,"polars_plan::dsl::udf"],[130,"core::option"],[131,"core::hash"],[132,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,19,21,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",114],[1,"unit"],[0,"mut"],[5,"SQLContext",0,115],[1,"usize"],[1,"str"],[5,"LazyFrame",116],[8,"PolarsResult",117],[5,"String",118],[8,"PlHashMap",119],[5,"Vec",120],[10,"FunctionRegistry",32],[5,"Arc",121],[6,"Expr",122],[10,"AsRef",123],[6,"Result",124],[5,"TypeId",125],[5,"FunctionOptions",32,126],[1,"bool"],[6,"Context",32,127],[5,"DefaultFunctionRegistry",32],[5,"Formatter",128],[5,"Error",128],[5,"UserDefinedFunction",129],[6,"Option",130],[10,"Hasher",131]],"r":[[0,115],[24,132],[33,127],[36,126]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE4ADAACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABUAPwARAFUABABfAAAAYQAAAGMADQA="}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[84,"polars_time::prelude"],[294,"polars_time::series"],[315,"chrono::naive::datetime"],[316,"polars_time::windows::duration"],[317,"polars_time::windows::group_by"],[318,"polars_core::datatypes::time_unit"],[319,"polars_arrow::legacy::time_zone"],[320,"core::option"],[321,"polars_core::chunked_array::logical::datetime"],[322,"polars_error"],[323,"polars_time::round"],[324,"polars_core::datatypes"],[325,"chrono::naive::time"],[326,"polars_core::chunked_array::logical::time"],[327,"polars_time::truncate"],[328,"polars_time::upsample"],[329,"polars_core::frame"],[330,"alloc::string"],[331,"polars_core::utils"],[332,"dyn_clone::sealed"],[333,"polars_time::chunkedarray::string::patterns"],[334,"core::fmt"],[335,"core::hash"],[336,"core::result"],[337,"core::any"],[338,"core::clone"],[339,"polars_time::windows::bounds"],[340,"polars_time::windows::window"],[341,"core::cmp"],[342,"polars_core::datatypes::dtype"],[343,"polars_core::frame::group_by::proxy"],[344,"alloc::vec"],[345,"core::ops::function"],[346,"polars_core::series"],[347,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,41,41,4,4,5,5,42,42,43,43,44,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}0{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{cc{}}{{{d{b}}}{{A`{Cb}}}}{{}Cd}{ce{}{}}`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}1{{{d{c}}}Cn{}}````````````````````````{{{d{c}}Bj}Bl{}}00000{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}{{d{e}}}{}{}}000000{{{d{C`c}}}{{d{C`e}}}{}{}}000000{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{c}}{d{C`e}}}Bl{}{}}00000{{{d{c}}}Bl{}}00000000000{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",315],[5,"Duration",84,316],[6,"ClosedWindow",84,317],[6,"TimeUnit",318],[6,"Tz",319],[6,"Option",320],[8,"DatetimeChunked",321],[8,"PolarsResult",322],[1,"bool"],[10,"PolarsRound",0,323],[8,"StringChunked",324],[5,"NaiveTime",325],[8,"TimeChunked",326],[10,"PolarsTruncate",0,327],[10,"PolarsUpsample",0,328],[5,"DataFrame",329],[5,"String",330],[10,"IntoVec",331],[5,"Private",332],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,333],[1,"usize"],[5,"Formatter",334],[8,"Result",334],[10,"Hasher",335],[6,"Result",336],[5,"TypeId",337],[5,"DatetimeInfer",58],[10,"Clone",338],[10,"PolarsNumericType",324],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",84,339],[6,"Label",84,317],[6,"StartBy",84,317],[5,"Window",84,340],[6,"Ordering",341],[6,"DataType",342],[5,"BoundsIter",84,340],[8,"GroupsSlice",343],[8,"TimeZone",342],[5,"Vec",344],[1,"tuple"],[17,"Output"],[10,"Fn",345],[1,"u32"],[10,"AsSeries",294],[5,"Series",346],[10,"TemporalMethods",294],[8,"Int32Chunked",324],[8,"Int8Chunked",324],[8,"BooleanChunked",324],[8,"Int16Chunked",324]],"r":[[1,317],[2,316],[5,323],[6,327],[7,328],[9,340],[11,347],[12,347],[18,347],[22,24],[30,333],[85,339],[86,340],[87,317],[90,316],[92,317],[100,317],[102,294],[106,340],[181,316],[182,316],[216,317],[217,317]],"b":[[200,"impl-Display-for-Duration"],[201,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAEBFwAAAAkADQAFABQAAAAXABkAMgACADYAEQBJAAEATAATAGEACQBsAGEA1QAAANcAAQDbAAoA7QABAPEAAgD1AAAA+AACAPwAAQABAQgACwEAAA0BAAAPARoALgEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[42,"polars_utils::abs_diff"],[46,"polars_utils::aliases"],[62,"polars_utils::arena"],[126,"polars_utils::atomic"],[147,"polars_utils::binary_search"],[149,"polars_utils::cache"],[186,"polars_utils::cell"],[206,"polars_utils::clmul"],[210,"polars_utils::contention_pool"],[225,"polars_utils::cpuid"],[227,"polars_utils::fixedringbuffer"],[250,"polars_utils::float"],[256,"polars_utils::floor_divmod"],[258,"polars_utils::functions"],[262,"polars_utils::hashing"],[296,"polars_utils::idx_vec"],[341,"polars_utils::index"],[407,"polars_utils::io"],[409,"polars_utils::iter"],[422,"polars_utils::mem"],[423,"polars_utils::min_max"],[430,"polars_utils::nulls"],[435,"polars_utils::ord"],[437,"polars_utils::partitioned"],[456,"polars_utils::slice"],[470,"polars_utils::sort"],[472,"polars_utils::sync"],[497,"polars_utils::sys"],[511,"polars_utils::total_ord"],[563,"polars_utils::unwrap"],[565,"polars_utils::vec"],[578,"num_traits"],[579,"core::cmp"],[580,"core::marker"],[581,"core::fmt"],[582,"core::clone"],[583,"core::option"],[584,"core::hash"],[585,"core::default"],[586,"core::ops::function"],[587,"core::result"],[588,"core::any"],[589,"core::borrow"],[590,"alloc::sync"],[591,"alloc::vec"],[592,"core::convert"],[593,"core::ops::range"],[594,"core::iter::traits::collect"],[595,"polars_utils::iter::fallible"],[596,"core::slice::iter"],[597,"polars_error"],[598,"std::fs"],[599,"std::path"],[600,"polars_utils::iter::enumerate_idx"],[601,"core::error"],[602,"core::iter::traits::iterator"],[603,"hashbrown::map"],[604,"core::mem::maybe_uninit"],[605,"core::slice::index"],[606,"num_traits::cast"],[607,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,114,0,0,0,0,0,114,10,11,115,116,114,10,11,115,116,0,0,13,15,13,15,13,13,15,13,15,13,15,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,13,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,47,47,47,47,47,0,48,0,0,0,0,0,0,53,53,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,67,0,0,0,0,65,66,65,66,0,65,66,65,66,65,65,66,66,65,66,65,66,65,66,65,65,65,65,66,65,66,65,65,66,67,67,65,65,66,65,66,65,66,69,66,65,65,69,65,66,70,66,71,65,65,66,65,66,65,66,65,66,0,0,0,0,0,79,0,79,74,74,74,74,75,60,79,0,0,81,81,81,81,81,81,68,68,0,68,68,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,87,89,89,91,0,92,92,93,93,0,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,98,98,98,98,98,98,98,98,98,98,98,98,106,0,0,0,0,106,0,101,101,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,106,101,106,94,102,94,94,103,103,94,94,102,101,101,101,101,0,107,0,0,0,109,0,0,109,109,110,111,112,111,113],"f":"````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}00{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}D`}{Ab{{Al{c}}}{}}{{{Al{D`}}}{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{Eb{c}}}{}}{cc{}}{Edc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}:9{{{Al{{Ej{c}}}}}Ab{}}98{{{Al{Ah{Ej{c}}}}}B`{}}8{{{Al{Ah{Ej{c}}}}cAb}Abj}8{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}05{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}8{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`<<{{{Al{En}}}Bf}=0`{{F`F`}{{El{F`F`}}}}{{{Fb{c}}e}{{Fb{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Ff{{Db{c}}}}}}{{AbAb{Fh{Ab}}}{{Fh{Ab}}}}{{{Fb{c}}g}{{Ch{{Fb{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fj}}}Fj}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fl}}}Ef}{{{Al{Fj}}}Ef}{AbB`}{{{Al{Fj}}{Al{Fj}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fj}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fj}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fj}}}Bf}{{{Bn{{Al{{Db{Fn}}}}}}Ef}Fj}2{{{Al{c}}}e{}{}}{{{Al{Fj}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fjc{}}``{{{Al{Ah{G`{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{G`{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{G`{c}}}}}Ab{}}{{{Al{{G`{c}}}}}{{G`{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{G`{c}}}{}}{{{Al{{G`{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{G`{c}}}}}B`{}}{AbB`}{{{Al{{G`{c}}}}{Al{{G`{c}}}}}BfGb}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{G`{c}}}}e}B`{}{{Gf{}{{Gd{c}}}}}}{{{Al{{G`{c}}}}{Al{AhBh}}}Bjl}{{{Al{{Db{c}}}}}{{G`{c}}}Bb}{{{Fd{c}}}{{G`{c}}}{}}{cc{}}{g{{Ch{ic}}}{}{}{{Gh{c}{{Gd{e}}}}}{}}{e{{G`{c}}}{}{{Gf{}{{Gd{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{G`{c}}}}}Bf{}}{{{Al{{G`{c}}}}}{{Gj{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Gl{c}}}{}}{{{Al{{G`{c}}}}}Ab{}}{{}{{G`{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{G`{c}}}}c}B`{}}0{{{Al{Ah{G`{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{G`{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gn}}}}Gn}{{H`{B`}}}}{{{Al{Hb}}}Hb}{{{Al{Hd}}}Hd}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}000{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hb}}{Al{Hb}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hd{{El{GnGn}}}}{{{Al{Hb}}{Al{AhBh}}}Bj}{{{Al{Hd}}{Al{AhBh}}}Bj}{cc{}}{GnHb}1{{{Al{{Hf{}{{Gd{c}}}}}}Ab}cHh}0{{{Al{Hb}}}Gn}{{}Ab}0`{{{Al{AhHd}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hj}}}Bf}{{{Al{Hd}}}Bf}{{{Al{Hb}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hj}}}Ab}{{}Hb}{{}Hd}{{{Al{Hl}}}Ab}{{GnGn}Hd}{{HnEf}Gn}{{{Al{Hb}}}{{Bn{Gn}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{H`{I`}}}{{Ff{Ib}}}}0``````{Id{{`{IdGn}}}}0{Id{{`{IdCn}}}}0{g{{Ch{Ifc}}}Ih{}{{Gh{c}{{Gd{e}}}}}}{{{Al{AhGh}}}{{Ch{B`c}}}Ih}{{{In{}{{Ij{c}}{Il{e}}}}}e{}{{J`{}{{Gd{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JbJb}Jb}000{{{Al{Jb}}{Al{Jb}}}Bf}0```{{{Al{{Hh{}{{Jd{c}}}}}}}Bf{}}{{{Hh{}{{Jd{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jf{ceg}}}}}{{Al{{Db{{Jh{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}}{{Al{Ah{Fd{{Jh{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Jh{ceg}}}}}{{Jf{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{El{{Jl{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{Jl{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jn}}}{{Al{{Db{{K`{c}}}}}}}{}}{{{Al{Kb}}e}Al{}{{Kd{{Db{c}}}}}}{{{Al{AhKb}}e}{{Al{Ah}}}{}{{Kd{{Db{c}}}}}}{{{Al{Kf}}}Bf}{{{Al{{Db{Fn}}}}}Ef}{{{Al{Kh}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kj}}{Fh{Ab}}}Kj}0{{e{Al{Ah{Fd{Fn}}}}Ab}{{Al{Ah{Db{g}}}}}{Klj}{{Gf{}{{Gd{c}}}}}{Knj}}{{{Al{L`}}{Al{{Db{{El{GnGn}}}}}}{Al{Ah{Fd{Gn}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Lb{c}}}}}{{Lb{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lb{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Lb{c}}}}{Al{AhBh}}}Bjl}{{}{{Lb{c}}}{}}{cc{}}1{{{Al{{Lb{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Lb{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Ld}}}Ef}:87443```````21{LfLf}{LhLh}{{{Al{{Lj{c}}}}}{{Lj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BdKl}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lj{c}}}}}EfFl}{AbB`}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BfLl}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BfKl}0{{{Al{{Lj{c}}}}{Al{Ahe}}}B`LnC`}{{}Ab}{ce{}{}}{{{Al{{Lj{c}}}}}BfHh}447{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}{{Bn{Bd}}}Kl}2{{{Al{c}}}e{}{}}{{{Al{{Md{}{{M`{c}}{Mb{e}}}}}}}c{}{}}{{{Al{Kl}}{Al{Kl}}}Bd}{{{Al{Ll}}{Al{Ll}}}Bf}{{{Al{Kl}}{Al{Kl}}}Bf}0{{{Al{Ln}}{Al{Ahc}}}B`C`}{{{Al{{Db{Ln}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lj{c}}}eHh{}}`{Mfc{}}``````{{{Al{{Mj{}{{Mh{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mj{}{{Mh{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMl}}Abc}B`j}{Mn{{El{AbAb}}}}{{{Al{AhN`}}c}B`{}}{{{Al{Mn}}}{{El{AbAb}}}}{{AbLh}Nb}","D":"Jb","p":[[17,"Abs"],[10,"AbsDiff",42],[10,"Num",578],[10,"PartialOrd",579],[10,"Copy",580],[10,"Debug",581],[10,"Send",580],[10,"Sync",580],[1,"usize"],[8,"PlHashMap",46],[8,"PlHashSet",46],[0,"mut"],[5,"Arena",62],[1,"reference"],[5,"Node",62],[1,"unit"],[10,"Clone",582],[6,"Ordering",579],[1,"bool"],[5,"Formatter",581],[8,"Result",581],[1,"array"],[6,"Option",583],[10,"Hasher",584],[10,"Default",585],[17,"Output"],[10,"FnOnce",586],[6,"Result",587],[10,"FnMut",586],[5,"TypeId",588],[1,"u32"],[5,"SyncCounter",126],[1,"slice"],[10,"Ord",579],[5,"FastFixedCache",149],[10,"Hash",584],[10,"Eq",579],[5,"FastCachedFunc",149],[10,"Sized",580],[10,"Borrow",589],[5,"SyncUnsafeCell",186],[1,"never"],[1,"u64"],[5,"LowContentionPool",210],[5,"FixedRingBuffer",227],[1,"tuple"],[10,"IsFloat",250],[10,"FloorDivMod",256],[5,"Arc",590],[5,"Vec",591],[10,"AsRef",592],[5,"Range",593],[5,"BytesHash",262],[10,"DirtyHash",262],[1,"u8"],[5,"UnitVec",296],[10,"PartialEq",579],[17,"Item"],[10,"IntoIterator",594],[10,"FallibleIterator",409,595],[5,"Iter",596],[5,"IterMut",596],[8,"IdxSize",341],[8,"PolarsResult",597],[5,"NullableIdxSize",341],[5,"ChunkId",341],[10,"Indexable",341],[10,"IsNull",430],[10,"Bounded",341],[10,"NullCount",341],[10,"ToIdx",341],[5,"File",598],[5,"Path",599],[10,"EnumerateIdxTrait",409,600],[10,"FromFallibleIterator",409,595],[10,"Error",601],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",409],[10,"Iterator",602],[10,"MinMax",423],[17,"Inner"],[5,"PartitionedHashMap",437],[5,"HashMap",603],[5,"RawEntryBuilder",603],[5,"RawEntryBuilderMut",603],[10,"Slice2Uninit",456],[20,"MaybeUninit",604],[10,"GetSaferUnchecked",456],[10,"SliceIndex",605],[10,"SortedSlice",456],[10,"Extrema",456],[10,"SliceAble",456],[10,"TotalOrd",511],[10,"FromPrimitive",606],[5,"ThreadPool",607],[5,"SyncPtr",472],[5,"MemInfo",497],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",511],[10,"TotalEq",511],[10,"TotalHash",511],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",511],[10,"UnwrapUncheckedRelease",563],[17,"ItemIn"],[10,"ConvertVec",565],[10,"ResizeFaster",565],[10,"IntoRawParts",565],[10,"PushUnchecked",565],[10,"CapacityByFactor",565],[10,"InitHashMaps",46],[8,"PlIndexMap",46],[8,"PlIndexSet",46]],"r":[[0,341],[1,341],[409,600],[410,595],[411,595]],"b":[[320,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[321,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPEBOgAAAAgACgBUAGEAAABjAAEAZgACAGsAEwCAAAoAjAAAAI8ABACXAA8AqQAFALEACQC8AAEAvwACAMQAAADHAAAAzAAMANoAAQDdAAYA5gAGAO8AAADxAAMA9wADAPwACgAIARAAGgECAB4BCwArARcARAECAEgBBgBQASgAegEAAHwBAAB+AQQAhQEXAJ4BAACgAQYAqAELALYBBQC9AQIAwQENANEBBADXAQAA2gEHAOMBAgDnAQIA6wEAAO0BBQD0AQQA+wEAAP0BAwAFAgMACwINABoCAwAfAhUANgIEADwCAwBBAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
